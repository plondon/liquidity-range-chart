{"ast":null,"code":"var _jsxFileName = \"/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport Brush from './Brush';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst D3Chart = ({\n  data,\n  liquidityData\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [panY, setPanY] = useState(0);\n  const [initialViewSet, setInitialViewSet] = useState(false);\n  const [initialZoom, setInitialZoom] = useState(1);\n  const [initialPan, setInitialPan] = useState(0);\n\n  // Brush state for price range selection\n  const [minPrice, setMinPrice] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(null);\n\n  // Brush extent as [min, max] array\n  const brushExtent = useMemo(() => {\n    if (minPrice !== null && maxPrice !== null) {\n      return [minPrice, maxPrice];\n    }\n    return null;\n  }, [minPrice, maxPrice]);\n  const setBrushExtent = extent => {\n    if (extent && extent.length === 2) {\n      setMinPrice(extent[0]);\n      setMaxPrice(extent[1]);\n    } else {\n      setMinPrice(null);\n      setMaxPrice(null);\n    }\n  };\n  useEffect(() => {\n    if (!data || !liquidityData) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const margin = {\n      top: 20,\n      right: 120,\n      bottom: 50,\n      left: 80\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n    const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [...priceData.map(d => d.value), ...liquidityData.map(d => d.price0)];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime().domain(d3.extent(priceData, d => d.date)).range([0, width]);\n\n    // Apply zoom and pan to the unified price scale\n    const baseYScale = d3.scaleLinear().domain(priceExtent).range([height, 0]);\n\n    // Create zoomed scale\n    const priceRange = priceExtent[1] - priceExtent[0];\n    const zoomedRange = priceRange / zoomLevel;\n    const centerPrice = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n    const yScale = d3.scaleLinear().domain([centerPrice - zoomedRange / 2, centerPrice + zoomedRange / 2]).range([height, 0]);\n\n    // Line generator for price\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.value)).curve(d3.curveMonotoneX);\n\n    // Draw price line\n    g.append(\"path\").datum(priceData).attr(\"fill\", \"none\").attr(\"stroke\", \"#2196F3\").attr(\"stroke-width\", 2).attr(\"d\", line);\n\n    // Remove X and left Y axes completely\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right - 60; // Make room for 4-character price labels\n\n    // Use the same unified y scale for liquidity positioning\n    const liquidityYScale = yScale;\n\n    // Calculate current visible price range for filtering liquidity data\n    const currentPriceRange = priceExtent[1] - priceExtent[0];\n    const currentZoomedRange = currentPriceRange / zoomLevel;\n    const currentCenterPrice = priceExtent[0] + currentPriceRange * 0.5 + panY * currentPriceRange;\n    const visibleMinPrice = currentCenterPrice - currentZoomedRange / 2;\n    const visibleMaxPrice = currentCenterPrice + currentZoomedRange / 2;\n\n    // Filter liquidity data to only entries within visible price range\n    const visibleLiquidityData = liquidityData.filter(d => d.price0 >= visibleMinPrice && d.price0 <= visibleMaxPrice);\n\n    // X scale for liquidity amounts - scale based only on visible entries\n    const maxVisibleLiquidity = visibleLiquidityData.length > 0 ? d3.max(visibleLiquidityData, d => d.activeLiquidity) : d3.max(liquidityData, d => d.activeLiquidity); // Fallback if no visible data\n\n    const liquidityXScale = d3.scaleLinear().domain([0, maxVisibleLiquidity]).range([0, liquidityWidth]);\n\n    // Draw very thin grey horizontal liquidity bars using data join for better performance\n    const bars = g.selectAll(\".liquidity-bar\").data(liquidityData, d => d.price0); // Use price as key for consistent updates\n\n    // Remove bars that are no longer needed\n    bars.exit().transition().duration(150).style(\"opacity\", 0).remove();\n\n    // Add new bars\n    const enterBars = bars.enter().append(\"rect\").attr(\"class\", \"liquidity-bar\").attr(\"height\", 1).attr(\"fill\", \"#888888\").attr(\"opacity\", 0.7).attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity)).attr(\"y\", d => liquidityYScale(d.price0) - 0.5).attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n\n    // Update existing bars with smooth transitions\n    bars.merge(enterBars).transition().duration(100).attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity)).attr(\"y\", d => liquidityYScale(d.price0) - 0.5).attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n\n    // Remove right Y-axis - keep only the price labels\n\n    // Add price labels in the reserved space to the right using data join\n    const labelData = liquidityData.filter((d, i) => i % 10 === 0); // Show every 10th label to avoid clutter\n    const labels = g.selectAll(\".liquidity-price-label\").data(labelData, d => d.price0); // Use price as key\n\n    // Remove labels that are no longer needed\n    labels.exit().transition().duration(150).style(\"opacity\", 0).remove();\n\n    // Add new labels\n    const enterLabels = labels.enter().append(\"text\").attr(\"class\", \"liquidity-price-label\").attr(\"font-size\", \"8px\").attr(\"fill\", \"#666\").attr(\"text-anchor\", \"start\").attr(\"dy\", \"0.35em\").attr(\"opacity\", 1).attr(\"x\", width + liquidityWidth + 15) // Position in reserved label space\n    .attr(\"y\", d => liquidityYScale(d.price0)).text(d => d.price0.toFixed(0));\n\n    // Update existing labels with smooth transitions\n    labels.merge(enterLabels).transition().duration(100).attr(\"x\", width + liquidityWidth + 15).attr(\"y\", d => liquidityYScale(d.price0));\n\n    // Setup wheel event handler\n    const handleWheel = event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Calculate current view bounds\n      const priceRange = priceExtent[1] - priceExtent[0];\n      const zoomedRange = priceRange / zoomLevel;\n      const currentCenter = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n      const currentMin = currentCenter - zoomedRange / 2;\n      const currentMax = currentCenter + zoomedRange / 2;\n\n      // Natural scroll sensitivity based on current view range\n      const scrollSensitivity = zoomedRange / 600; // Faster scrolling for larger ranges\n      const rawScrollAmount = event.deltaY * scrollSensitivity;\n\n      // Apply scroll (invert deltaY for natural direction)\n      const scrollAmount = rawScrollAmount / priceRange; // Normalize to pan range\n\n      setPanY(prev => {\n        const newPanY = prev - scrollAmount;\n\n        // Dynamic bounds based on data and zoom level\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n        const halfZoomedRange = zoomedRange / 2;\n\n        // Calculate max pan bounds to keep view within data\n        const maxPanUp = (dataMax - halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        const maxPanDown = (dataMin + halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n\n        // Constrain to bounds\n        return Math.max(maxPanDown, Math.min(maxPanUp, newPanY));\n      });\n    };\n\n    // Add wheel event listener\n    const svgElement = svgRef.current;\n    if (svgElement) {\n      svgElement.addEventListener('wheel', handleWheel, {\n        passive: false\n      });\n      return () => svgElement.removeEventListener('wheel', handleWheel);\n    }\n  }, [data, liquidityData, zoomLevel, panY]);\n\n  // Set reasonable initial view on first load\n  useEffect(() => {\n    if (!initialViewSet && data && liquidityData && liquidityData.length > 0) {\n      const allPrices = [...data.map(d => d.value), ...liquidityData.map(d => d.price0)];\n      const priceExtent = d3.extent(allPrices);\n      const priceRange = priceExtent[1] - priceExtent[0];\n\n      // Filter out extreme outliers for initial view - focus on middle 40% of liquidity\n      const liquidityPrices = liquidityData.map(d => d.price0).sort((a, b) => a - b);\n      const percentile30 = liquidityPrices[Math.floor(liquidityPrices.length * 0.3)];\n      const percentile70 = liquidityPrices[Math.floor(liquidityPrices.length * 0.7)];\n\n      // Set initial zoom to focus on the 30-70% range of liquidity with tighter view\n      const focusRange = percentile70 - percentile30;\n      const desiredZoom = Math.min(priceRange / (focusRange * 1), 25); // Show ~1x the focus range, max 25x zoom\n\n      // Center the view on the price data, not liquidity\n      const priceDataExtent = d3.extent(data.map(d => d.value));\n      const priceCenter = (priceDataExtent[0] + priceDataExtent[1]) / 2;\n      const originalCenter = priceExtent[0] + priceRange * 0.5;\n      const panOffset = (priceCenter - originalCenter) / priceRange;\n      setZoomLevel(desiredZoom);\n      setPanY(panOffset);\n      setInitialZoom(desiredZoom);\n      setInitialPan(panOffset);\n      setInitialViewSet(true);\n    }\n  }, [data, liquidityData, initialViewSet]);\n  const handleZoomIn = () => {\n    setZoomLevel(prev => Math.min(prev * 1.3, 50));\n  };\n  const handleZoomOut = () => {\n    setZoomLevel(prev => Math.max(prev / 1.3, 0.1));\n  };\n  const handleResetZoom = () => {\n    setZoomLevel(initialZoom);\n    setPanY(initialPan);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n        zIndex: 10,\n        background: 'rgba(255, 255, 255, 0.9)',\n        padding: '8px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '4px',\n          fontSize: '12px',\n          fontWeight: 'bold'\n        },\n        children: [\"Zoom: \", zoomLevel.toFixed(1), \"x\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '4px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomIn,\n          style: {\n            fontSize: '12px',\n            padding: '2px 8px'\n          },\n          children: \"Zoom In (+)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleZoomOut,\n          style: {\n            fontSize: '12px',\n            padding: '2px 8px'\n          },\n          children: \"Zoom Out (-)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetZoom,\n          style: {\n            fontSize: '12px',\n            padding: '2px 8px'\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '10px',\n            color: '#666',\n            marginTop: '4px',\n            textAlign: 'center'\n          },\n          children: \"Scroll to pan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 800,\n      height: 400,\n      style: {\n        border: '1px solid #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(D3Chart, \"y3H/du5QpqtWmkv/aXZhWByIsdw=\");\n_c = D3Chart;\nexport default D3Chart;\nvar _c;\n$RefreshReg$(_c, \"D3Chart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","d3","Brush","jsxDEV","_jsxDEV","D3Chart","data","liquidityData","_s","svgRef","zoomLevel","setZoomLevel","panY","setPanY","initialViewSet","setInitialViewSet","initialZoom","setInitialZoom","initialPan","setInitialPan","minPrice","setMinPrice","maxPrice","setMaxPrice","brushExtent","setBrushExtent","extent","length","svg","select","current","selectAll","remove","margin","top","right","bottom","left","width","height","g","append","attr","priceData","map","d","date","Date","time","value","allPrices","price0","priceExtent","xScale","scaleTime","domain","range","baseYScale","scaleLinear","priceRange","zoomedRange","centerPrice","yScale","line","x","y","curve","curveMonotoneX","datum","liquidityWidth","liquidityYScale","currentPriceRange","currentZoomedRange","currentCenterPrice","visibleMinPrice","visibleMaxPrice","visibleLiquidityData","filter","maxVisibleLiquidity","max","activeLiquidity","liquidityXScale","bars","exit","transition","duration","style","enterBars","enter","merge","labelData","i","labels","enterLabels","text","toFixed","handleWheel","event","preventDefault","stopPropagation","currentCenter","currentMin","currentMax","scrollSensitivity","rawScrollAmount","deltaY","scrollAmount","prev","newPanY","dataMin","Math","min","dataMax","halfZoomedRange","maxPanUp","maxPanDown","svgElement","addEventListener","passive","removeEventListener","liquidityPrices","sort","a","b","percentile30","floor","percentile70","focusRange","desiredZoom","priceDataExtent","priceCenter","originalCenter","panOffset","handleZoomIn","handleZoomOut","handleResetZoom","position","children","zIndex","background","padding","borderRadius","border","marginBottom","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","onClick","color","marginTop","textAlign","ref","_c","$RefreshReg$"],"sources":["/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport Brush from './Brush';\n\nconst D3Chart = ({ data, liquidityData }) => {\n  const svgRef = useRef();\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [panY, setPanY] = useState(0);\n  const [initialViewSet, setInitialViewSet] = useState(false);\n  const [initialZoom, setInitialZoom] = useState(1);\n  const [initialPan, setInitialPan] = useState(0);\n  \n  // Brush state for price range selection\n  const [minPrice, setMinPrice] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(null);\n  \n  // Brush extent as [min, max] array\n  const brushExtent = useMemo(() => {\n    if (minPrice !== null && maxPrice !== null) {\n      return [minPrice, maxPrice];\n    }\n    return null;\n  }, [minPrice, maxPrice]);\n  \n  const setBrushExtent = (extent) => {\n    if (extent && extent.length === 2) {\n      setMinPrice(extent[0]);\n      setMaxPrice(extent[1]);\n    } else {\n      setMinPrice(null);\n      setMaxPrice(null);\n    }\n  };\n\n  useEffect(() => {\n    if (!data || !liquidityData) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const margin = { top: 20, right: 120, bottom: 50, left: 80 };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [\n      ...priceData.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(priceData, d => d.date))\n      .range([0, width]);\n\n    // Apply zoom and pan to the unified price scale\n    const baseYScale = d3.scaleLinear()\n      .domain(priceExtent)\n      .range([height, 0]);\n\n    // Create zoomed scale\n    const priceRange = priceExtent[1] - priceExtent[0];\n    const zoomedRange = priceRange / zoomLevel;\n    const centerPrice = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n    \n    const yScale = d3.scaleLinear()\n      .domain([\n        centerPrice - zoomedRange / 2,\n        centerPrice + zoomedRange / 2\n      ])\n      .range([height, 0]);\n\n    // Line generator for price\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.value))\n      .curve(d3.curveMonotoneX);\n\n    // Draw price line\n    g.append(\"path\")\n      .datum(priceData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#2196F3\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"d\", line);\n\n    // Remove X and left Y axes completely\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right - 60; // Make room for 4-character price labels\n    \n    // Use the same unified y scale for liquidity positioning\n    const liquidityYScale = yScale;\n\n    // Calculate current visible price range for filtering liquidity data\n    const currentPriceRange = priceExtent[1] - priceExtent[0];\n    const currentZoomedRange = currentPriceRange / zoomLevel;\n    const currentCenterPrice = priceExtent[0] + currentPriceRange * 0.5 + panY * currentPriceRange;\n    const visibleMinPrice = currentCenterPrice - currentZoomedRange / 2;\n    const visibleMaxPrice = currentCenterPrice + currentZoomedRange / 2;\n\n    // Filter liquidity data to only entries within visible price range\n    const visibleLiquidityData = liquidityData.filter(d => \n      d.price0 >= visibleMinPrice && d.price0 <= visibleMaxPrice\n    );\n\n    // X scale for liquidity amounts - scale based only on visible entries\n    const maxVisibleLiquidity = visibleLiquidityData.length > 0 \n      ? d3.max(visibleLiquidityData, d => d.activeLiquidity)\n      : d3.max(liquidityData, d => d.activeLiquidity); // Fallback if no visible data\n\n    const liquidityXScale = d3.scaleLinear()\n      .domain([0, maxVisibleLiquidity])\n      .range([0, liquidityWidth]);\n\n    // Draw very thin grey horizontal liquidity bars using data join for better performance\n    const bars = g.selectAll(\".liquidity-bar\")\n      .data(liquidityData, d => d.price0); // Use price as key for consistent updates\n    \n    // Remove bars that are no longer needed\n    bars.exit()\n      .transition()\n      .duration(150)\n      .style(\"opacity\", 0)\n      .remove();\n    \n    // Add new bars\n    const enterBars = bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"liquidity-bar\")\n      .attr(\"height\", 1)\n      .attr(\"fill\", \"#888888\")\n      .attr(\"opacity\", 0.7)\n      .attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity))\n      .attr(\"y\", d => liquidityYScale(d.price0) - 0.5)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n    \n    // Update existing bars with smooth transitions\n    bars.merge(enterBars)\n      .transition()\n      .duration(100)\n      .attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity))\n      .attr(\"y\", d => liquidityYScale(d.price0) - 0.5)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n\n    // Remove right Y-axis - keep only the price labels\n\n    // Add price labels in the reserved space to the right using data join\n    const labelData = liquidityData.filter((d, i) => i % 10 === 0); // Show every 10th label to avoid clutter\n    const labels = g.selectAll(\".liquidity-price-label\")\n      .data(labelData, d => d.price0); // Use price as key\n    \n    // Remove labels that are no longer needed\n    labels.exit()\n      .transition()\n      .duration(150)\n      .style(\"opacity\", 0)\n      .remove();\n    \n    // Add new labels\n    const enterLabels = labels.enter()\n      .append(\"text\")\n      .attr(\"class\", \"liquidity-price-label\")\n      .attr(\"font-size\", \"8px\")\n      .attr(\"fill\", \"#666\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"opacity\", 1)\n      .attr(\"x\", width + liquidityWidth + 15) // Position in reserved label space\n      .attr(\"y\", d => liquidityYScale(d.price0))\n      .text(d => d.price0.toFixed(0));\n    \n    // Update existing labels with smooth transitions\n    labels.merge(enterLabels)\n      .transition()\n      .duration(100)\n      .attr(\"x\", width + liquidityWidth + 15)\n      .attr(\"y\", d => liquidityYScale(d.price0));\n\n    // Setup wheel event handler\n    const handleWheel = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      // Calculate current view bounds\n      const priceRange = priceExtent[1] - priceExtent[0];\n      const zoomedRange = priceRange / zoomLevel;\n      const currentCenter = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n      const currentMin = currentCenter - zoomedRange / 2;\n      const currentMax = currentCenter + zoomedRange / 2;\n      \n      // Natural scroll sensitivity based on current view range\n      const scrollSensitivity = zoomedRange / 600; // Faster scrolling for larger ranges\n      const rawScrollAmount = event.deltaY * scrollSensitivity;\n      \n      // Apply scroll (invert deltaY for natural direction)\n      const scrollAmount = rawScrollAmount / priceRange; // Normalize to pan range\n      \n      setPanY(prev => {\n        const newPanY = prev - scrollAmount;\n        \n        // Dynamic bounds based on data and zoom level\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n        const halfZoomedRange = zoomedRange / 2;\n        \n        // Calculate max pan bounds to keep view within data\n        const maxPanUp = (dataMax - halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        const maxPanDown = (dataMin + halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        \n        // Constrain to bounds\n        return Math.max(maxPanDown, Math.min(maxPanUp, newPanY));\n      });\n    };\n\n    // Add wheel event listener\n    const svgElement = svgRef.current;\n    if (svgElement) {\n      svgElement.addEventListener('wheel', handleWheel, { passive: false });\n      return () => svgElement.removeEventListener('wheel', handleWheel);\n    }\n\n  }, [data, liquidityData, zoomLevel, panY]);\n\n  // Set reasonable initial view on first load\n  useEffect(() => {\n    if (!initialViewSet && data && liquidityData && liquidityData.length > 0) {\n      const allPrices = [\n        ...data.map(d => d.value),\n        ...liquidityData.map(d => d.price0)\n      ];\n      const priceExtent = d3.extent(allPrices);\n      const priceRange = priceExtent[1] - priceExtent[0];\n      \n      // Filter out extreme outliers for initial view - focus on middle 40% of liquidity\n      const liquidityPrices = liquidityData.map(d => d.price0).sort((a, b) => a - b);\n      const percentile30 = liquidityPrices[Math.floor(liquidityPrices.length * 0.3)];\n      const percentile70 = liquidityPrices[Math.floor(liquidityPrices.length * 0.7)];\n      \n      // Set initial zoom to focus on the 30-70% range of liquidity with tighter view\n      const focusRange = percentile70 - percentile30;\n      const desiredZoom = Math.min(priceRange / (focusRange * 1), 25); // Show ~1x the focus range, max 25x zoom\n      \n      // Center the view on the price data, not liquidity\n      const priceDataExtent = d3.extent(data.map(d => d.value));\n      const priceCenter = (priceDataExtent[0] + priceDataExtent[1]) / 2;\n      const originalCenter = priceExtent[0] + priceRange * 0.5;\n      const panOffset = (priceCenter - originalCenter) / priceRange;\n      \n      setZoomLevel(desiredZoom);\n      setPanY(panOffset);\n      setInitialZoom(desiredZoom);\n      setInitialPan(panOffset);\n      setInitialViewSet(true);\n    }\n  }, [data, liquidityData, initialViewSet]);\n\n  const handleZoomIn = () => {\n    setZoomLevel(prev => Math.min(prev * 1.3, 50));\n  };\n\n  const handleZoomOut = () => {\n    setZoomLevel(prev => Math.max(prev / 1.3, 0.1));\n  };\n\n  const handleResetZoom = () => {\n    setZoomLevel(initialZoom);\n    setPanY(initialPan);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {/* Zoom Controls */}\n      <div style={{ \n        position: 'absolute', \n        top: 10, \n        left: 10, \n        zIndex: 10,\n        background: 'rgba(255, 255, 255, 0.9)',\n        padding: '8px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n      }}>\n        <div style={{ marginBottom: '4px', fontSize: '12px', fontWeight: 'bold' }}>\n          Zoom: {zoomLevel.toFixed(1)}x\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n          <button onClick={handleZoomIn} style={{ fontSize: '12px', padding: '2px 8px' }}>\n            Zoom In (+)\n          </button>\n          <button onClick={handleZoomOut} style={{ fontSize: '12px', padding: '2px 8px' }}>\n            Zoom Out (-)\n          </button>\n          <button onClick={handleResetZoom} style={{ fontSize: '12px', padding: '2px 8px' }}>\n            Reset\n          </button>\n          <div style={{ fontSize: '10px', color: '#666', marginTop: '4px', textAlign: 'center' }}>\n            Scroll to pan\n          </div>\n        </div>\n      </div>\n\n      <svg\n        ref={svgRef}\n        width={800}\n        height={400}\n        style={{ border: '1px solid #ccc' }}\n      />\n    </div>\n  );\n};\n\nexport default D3Chart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACnE,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,MAAM,GAAGX,MAAM,CAAC,CAAC;EACvB,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMyB,WAAW,GAAGxB,OAAO,CAAC,MAAM;IAChC,IAAIoB,QAAQ,KAAK,IAAI,IAAIE,QAAQ,KAAK,IAAI,EAAE;MAC1C,OAAO,CAACF,QAAQ,EAAEE,QAAQ,CAAC;IAC7B;IACA,OAAO,IAAI;EACb,CAAC,EAAE,CAACF,QAAQ,EAAEE,QAAQ,CAAC,CAAC;EAExB,MAAMG,cAAc,GAAIC,MAAM,IAAK;IACjC,IAAIA,MAAM,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MACjCN,WAAW,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;MACtBH,WAAW,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM;MACLL,WAAW,CAAC,IAAI,CAAC;MACjBE,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,IAAI,IAAI,CAACC,aAAa,EAAE;IAE7B,MAAMqB,GAAG,GAAG3B,EAAE,CAAC4B,MAAM,CAACpB,MAAM,CAACqB,OAAO,CAAC;IACrCF,GAAG,CAACG,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAE3B,MAAMC,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC5D,MAAMC,KAAK,GAAG,GAAG,GAAGL,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IAC9C,MAAMI,MAAM,GAAG,GAAG,GAAGN,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;IAE/C,MAAMI,CAAC,GAAGZ,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CACtBC,IAAI,CAAC,WAAW,EAAE,aAAaT,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,GAAG,GAAG,CAAC;;IAE/D;IACA,MAAMS,SAAS,GAAGrC,IAAI,CAACsC,GAAG,CAACC,CAAC,KAAK;MAC/BC,IAAI,EAAE,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,GAAG,IAAI,CAAC;MAC7BC,KAAK,EAAEJ,CAAC,CAACI;IACX,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMC,SAAS,GAAG,CAChB,GAAGP,SAAS,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,KAAK,CAAC,EAC9B,GAAG1C,aAAa,CAACqC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACM,MAAM,CAAC,CACpC;IACD,MAAMC,WAAW,GAAGnD,EAAE,CAACyB,MAAM,CAACwB,SAAS,CAAC;;IAExC;IACA,MAAMG,MAAM,GAAGpD,EAAE,CAACqD,SAAS,CAAC,CAAC,CAC1BC,MAAM,CAACtD,EAAE,CAACyB,MAAM,CAACiB,SAAS,EAAEE,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CACzCU,KAAK,CAAC,CAAC,CAAC,EAAElB,KAAK,CAAC,CAAC;;IAEpB;IACA,MAAMmB,UAAU,GAAGxD,EAAE,CAACyD,WAAW,CAAC,CAAC,CAChCH,MAAM,CAACH,WAAW,CAAC,CACnBI,KAAK,CAAC,CAACjB,MAAM,EAAE,CAAC,CAAC,CAAC;;IAErB;IACA,MAAMoB,UAAU,GAAGP,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC;IAClD,MAAMQ,WAAW,GAAGD,UAAU,GAAGjD,SAAS;IAC1C,MAAMmD,WAAW,GAAGT,WAAW,CAAC,CAAC,CAAC,GAAGO,UAAU,GAAG,GAAG,GAAG/C,IAAI,GAAG+C,UAAU;IAEzE,MAAMG,MAAM,GAAG7D,EAAE,CAACyD,WAAW,CAAC,CAAC,CAC5BH,MAAM,CAAC,CACNM,WAAW,GAAGD,WAAW,GAAG,CAAC,EAC7BC,WAAW,GAAGD,WAAW,GAAG,CAAC,CAC9B,CAAC,CACDJ,KAAK,CAAC,CAACjB,MAAM,EAAE,CAAC,CAAC,CAAC;;IAErB;IACA,MAAMwB,IAAI,GAAG9D,EAAE,CAAC8D,IAAI,CAAC,CAAC,CACnBC,CAAC,CAACnB,CAAC,IAAIQ,MAAM,CAACR,CAAC,CAACC,IAAI,CAAC,CAAC,CACtBmB,CAAC,CAACpB,CAAC,IAAIiB,MAAM,CAACjB,CAAC,CAACI,KAAK,CAAC,CAAC,CACvBiB,KAAK,CAACjE,EAAE,CAACkE,cAAc,CAAC;;IAE3B;IACA3B,CAAC,CAACC,MAAM,CAAC,MAAM,CAAC,CACb2B,KAAK,CAACzB,SAAS,CAAC,CAChBD,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,GAAG,EAAEqB,IAAI,CAAC;;IAElB;;IAEA;IACA,MAAMM,cAAc,GAAGpC,MAAM,CAACE,KAAK,GAAG,EAAE,CAAC,CAAC;;IAE1C;IACA,MAAMmC,eAAe,GAAGR,MAAM;;IAE9B;IACA,MAAMS,iBAAiB,GAAGnB,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC;IACzD,MAAMoB,kBAAkB,GAAGD,iBAAiB,GAAG7D,SAAS;IACxD,MAAM+D,kBAAkB,GAAGrB,WAAW,CAAC,CAAC,CAAC,GAAGmB,iBAAiB,GAAG,GAAG,GAAG3D,IAAI,GAAG2D,iBAAiB;IAC9F,MAAMG,eAAe,GAAGD,kBAAkB,GAAGD,kBAAkB,GAAG,CAAC;IACnE,MAAMG,eAAe,GAAGF,kBAAkB,GAAGD,kBAAkB,GAAG,CAAC;;IAEnE;IACA,MAAMI,oBAAoB,GAAGrE,aAAa,CAACsE,MAAM,CAAChC,CAAC,IACjDA,CAAC,CAACM,MAAM,IAAIuB,eAAe,IAAI7B,CAAC,CAACM,MAAM,IAAIwB,eAC7C,CAAC;;IAED;IACA,MAAMG,mBAAmB,GAAGF,oBAAoB,CAACjD,MAAM,GAAG,CAAC,GACvD1B,EAAE,CAAC8E,GAAG,CAACH,oBAAoB,EAAE/B,CAAC,IAAIA,CAAC,CAACmC,eAAe,CAAC,GACpD/E,EAAE,CAAC8E,GAAG,CAACxE,aAAa,EAAEsC,CAAC,IAAIA,CAAC,CAACmC,eAAe,CAAC,CAAC,CAAC;;IAEnD,MAAMC,eAAe,GAAGhF,EAAE,CAACyD,WAAW,CAAC,CAAC,CACrCH,MAAM,CAAC,CAAC,CAAC,EAAEuB,mBAAmB,CAAC,CAAC,CAChCtB,KAAK,CAAC,CAAC,CAAC,EAAEa,cAAc,CAAC,CAAC;;IAE7B;IACA,MAAMa,IAAI,GAAG1C,CAAC,CAACT,SAAS,CAAC,gBAAgB,CAAC,CACvCzB,IAAI,CAACC,aAAa,EAAEsC,CAAC,IAAIA,CAAC,CAACM,MAAM,CAAC,CAAC,CAAC;;IAEvC;IACA+B,IAAI,CAACC,IAAI,CAAC,CAAC,CACRC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBtD,MAAM,CAAC,CAAC;;IAEX;IACA,MAAMuD,SAAS,GAAGL,IAAI,CAACM,KAAK,CAAC,CAAC,CAC3B/C,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,CAC9BA,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CACjBA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBA,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CACpBA,IAAI,CAAC,GAAG,EAAEG,CAAC,IAAIP,KAAK,GAAG,EAAE,GAAG+B,cAAc,GAAGY,eAAe,CAACpC,CAAC,CAACmC,eAAe,CAAC,CAAC,CAChFtC,IAAI,CAAC,GAAG,EAAEG,CAAC,IAAIyB,eAAe,CAACzB,CAAC,CAACM,MAAM,CAAC,GAAG,GAAG,CAAC,CAC/CT,IAAI,CAAC,OAAO,EAAEG,CAAC,IAAIoC,eAAe,CAACpC,CAAC,CAACmC,eAAe,CAAC,CAAC;;IAEzD;IACAE,IAAI,CAACO,KAAK,CAACF,SAAS,CAAC,CAClBH,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACb3C,IAAI,CAAC,GAAG,EAAEG,CAAC,IAAIP,KAAK,GAAG,EAAE,GAAG+B,cAAc,GAAGY,eAAe,CAACpC,CAAC,CAACmC,eAAe,CAAC,CAAC,CAChFtC,IAAI,CAAC,GAAG,EAAEG,CAAC,IAAIyB,eAAe,CAACzB,CAAC,CAACM,MAAM,CAAC,GAAG,GAAG,CAAC,CAC/CT,IAAI,CAAC,OAAO,EAAEG,CAAC,IAAIoC,eAAe,CAACpC,CAAC,CAACmC,eAAe,CAAC,CAAC;;IAEzD;;IAEA;IACA,MAAMU,SAAS,GAAGnF,aAAa,CAACsE,MAAM,CAAC,CAAChC,CAAC,EAAE8C,CAAC,KAAKA,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAChE,MAAMC,MAAM,GAAGpD,CAAC,CAACT,SAAS,CAAC,wBAAwB,CAAC,CACjDzB,IAAI,CAACoF,SAAS,EAAE7C,CAAC,IAAIA,CAAC,CAACM,MAAM,CAAC,CAAC,CAAC;;IAEnC;IACAyC,MAAM,CAACT,IAAI,CAAC,CAAC,CACVC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBtD,MAAM,CAAC,CAAC;;IAEX;IACA,MAAM6D,WAAW,GAAGD,MAAM,CAACJ,KAAK,CAAC,CAAC,CAC/B/C,MAAM,CAAC,MAAM,CAAC,CACdC,IAAI,CAAC,OAAO,EAAE,uBAAuB,CAAC,CACtCA,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CACxBA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAC5BA,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CACpBA,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAClBA,IAAI,CAAC,GAAG,EAAEJ,KAAK,GAAG+B,cAAc,GAAG,EAAE,CAAC,CAAC;IAAA,CACvC3B,IAAI,CAAC,GAAG,EAAEG,CAAC,IAAIyB,eAAe,CAACzB,CAAC,CAACM,MAAM,CAAC,CAAC,CACzC2C,IAAI,CAACjD,CAAC,IAAIA,CAAC,CAACM,MAAM,CAAC4C,OAAO,CAAC,CAAC,CAAC,CAAC;;IAEjC;IACAH,MAAM,CAACH,KAAK,CAACI,WAAW,CAAC,CACtBT,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACb3C,IAAI,CAAC,GAAG,EAAEJ,KAAK,GAAG+B,cAAc,GAAG,EAAE,CAAC,CACtC3B,IAAI,CAAC,GAAG,EAAEG,CAAC,IAAIyB,eAAe,CAACzB,CAAC,CAACM,MAAM,CAAC,CAAC;;IAE5C;IACA,MAAM6C,WAAW,GAAIC,KAAK,IAAK;MAC7BA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBD,KAAK,CAACE,eAAe,CAAC,CAAC;;MAEvB;MACA,MAAMxC,UAAU,GAAGP,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC;MAClD,MAAMQ,WAAW,GAAGD,UAAU,GAAGjD,SAAS;MAC1C,MAAM0F,aAAa,GAAGhD,WAAW,CAAC,CAAC,CAAC,GAAGO,UAAU,GAAG,GAAG,GAAG/C,IAAI,GAAG+C,UAAU;MAC3E,MAAM0C,UAAU,GAAGD,aAAa,GAAGxC,WAAW,GAAG,CAAC;MAClD,MAAM0C,UAAU,GAAGF,aAAa,GAAGxC,WAAW,GAAG,CAAC;;MAElD;MACA,MAAM2C,iBAAiB,GAAG3C,WAAW,GAAG,GAAG,CAAC,CAAC;MAC7C,MAAM4C,eAAe,GAAGP,KAAK,CAACQ,MAAM,GAAGF,iBAAiB;;MAExD;MACA,MAAMG,YAAY,GAAGF,eAAe,GAAG7C,UAAU,CAAC,CAAC;;MAEnD9C,OAAO,CAAC8F,IAAI,IAAI;QACd,MAAMC,OAAO,GAAGD,IAAI,GAAGD,YAAY;;QAEnC;QACA,MAAMG,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG7D,SAAS,CAAC;QACtC,MAAM8D,OAAO,GAAGF,IAAI,CAAC/B,GAAG,CAAC,GAAG7B,SAAS,CAAC;QACtC,MAAM+D,eAAe,GAAGrD,WAAW,GAAG,CAAC;;QAEvC;QACA,MAAMsD,QAAQ,GAAG,CAACF,OAAO,GAAGC,eAAe,IAAI7D,WAAW,CAAC,CAAC,CAAC,GAAGO,UAAU,GAAG,GAAG,CAAC,IAAIA,UAAU;QAC/F,MAAMwD,UAAU,GAAG,CAACN,OAAO,GAAGI,eAAe,IAAI7D,WAAW,CAAC,CAAC,CAAC,GAAGO,UAAU,GAAG,GAAG,CAAC,IAAIA,UAAU;;QAEjG;QACA,OAAOmD,IAAI,CAAC/B,GAAG,CAACoC,UAAU,EAAEL,IAAI,CAACC,GAAG,CAACG,QAAQ,EAAEN,OAAO,CAAC,CAAC;MAC1D,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMQ,UAAU,GAAG3G,MAAM,CAACqB,OAAO;IACjC,IAAIsF,UAAU,EAAE;MACdA,UAAU,CAACC,gBAAgB,CAAC,OAAO,EAAErB,WAAW,EAAE;QAAEsB,OAAO,EAAE;MAAM,CAAC,CAAC;MACrE,OAAO,MAAMF,UAAU,CAACG,mBAAmB,CAAC,OAAO,EAAEvB,WAAW,CAAC;IACnE;EAEF,CAAC,EAAE,CAAC1F,IAAI,EAAEC,aAAa,EAAEG,SAAS,EAAEE,IAAI,CAAC,CAAC;;EAE1C;EACAf,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,cAAc,IAAIR,IAAI,IAAIC,aAAa,IAAIA,aAAa,CAACoB,MAAM,GAAG,CAAC,EAAE;MACxE,MAAMuB,SAAS,GAAG,CAChB,GAAG5C,IAAI,CAACsC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,KAAK,CAAC,EACzB,GAAG1C,aAAa,CAACqC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACM,MAAM,CAAC,CACpC;MACD,MAAMC,WAAW,GAAGnD,EAAE,CAACyB,MAAM,CAACwB,SAAS,CAAC;MACxC,MAAMS,UAAU,GAAGP,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC;;MAElD;MACA,MAAMoE,eAAe,GAAGjH,aAAa,CAACqC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACM,MAAM,CAAC,CAACsE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;MAC9E,MAAMC,YAAY,GAAGJ,eAAe,CAACV,IAAI,CAACe,KAAK,CAACL,eAAe,CAAC7F,MAAM,GAAG,GAAG,CAAC,CAAC;MAC9E,MAAMmG,YAAY,GAAGN,eAAe,CAACV,IAAI,CAACe,KAAK,CAACL,eAAe,CAAC7F,MAAM,GAAG,GAAG,CAAC,CAAC;;MAE9E;MACA,MAAMoG,UAAU,GAAGD,YAAY,GAAGF,YAAY;MAC9C,MAAMI,WAAW,GAAGlB,IAAI,CAACC,GAAG,CAACpD,UAAU,IAAIoE,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;MAEjE;MACA,MAAME,eAAe,GAAGhI,EAAE,CAACyB,MAAM,CAACpB,IAAI,CAACsC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,KAAK,CAAC,CAAC;MACzD,MAAMiF,WAAW,GAAG,CAACD,eAAe,CAAC,CAAC,CAAC,GAAGA,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC;MACjE,MAAME,cAAc,GAAG/E,WAAW,CAAC,CAAC,CAAC,GAAGO,UAAU,GAAG,GAAG;MACxD,MAAMyE,SAAS,GAAG,CAACF,WAAW,GAAGC,cAAc,IAAIxE,UAAU;MAE7DhD,YAAY,CAACqH,WAAW,CAAC;MACzBnH,OAAO,CAACuH,SAAS,CAAC;MAClBnH,cAAc,CAAC+G,WAAW,CAAC;MAC3B7G,aAAa,CAACiH,SAAS,CAAC;MACxBrH,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC,EAAE,CAACT,IAAI,EAAEC,aAAa,EAAEO,cAAc,CAAC,CAAC;EAEzC,MAAMuH,YAAY,GAAGA,CAAA,KAAM;IACzB1H,YAAY,CAACgG,IAAI,IAAIG,IAAI,CAACC,GAAG,CAACJ,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAM2B,aAAa,GAAGA,CAAA,KAAM;IAC1B3H,YAAY,CAACgG,IAAI,IAAIG,IAAI,CAAC/B,GAAG,CAAC4B,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;EACjD,CAAC;EAED,MAAM4B,eAAe,GAAGA,CAAA,KAAM;IAC5B5H,YAAY,CAACK,WAAW,CAAC;IACzBH,OAAO,CAACK,UAAU,CAAC;EACrB,CAAC;EAED,oBACEd,OAAA;IAAKkF,KAAK,EAAE;MAAEkD,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBAEnCrI,OAAA;MAAKkF,KAAK,EAAE;QACVkD,QAAQ,EAAE,UAAU;QACpBtG,GAAG,EAAE,EAAE;QACPG,IAAI,EAAE,EAAE;QACRqG,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,0BAA0B;QACtCC,OAAO,EAAE,KAAK;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAL,QAAA,gBACArI,OAAA;QAAKkF,KAAK,EAAE;UAAEyD,YAAY,EAAE,KAAK;UAAEC,QAAQ,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAR,QAAA,GAAC,QACnE,EAAC/H,SAAS,CAACqF,OAAO,CAAC,CAAC,CAAC,EAAC,GAC9B;MAAA;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNjJ,OAAA;QAAKkF,KAAK,EAAE;UAAEgE,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAM,CAAE;QAAAf,QAAA,gBACnErI,OAAA;UAAQqJ,OAAO,EAAEpB,YAAa;UAAC/C,KAAK,EAAE;YAAE0D,QAAQ,EAAE,MAAM;YAAEJ,OAAO,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEhF;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjJ,OAAA;UAAQqJ,OAAO,EAAEnB,aAAc;UAAChD,KAAK,EAAE;YAAE0D,QAAQ,EAAE,MAAM;YAAEJ,OAAO,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEjF;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjJ,OAAA;UAAQqJ,OAAO,EAAElB,eAAgB;UAACjD,KAAK,EAAE;YAAE0D,QAAQ,EAAE,MAAM;YAAEJ,OAAO,EAAE;UAAU,CAAE;UAAAH,QAAA,EAAC;QAEnF;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjJ,OAAA;UAAKkF,KAAK,EAAE;YAAE0D,QAAQ,EAAE,MAAM;YAAEU,KAAK,EAAE,MAAM;YAAEC,SAAS,EAAE,KAAK;YAAEC,SAAS,EAAE;UAAS,CAAE;UAAAnB,QAAA,EAAC;QAExF;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENjJ,OAAA;MACEyJ,GAAG,EAAEpJ,MAAO;MACZ6B,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZ+C,KAAK,EAAE;QAAEwD,MAAM,EAAE;MAAiB;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7I,EAAA,CA5TIH,OAAO;AAAAyJ,EAAA,GAAPzJ,OAAO;AA8Tb,eAAeA,OAAO;AAAC,IAAAyJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}