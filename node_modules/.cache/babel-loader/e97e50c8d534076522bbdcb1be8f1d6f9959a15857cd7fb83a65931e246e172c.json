{"ast":null,"code":"var _jsxFileName = \"/Users/phil.london/Projects/tradingview-chart-mvp/src/Brush.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Brush = ({\n  yScale,\n  interactive = true,\n  brushExtent,\n  setBrushExtent,\n  width,\n  height\n}) => {\n  _s();\n  const brushRef = useRef(null);\n  const brushBehavior = useRef(null);\n  const brushInProgressRef = useRef(false);\n\n  // Convert [minPrice, maxPrice] to [yMax, yMin] for D3 brush (reversed because SVG y-axis)\n  const toYScale = extent => {\n    if (!extent || extent.length !== 2) return null;\n    // extent[0] = minPrice -> bottom of selection (higher y value)\n    // extent[1] = maxPrice -> top of selection (lower y value)\n    return [yScale(extent[1]), yScale(extent[0])];\n  };\n\n  // Convert [yMax, yMin] to [minPrice, maxPrice]\n  const toPriceExtent = selection => {\n    if (!selection || selection.length !== 2) return null;\n    // selection[0] = top y position -> maxPrice\n    // selection[1] = bottom y position -> minPrice\n    return [yScale.invert(selection[1]), yScale.invert(selection[0])];\n  };\n\n  // Initialize the brush\n  useEffect(() => {\n    if (!brushRef.current || !yScale) return;\n    brushBehavior.current = d3.brushY().extent([[0, 0],\n    // top left - full chart area\n    [width, height] // bottom right - full chart area\n    ]).filter(() => interactive).on('brush', event => {\n      const {\n        selection\n      } = event;\n      brushInProgressRef.current = true;\n      if (!selection) {\n        return;\n      }\n\n      // Convert brush selection to price extent\n      const priceExtent = toPriceExtent(selection);\n      if (priceExtent) {\n        // Update min/max prices immediately during drag\n        setBrushExtent([priceExtent[0], priceExtent[1]]);\n      }\n    }).on('end', event => {\n      brushInProgressRef.current = false;\n    });\n\n    // Apply brush behavior to the SVG group\n    d3.select(brushRef.current).call(brushBehavior.current);\n\n    // Set initial brush position if we have a brush extent\n    if (brushExtent && brushExtent.length === 2) {\n      const scaledExtent = toYScale(brushExtent);\n      if (scaledExtent && scaledExtent[0] !== scaledExtent[1]) {\n        d3.select(brushRef.current).call(brushBehavior.current.move, scaledExtent);\n      }\n    } else {\n      // Clear brush if no extent\n      d3.select(brushRef.current).call(brushBehavior.current.clear);\n    }\n\n    // Style the brush - semi-transparent overlay with debugging\n    const selection = d3.select(brushRef.current).selectAll('.selection');\n    console.log('Brush selection elements found:', selection.size());\n    selection.attr('stroke', '#ff0000') // Red for debugging\n    .attr('stroke-width', 3).attr('fill', '#ff0000').attr('fill-opacity', 0.3) // More visible for debugging\n    .attr('cursor', 'move');\n\n    // Style the handles\n    d3.select(brushRef.current).selectAll('.handle').attr('fill', '#2196F3').attr('stroke', '#2196F3').attr('stroke-width', 2).attr('cursor', 'ns-resize');\n\n    // Make sure overlay covers entire area and is clickable\n    d3.select(brushRef.current).selectAll('.overlay').attr('cursor', 'crosshair').attr('fill', 'none').attr('pointer-events', 'all');\n  }, [yScale, width, height, interactive, setBrushExtent, brushExtent]);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    ref: brushRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n_s(Brush, \"pK/lQvlMyaOLHo5K4PvAIeM2oAw=\");\n_c = Brush;\nexport default Brush;\nvar _c;\n$RefreshReg$(_c, \"Brush\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","Brush","yScale","interactive","brushExtent","setBrushExtent","width","height","_s","brushRef","brushBehavior","brushInProgressRef","toYScale","extent","length","toPriceExtent","selection","invert","current","brushY","filter","on","event","priceExtent","select","call","scaledExtent","move","clear","selectAll","console","log","size","attr","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phil.london/Projects/tradingview-chart-mvp/src/Brush.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\n\nconst Brush = ({\n  yScale,\n  interactive = true,\n  brushExtent,\n  setBrushExtent,\n  width,\n  height,\n}) => {\n  const brushRef = useRef(null);\n  const brushBehavior = useRef(null);\n  const brushInProgressRef = useRef(false);\n\n  // Convert [minPrice, maxPrice] to [yMax, yMin] for D3 brush (reversed because SVG y-axis)\n  const toYScale = (extent) => {\n    if (!extent || extent.length !== 2) return null;\n    // extent[0] = minPrice -> bottom of selection (higher y value)\n    // extent[1] = maxPrice -> top of selection (lower y value)\n    return [yScale(extent[1]), yScale(extent[0])];\n  };\n\n  // Convert [yMax, yMin] to [minPrice, maxPrice]\n  const toPriceExtent = (selection) => {\n    if (!selection || selection.length !== 2) return null;\n    // selection[0] = top y position -> maxPrice\n    // selection[1] = bottom y position -> minPrice\n    return [yScale.invert(selection[1]), yScale.invert(selection[0])];\n  };\n\n  // Initialize the brush\n  useEffect(() => {\n    if (!brushRef.current || !yScale) return;\n\n    brushBehavior.current = d3.brushY()\n      .extent([\n        [0, 0], // top left - full chart area\n        [width, height], // bottom right - full chart area\n      ])\n      .filter(() => interactive)\n      .on('brush', (event) => {\n        const { selection } = event;\n        brushInProgressRef.current = true;\n\n        if (!selection) {\n          return;\n        }\n\n        // Convert brush selection to price extent\n        const priceExtent = toPriceExtent(selection);\n        if (priceExtent) {\n          // Update min/max prices immediately during drag\n          setBrushExtent([priceExtent[0], priceExtent[1]]);\n        }\n      })\n      .on('end', (event) => {\n        brushInProgressRef.current = false;\n      });\n\n    // Apply brush behavior to the SVG group\n    d3.select(brushRef.current).call(brushBehavior.current);\n\n    // Set initial brush position if we have a brush extent\n    if (brushExtent && brushExtent.length === 2) {\n      const scaledExtent = toYScale(brushExtent);\n      if (scaledExtent && scaledExtent[0] !== scaledExtent[1]) {\n        d3.select(brushRef.current).call(brushBehavior.current.move, scaledExtent);\n      }\n    } else {\n      // Clear brush if no extent\n      d3.select(brushRef.current).call(brushBehavior.current.clear);\n    }\n\n    // Style the brush - semi-transparent overlay with debugging\n    const selection = d3.select(brushRef.current).selectAll('.selection');\n    console.log('Brush selection elements found:', selection.size());\n    \n    selection\n      .attr('stroke', '#ff0000') // Red for debugging\n      .attr('stroke-width', 3)\n      .attr('fill', '#ff0000')\n      .attr('fill-opacity', 0.3) // More visible for debugging\n      .attr('cursor', 'move');\n\n    // Style the handles\n    d3.select(brushRef.current)\n      .selectAll('.handle')\n      .attr('fill', '#2196F3')\n      .attr('stroke', '#2196F3')\n      .attr('stroke-width', 2)\n      .attr('cursor', 'ns-resize');\n\n    // Make sure overlay covers entire area and is clickable\n    d3.select(brushRef.current)\n      .selectAll('.overlay')\n      .attr('cursor', 'crosshair')\n      .attr('fill', 'none')\n      .attr('pointer-events', 'all');\n\n  }, [yScale, width, height, interactive, setBrushExtent, brushExtent]);\n\n  return <g ref={brushRef} />;\n};\n\nexport default Brush;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}