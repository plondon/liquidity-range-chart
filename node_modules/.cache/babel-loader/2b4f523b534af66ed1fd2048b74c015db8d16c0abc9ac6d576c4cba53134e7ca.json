{"ast":null,"code":"import _objectSpread from\"/Users/phil.london/Projects/tradingview-chart-mvp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useRef,useState,useMemo}from'react';import*as d3 from'd3';import PriceRange from'./PriceRange';import PriceDragPoints from'./PriceDragPoints';// Cache for price data lookups\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const priceDataCache=new Map();function findClosestElementBinarySearch(data,target){var _data$right,_data$left;let left=0;let right=data.length-1;if(!target){return null;}if(priceDataCache.has(target.toString())){return priceDataCache.get(target.toString());}while(left<=right){const mid=Math.floor((left+right)/2);if(data[mid].price0===target){priceDataCache.set(target.toString(),data[mid]);return data[mid];}else if(data[mid].price0<target){left=mid+1;}else{right=mid-1;}}// After binary search, left and right are the closest bounds\nconst closest=(_data$right=data[right])!==null&&_data$right!==void 0?_data$right:{price0:Infinity};// Handle bounds\nconst nextClosest=(_data$left=data[left])!==null&&_data$left!==void 0?_data$left:{price0:Infinity};// Return the element with the closest `price0`\nconst closestElement=Math.abs(closest.price0-target)<=Math.abs(nextClosest.price0-target)?closest:nextClosest;priceDataCache.set(target.toString(),closestElement);return closestElement;}function scaleToInteger(a){let precision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:18;const scaleFactor=Math.pow(10,precision);return Math.round(a*scaleFactor);}const D3Chart=_ref=>{let{data,liquidityData}=_ref;const svgRef=useRef();const[initialViewSet,setInitialViewSet]=useState(false);const[dragInProgress,setDragInProgress]=useState(false);// Default state object\nconst defaultState=useRef({zoomLevel:1,panY:0,minPrice:null,maxPrice:null});// Main state object\nconst[chartState,setChartState]=useState({zoomLevel:1,panY:0,minPrice:null,maxPrice:null});// Destructure for easier access\nconst{zoomLevel,panY,minPrice,maxPrice}=chartState;// Calculate current price from the last entry\nconst current=useMemo(()=>{var _data;return data&&data.length>0?(_data=data[data.length-1])===null||_data===void 0?void 0:_data.value:null;},[data]);// Calculate currentTick based on current price\nconst currentTick=useMemo(()=>{var _findClosestElementBi;if(!current||!liquidityData)return null;return(_findClosestElementBi=findClosestElementBinarySearch(liquidityData,current))===null||_findClosestElementBi===void 0?void 0:_findClosestElementBi.tick;},[current,liquidityData]);// Brush extent as [min, max] array\nconst brushExtent=useMemo(()=>{if(minPrice!==null&&maxPrice!==null){return[minPrice,maxPrice];}return null;},[minPrice,maxPrice]);const setBrushExtent=extent=>{if(extent&&extent.length===2){setChartState(prev=>_objectSpread(_objectSpread({},prev),{},{minPrice:extent[0],maxPrice:extent[1]}));}else{setChartState(prev=>_objectSpread(_objectSpread({},prev),{},{minPrice:null,maxPrice:null}));}};// Helper functions for updating individual state properties\nconst setMinPrice=price=>setChartState(prev=>_objectSpread(_objectSpread({},prev),{},{minPrice:price}));const setMaxPrice=price=>setChartState(prev=>_objectSpread(_objectSpread({},prev),{},{maxPrice:price}));const setZoomLevel=zoom=>setChartState(prev=>_objectSpread(_objectSpread({},prev),{},{zoomLevel:zoom}));const setPanY=pan=>setChartState(prev=>_objectSpread(_objectSpread({},prev),{},{panY:pan}));// Calculate yScale outside useEffect so it's available for Brush component\nconst yScale=useMemo(()=>{if(!data||!liquidityData)return null;const allPrices=[...data.map(d=>d.value),...liquidityData.map(d=>d.price0)];const priceExtent=d3.extent(allPrices);const priceRange=priceExtent[1]-priceExtent[0];const zoomedRange=priceRange/zoomLevel;const centerPrice=priceExtent[0]+priceRange*0.5+panY*priceRange;return d3.scaleLinear().domain([centerPrice-zoomedRange/2,centerPrice+zoomedRange/2]).range([400-20-50,0]);// [height, 0] for proper D3 coordinate system\n},[data,liquidityData,zoomLevel,panY]);useEffect(()=>{if(!data||!liquidityData||!yScale)return;const svg=d3.select(svgRef.current);svg.selectAll(\"g\").remove();// Only remove D3-created elements, not React elements\nconst margin={top:20,right:180,bottom:50,left:80};// Increased right margin for minimap\nconst width=900-margin.left-margin.right;const height=400-margin.top-margin.bottom;const g=svg.append(\"g\").attr(\"transform\",\"translate(\".concat(margin.left,\",\").concat(margin.top,\")\"));// Convert timestamps to dates for price data\nconst priceData=data.map(d=>({date:new Date(d.time*1000),value:d.value}));// Unified price scale encompassing both price data and liquidity data\nconst allPrices=[...priceData.map(d=>d.value),...liquidityData.map(d=>d.price0)];const priceExtent=d3.extent(allPrices);// Scales for price line chart\nconst xScale=d3.scaleTime().domain(d3.extent(priceData,d=>d.date)).range([-80,width-40]);// Extend left but stop before liquidity section\n// Line generator for price\nconst line=d3.line().x(d=>xScale(d.date)).y(d=>yScale(d.value)).curve(d3.curveMonotoneX);// Draw price line with conditional coloring\nif(minPrice!==null&&maxPrice!==null){// Draw segments with different colors based on price range\nfor(let i=0;i<priceData.length-1;i++){const currentPoint=priceData[i];const nextPoint=priceData[i+1];// Check if current point is within range\nconst isInRange=currentPoint.value>=minPrice&&currentPoint.value<=maxPrice;const color=isInRange?\"#d63384\":\"#888888\";// Dark pink or grey\n// Draw line segment between current and next point\ng.append(\"path\").datum([currentPoint,nextPoint]).attr(\"fill\",\"none\").attr(\"stroke\",color).attr(\"stroke-width\",2).attr(\"d\",line).attr(\"class\",\"price-segment\");}}else{// Draw single blue line when no range is selected\ng.append(\"path\").datum(priceData).attr(\"fill\",\"none\").attr(\"stroke\",\"#2196F3\").attr(\"stroke-width\",2).attr(\"d\",line).attr(\"class\",\"price-line\");}// Remove X and left Y axes completely\n// Right side liquidity chart - inspired by Uniswap's approach\nconst liquidityWidth=margin.right;// Use full margin width\n// Use the same unified y scale for liquidity positioning\nconst liquidityYScale=yScale;// Calculate current visible price range for filtering liquidity data\nconst currentPriceRange=priceExtent[1]-priceExtent[0];const currentZoomedRange=currentPriceRange/zoomLevel;const currentCenterPrice=priceExtent[0]+currentPriceRange*0.5+panY*currentPriceRange;const visibleMinPrice=currentCenterPrice-currentZoomedRange/2;const visibleMaxPrice=currentCenterPrice+currentZoomedRange/2;// Filter liquidity data to only entries within visible price range\nconst visibleLiquidityData=liquidityData.filter(d=>d.price0>=visibleMinPrice&&d.price0<=visibleMaxPrice);// X scale for liquidity amounts - scale based only on visible entries\nconst maxVisibleLiquidity=visibleLiquidityData.length>0?d3.max(visibleLiquidityData,d=>d.activeLiquidity):d3.max(liquidityData,d=>d.activeLiquidity);// Fallback if no visible data\nconst liquidityXScale=d3.scaleLinear().domain([0,maxVisibleLiquidity]).range([0,liquidityWidth]);// Back to liquidity section width\n// Draw very thin grey horizontal liquidity bars using data join for better performance\nconst bars=g.selectAll(\".liquidity-bar\").data(liquidityData,d=>d.price0);// Use price as key for consistent updates\n// Remove bars that are no longer needed\nbars.exit().transition().duration(150).style(\"opacity\",0).remove();// Add new bars\nconst enterBars=bars.enter().append(\"rect\").attr(\"class\",\"liquidity-bar\").attr(\"height\",1).attr(\"opacity\",0.7).attr(\"x\",d=>width+10+liquidityWidth-liquidityXScale(d.activeLiquidity)-40).attr(\"y\",d=>liquidityYScale(d.price0)-0.5).attr(\"width\",d=>liquidityXScale(d.activeLiquidity));// Update existing bars with smooth transitions and conditional coloring\nbars.merge(enterBars).transition().duration(100).attr(\"x\",d=>width+10+liquidityWidth-liquidityXScale(d.activeLiquidity)-40).attr(\"y\",d=>liquidityYScale(d.price0)-0.5).attr(\"width\",d=>liquidityXScale(d.activeLiquidity)).attr(\"fill\",d=>{// Check if bar is within the price range - ensure proper number comparison\nconst price=parseFloat(d.price0);const min=parseFloat(minPrice);const max=parseFloat(maxPrice);if(minPrice!==null&&maxPrice!==null&&price>=min&&price<=max){return\"#d63384\";// Dark pink for bars within range\n}return\"#888888\";// Default grey\n});// No price labels needed\n// Draw price range visualization directly in the main chart\nif(minPrice!==null&&maxPrice!==null){// Remove existing range elements\ng.selectAll(\".price-range-element\").remove();// Check if lines are too close together (less than 5px apart)\nconst minY=yScale(minPrice);const maxY=yScale(maxPrice);const linesAreTooClose=Math.abs(minY-maxY)<5;// Draw transparent pink background between min and max - extend to cover full chart area\ng.append('rect').attr('class','price-range-element price-range-bg').attr('x',-80)// Extend left to cover the margin area\n.attr('y',yScale(maxPrice)).attr('width',900)// Cover the entire SVG width\n.attr('height',yScale(minPrice)-yScale(maxPrice)).attr('fill','#ff69b4').attr('fill-opacity',0.15).attr('stroke','none')// Remove any border from background\n.attr('cursor','move').call(d3.drag().on('start',function(event){setDragInProgress(true);// Store the initial click offset relative to the range center\nconst currentRangeCenterY=(yScale(maxPrice)+yScale(minPrice))/2;this._dragOffsetY=event.y-currentRangeCenterY;}).on('drag',function(event){// Apply the stored offset to maintain consistent drag feel\nconst adjustedY=event.y-this._dragOffsetY;const newCenterY=Math.max(0,Math.min(height,adjustedY));const draggedPrice=yScale.invert(newCenterY);const rangeSize=maxPrice-minPrice;// Calculate new min/max based on dragged center position\nconst newMaxPrice=draggedPrice+rangeSize/2;const newMinPrice=draggedPrice-rangeSize/2;// Get data bounds to prevent dragging outside chart\nconst allPrices=[...data.map(d=>d.value),...liquidityData.map(d=>d.price0)];const dataMin=Math.min(...allPrices);const dataMax=Math.max(...allPrices);// Only update if range stays within data bounds\nif(newMinPrice>=dataMin&&newMaxPrice<=dataMax){// Update background position\nconst newMaxY=yScale(newMaxPrice);const newMinY=yScale(newMinPrice);d3.select(this).attr('y',newMaxY).attr('height',newMinY-newMaxY);// Update min line\ng.select('.min-line').attr('y1',newMinY).attr('y2',newMinY);// Update max line\ng.select('.max-line').attr('y1',newMaxY).attr('y2',newMaxY);// Update labels\ng.select('.min-label').attr('x',-68).attr('y',newMinY-5).text(\"Min: \".concat(newMinPrice.toFixed(0)));g.select('.max-label').attr('x',-68).attr('y',newMaxY+15).text(\"Max: \".concat(newMaxPrice.toFixed(0)));// Update liquidity bar colors\ng.selectAll('.liquidity-bar').attr('fill',d=>{const price=parseFloat(d.price0);if(price>=newMinPrice&&price<=newMaxPrice){return\"#d63384\";}return\"#888888\";});// Update price line segment colors\ng.selectAll('.price-segment').attr('stroke',function(){const datum=d3.select(this).datum();if(datum&&datum.length>0){const value=datum[0].value;return value>=newMinPrice&&value<=newMaxPrice?\"#d63384\":\"#888888\";}return\"#888888\";});// Update minimap controls to reflect new positions\ng.select('.minimap-range').attr('y',minimapYScale(newMaxPrice)).attr('height',minimapYScale(newMinPrice)-minimapYScale(newMaxPrice));g.select('.max-handle').attr('cy',minimapYScale(newMaxPrice));g.select('.min-handle').attr('cy',minimapYScale(newMinPrice));g.select('.center-handle').attr('cy',(minimapYScale(newMaxPrice)+minimapYScale(newMinPrice))/2);}}).on('end',function(event){// Apply the same offset calculation for consistency\nconst adjustedY=event.y-this._dragOffsetY;const newCenterY=Math.max(margin.top,Math.min(400-margin.bottom,adjustedY));const draggedPrice=yScale.invert(newCenterY);const rangeSize=maxPrice-minPrice;// Calculate new min/max based on dragged center position\nconst newMaxPrice=draggedPrice+rangeSize/2;const newMinPrice=draggedPrice-rangeSize/2;// Get data bounds\nconst allPrices=[...data.map(d=>d.value),...liquidityData.map(d=>d.price0)];const dataMin=Math.min(...allPrices);const dataMax=Math.max(...allPrices);// Only update state if range stays within data bounds\nif(newMinPrice>=dataMin&&newMaxPrice<=dataMax){setMinPrice(newMinPrice);setMaxPrice(newMaxPrice);}setDragInProgress(false);}));// Draw min price line (solid) with drag behavior\ng.append('line').attr('class','price-range-element min-line').attr('x1',-80)// Start from left margin\n.attr('x2',820)// Extend to right edge (900 - 80 = 820)\n.attr('y1',yScale(minPrice)).attr('y2',yScale(minPrice)).attr('stroke','#131313').attr('stroke-width',2).attr('opacity',0.08).attr('cursor','ns-resize').call(d3.drag().on('start',function(){setDragInProgress(true);}).on('drag',function(event){const newY=Math.max(-margin.top,Math.min(height+margin.bottom,event.y));const newPrice=yScale.invert(newY);// Update visual position immediately\nd3.select(this).attr('y1',newY).attr('y2',newY);// Determine which line represents min and max during drag\nconst currentMaxY=yScale(maxPrice);let draggedMinPrice=newPrice;let draggedMaxPrice=maxPrice;// Handle visual swapping if lines cross\nif(newY<currentMaxY){// Min line dragged above max line - swap visually\ndraggedMinPrice=maxPrice;draggedMaxPrice=newPrice;// Update max line color to min color and vice versa\ng.select('.max-line').attr('stroke','#131313');// Same color for both\nd3.select(this).attr('stroke','#131313');// Same color for both\n}else{// Lines in normal order - restore original colors\ng.select('.max-line').attr('stroke','#131313');// Same color for both\nd3.select(this).attr('stroke','#131313');// Same color for both\n}// Update background\ng.select('.price-range-bg').attr('y',yScale(draggedMaxPrice)).attr('height',yScale(draggedMinPrice)-yScale(draggedMaxPrice));// Update labels\ng.select('.min-label').attr('x',-68).attr('y',yScale(draggedMinPrice)-5).text(\"Min: \".concat(draggedMinPrice.toFixed(0)));g.select('.max-label').attr('x',-68).attr('y',yScale(draggedMaxPrice)+15).text(\"Max: \".concat(draggedMaxPrice.toFixed(0)));// Update liquidity bar colors\ng.selectAll('.liquidity-bar').attr('fill',d=>{const price=parseFloat(d.price0);if(price>=draggedMinPrice&&price<=draggedMaxPrice){return\"#d63384\";}return\"#888888\";});// Update price line segment colors\ng.selectAll('.price-segment').attr('stroke',function(){const datum=d3.select(this).datum();if(datum&&datum.length>0){const value=datum[0].value;return value>=draggedMinPrice&&value<=draggedMaxPrice?\"#d63384\":\"#888888\";}return\"#888888\";});// Update minimap controls for min line drag\ng.select('.minimap-range').attr('y',minimapYScale(draggedMaxPrice)).attr('height',minimapYScale(draggedMinPrice)-minimapYScale(draggedMaxPrice));g.select('.max-handle').attr('cy',minimapYScale(draggedMaxPrice));g.select('.min-handle').attr('cy',minimapYScale(draggedMinPrice));g.select('.center-handle').attr('cy',(minimapYScale(draggedMaxPrice)+minimapYScale(draggedMinPrice))/2);}).on('end',function(event){const newY=Math.max(-margin.top,Math.min(height+margin.bottom,event.y));const newPrice=yScale.invert(newY);// Handle final state update with proper min/max ordering\nif(newPrice>maxPrice){// Min dragged above max - swap them in state\nsetMinPrice(maxPrice);setMaxPrice(newPrice);}else{// Normal case - just update min\nsetMinPrice(newPrice);}setDragInProgress(false);}));// Draw max price line (solid) with drag behavior\ng.append('line').attr('class','price-range-element max-line').attr('x1',-80)// Start from left margin\n.attr('x2',820)// Extend to right edge (900 - 80 = 820)\n.attr('y1',yScale(maxPrice)).attr('y2',yScale(maxPrice)).attr('stroke','#131313').attr('stroke-width',2).attr('opacity',0.08).attr('cursor','ns-resize').call(d3.drag().on('start',function(){setDragInProgress(true);}).on('drag',function(event){const newY=Math.max(-margin.top,Math.min(height+margin.bottom,event.y));const newPrice=yScale.invert(newY);// Update visual position immediately\nd3.select(this).attr('y1',newY).attr('y2',newY);// Determine which line represents min and max during drag\nconst currentMinY=yScale(minPrice);let draggedMinPrice=minPrice;let draggedMaxPrice=newPrice;// Handle visual swapping if lines cross\nif(newY>currentMinY){// Max line dragged below min line - swap visually\ndraggedMinPrice=newPrice;draggedMaxPrice=minPrice;// Update min line color to max color and vice versa\ng.select('.min-line').attr('stroke','#131313');// Same color for both\nd3.select(this).attr('stroke','#131313');// Same color for both\n}else{// Lines in normal order - restore original colors\ng.select('.min-line').attr('stroke','#131313');// Same color for both\nd3.select(this).attr('stroke','#131313');// Same color for both\n}// Update background\ng.select('.price-range-bg').attr('y',yScale(draggedMaxPrice)).attr('height',yScale(draggedMinPrice)-yScale(draggedMaxPrice));// Update labels\ng.select('.min-label').attr('x',-68).attr('y',yScale(draggedMinPrice)-5).text(\"Min: \".concat(draggedMinPrice.toFixed(0)));g.select('.max-label').attr('x',-68).attr('y',yScale(draggedMaxPrice)+15).text(\"Max: \".concat(draggedMaxPrice.toFixed(0)));// Update liquidity bar colors\ng.selectAll('.liquidity-bar').attr('fill',d=>{const price=parseFloat(d.price0);if(price>=draggedMinPrice&&price<=draggedMaxPrice){return\"#d63384\";}return\"#888888\";});// Update price line segment colors\ng.selectAll('.price-segment').attr('stroke',function(){const datum=d3.select(this).datum();if(datum&&datum.length>0){const value=datum[0].value;return value>=draggedMinPrice&&value<=draggedMaxPrice?\"#d63384\":\"#888888\";}return\"#888888\";});// Update minimap controls for max line drag\ng.select('.minimap-range').attr('y',minimapYScale(draggedMaxPrice)).attr('height',minimapYScale(draggedMinPrice)-minimapYScale(draggedMaxPrice));g.select('.max-handle').attr('cy',minimapYScale(draggedMaxPrice));g.select('.min-handle').attr('cy',minimapYScale(draggedMinPrice));g.select('.center-handle').attr('cy',(minimapYScale(draggedMaxPrice)+minimapYScale(draggedMinPrice))/2);}).on('end',function(event){const newY=Math.max(-margin.top,Math.min(height+margin.bottom,event.y));const newPrice=yScale.invert(newY);// Handle final state update with proper min/max ordering\nif(newPrice<minPrice){// Max dragged below min - swap them in state\nsetMaxPrice(minPrice);setMinPrice(newPrice);}else{// Normal case - just update max\nsetMaxPrice(newPrice);}setDragInProgress(false);}));// Add min price label\ng.append('text').attr('class','price-range-element min-label').attr('x',-68)// 12px from left border (-80 + 12)\n.attr('y',yScale(minPrice)-5).attr('font-size','10px').attr('fill','#131313').attr('font-weight','bold').text(\"Min: \".concat(minPrice.toFixed(0)));// Add max price label\ng.append('text').attr('class','price-range-element max-label').attr('x',-68)// 12px from left border (-80 + 12)\n.attr('y',yScale(maxPrice)+15).attr('font-size','10px').attr('fill','#131313').attr('font-weight','bold').text(\"Max: \".concat(maxPrice.toFixed(0)));}// Draw current price line (dotted) if current price exists\nif(current!==null){// Remove existing current price line\ng.selectAll('.current-price-line').remove();g.selectAll('.current-price-label').remove();// Draw dotted line across the entire chart for current price\ng.append('line').attr('class','current-price-line').attr('x1',-80)// Start from left margin\n.attr('x2',820)// Extend to right edge (900 - 80 = 820)\n.attr('y1',yScale(current)).attr('y2',yScale(current)).attr('stroke','#666666')// Grey color\n.attr('stroke-width',2).attr('stroke-dasharray','5,5')// Dotted line pattern\n.attr('opacity',0.8);// Add current price label on the left like min/max\ng.append('text').attr('class','current-price-label').attr('x',-68)// 12px from left border (-80 + 12)\n.attr('y',yScale(current)-5).attr('font-size','10px').attr('fill','#666666')// Grey color\n.attr('font-weight','bold').text(\"Current: \".concat(current.toFixed(0)));}// Create minimap controls on the right side\nconst minimapWidth=40;const minimapX=width+160;// Position near the right border\n// Get full data range for minimap scale\nconst minimapPrices=[...data.map(d=>d.value),...liquidityData.map(d=>d.price0)];const dataMin=Math.min(...minimapPrices);const dataMax=Math.max(...minimapPrices);// Create scale for full data range (for minimap) - full container height\nconst minimapYScale=d3.scaleLinear().domain([dataMin,dataMax]).range([400-margin.bottom,margin.top]);// Remove liquidity bars from minimap - not needed\n// Draw minimap background track (full container height)\ng.append('rect').attr('class','minimap-track').attr('x',minimapX).attr('y',-margin.top).attr('width',8).attr('height',400)// Full container height\n.attr('fill','#333333').attr('rx',4);// Calculate current viewport bounds based on zoom and pan using full data range\nconst fullDataRange=dataMax-dataMin;const zoomedRange=fullDataRange/zoomLevel;const currentCenter=dataMin+fullDataRange*0.5+panY*fullDataRange;const viewportMinPrice=currentCenter-zoomedRange/2;const viewportMaxPrice=currentCenter+zoomedRange/2;// Draw viewport indicator (shows current visible area)\nconst viewportHeight=minimapYScale(viewportMinPrice)-minimapYScale(viewportMaxPrice);g.append('rect').attr('class','minimap-viewport').attr('x',minimapX-2).attr('y',minimapYScale(viewportMaxPrice)).attr('width',12).attr('height',viewportHeight).attr('fill','#ffffff').attr('fill-opacity',0.2).attr('stroke','#ffffff').attr('stroke-width',1).attr('stroke-opacity',0.4).attr('rx',2);// Draw current range indicator (pink bar) with drag functionality\nconst currentRangeHeight=minimapYScale(minPrice)-minimapYScale(maxPrice);const minimapRange=g.append('rect').attr('class','minimap-range').attr('x',minimapX).attr('y',minimapYScale(maxPrice)).attr('width',8).attr('height',currentRangeHeight).attr('fill','#ff69b4').attr('rx',4).attr('cursor','move');// Add drag behavior to the minimap range bar\nminimapRange.call(d3.drag().on('start',function(){setDragInProgress(true);}).on('drag',function(event){const newCenterY=Math.max(margin.top,Math.min(400-margin.bottom,event.y));const newCenterPrice=minimapYScale.invert(newCenterY);const rangeSize=maxPrice-minPrice;// Calculate new min/max based on center position\nlet newMaxPrice=newCenterPrice+rangeSize/2;let newMinPrice=newCenterPrice-rangeSize/2;// Keep within data bounds\nif(newMaxPrice>dataMax){newMaxPrice=dataMax;newMinPrice=dataMax-rangeSize;}if(newMinPrice<dataMin){newMinPrice=dataMin;newMaxPrice=dataMin+rangeSize;}// Update visual positions of handles and range bar\ntopHandle.attr('cy',minimapYScale(newMaxPrice));bottomHandle.attr('cy',minimapYScale(newMinPrice));d3.select(this).attr('y',minimapYScale(newMaxPrice)).attr('height',minimapYScale(newMinPrice)-minimapYScale(newMaxPrice));// Update center handle position\nconst newCenterHandleY=(minimapYScale(newMaxPrice)+minimapYScale(newMinPrice))/2;centerHandle.attr('cy',newCenterHandleY);// Calculate pan position based on where the range is positioned\nconst fullDataRange=dataMax-dataMin;const rangeCenterInData=(newMaxPrice+newMinPrice)/2;const dataCenterPosition=(rangeCenterInData-dataMin)/fullDataRange-0.5;// Update chart state to follow the minimap range\nsetChartState(prev=>_objectSpread(_objectSpread({},prev),{},{minPrice:newMinPrice,maxPrice:newMaxPrice,panY:dataCenterPosition}));}).on('end',function(){setDragInProgress(false);}));// Draw drag handles\nconst handleRadius=8;// Top handle (max price)\nconst topHandle=g.append('circle').attr('class','minimap-handle max-handle').attr('cx',minimapX+4).attr('cy',minimapYScale(maxPrice)).attr('r',handleRadius).attr('fill','#ffffff').attr('stroke','#ff69b4').attr('stroke-width',3).attr('cursor','ns-resize');// Bottom handle (min price) \nconst bottomHandle=g.append('circle').attr('class','minimap-handle min-handle').attr('cx',minimapX+4).attr('cy',minimapYScale(minPrice)).attr('r',handleRadius).attr('fill','#ffffff').attr('stroke','#ff69b4').attr('stroke-width',3).attr('cursor','ns-resize');// Center handle (for dragging entire range)\nconst centerY=(minimapYScale(maxPrice)+minimapYScale(minPrice))/2;const centerHandle=g.append('circle').attr('class','minimap-handle center-handle').attr('cx',minimapX+4).attr('cy',centerY).attr('r',6).attr('fill','#ff69b4').attr('cursor','move');// Add drag behavior to top handle (max price)\ntopHandle.call(d3.drag().on('start',function(){setDragInProgress(true);}).on('drag',function(event){const newY=Math.max(margin.top,Math.min(400-margin.bottom,event.y));const newMaxPrice=minimapYScale.invert(newY);// Ensure max stays above min\nconst constrainedMaxPrice=Math.max(newMaxPrice,minPrice);// Update visual position\nd3.select(this).attr('cy',minimapYScale(constrainedMaxPrice));// Update range bar\ng.select('.minimap-range').attr('y',minimapYScale(constrainedMaxPrice)).attr('height',minimapYScale(minPrice)-minimapYScale(constrainedMaxPrice));// Update center handle position\nconst newCenterY=(minimapYScale(constrainedMaxPrice)+minimapYScale(minPrice))/2;centerHandle.attr('cy',newCenterY);// Update main chart price range elements\ng.select('.price-range-bg').attr('y',yScale(constrainedMaxPrice)).attr('height',yScale(minPrice)-yScale(constrainedMaxPrice));g.select('.max-line').attr('y1',yScale(constrainedMaxPrice)).attr('y2',yScale(constrainedMaxPrice));g.select('.max-label').attr('y',yScale(constrainedMaxPrice)+15).text(\"Max: \".concat(constrainedMaxPrice.toFixed(0)));}).on('end',function(event){const newY=Math.max(margin.top,Math.min(400-margin.bottom,event.y));let newMaxPrice=minimapYScale.invert(newY);// If dragged to top, set to data maximum\nif(newY<=margin.top+10){newMaxPrice=dataMax;}// Ensure max stays above min\nconst constrainedMaxPrice=Math.max(newMaxPrice,minPrice);setMaxPrice(constrainedMaxPrice);setDragInProgress(false);}));// Add drag behavior to bottom handle (min price)\nbottomHandle.call(d3.drag().on('start',function(){setDragInProgress(true);}).on('drag',function(event){const newY=Math.max(margin.top,Math.min(400-margin.bottom,event.y));const newMinPrice=minimapYScale.invert(newY);// Ensure min stays below max\nconst constrainedMinPrice=Math.min(newMinPrice,maxPrice);// Update visual position\nd3.select(this).attr('cy',minimapYScale(constrainedMinPrice));// Update range bar\ng.select('.minimap-range').attr('y',minimapYScale(maxPrice)).attr('height',minimapYScale(constrainedMinPrice)-minimapYScale(maxPrice));// Update center handle position\nconst newCenterY=(minimapYScale(maxPrice)+minimapYScale(constrainedMinPrice))/2;centerHandle.attr('cy',newCenterY);// Update main chart price range elements\ng.select('.price-range-bg').attr('y',yScale(maxPrice)).attr('height',yScale(constrainedMinPrice)-yScale(maxPrice));g.select('.min-line').attr('y1',yScale(constrainedMinPrice)).attr('y2',yScale(constrainedMinPrice));g.select('.min-label').attr('y',yScale(constrainedMinPrice)-5).text(\"Min: \".concat(constrainedMinPrice.toFixed(0)));}).on('end',function(event){const newY=Math.max(margin.top,Math.min(400-margin.bottom,event.y));let newMinPrice=minimapYScale.invert(newY);// If dragged to bottom, set to data minimum\nif(newY>=400-margin.bottom-10){newMinPrice=dataMin;}// Ensure min stays below max\nconst constrainedMinPrice=Math.min(newMinPrice,maxPrice);setMinPrice(constrainedMinPrice);setDragInProgress(false);}));// Add drag behavior to center handle (drag entire range)\ncenterHandle.call(d3.drag().on('start',function(){setDragInProgress(true);}).on('drag',function(event){const newCenterY=Math.max(margin.top,Math.min(400-margin.bottom,event.y));const newCenterPrice=minimapYScale.invert(newCenterY);const rangeSize=maxPrice-minPrice;// Calculate new min/max based on center position\nlet newMaxPrice=newCenterPrice+rangeSize/2;let newMinPrice=newCenterPrice-rangeSize/2;// Keep within data bounds\nif(newMaxPrice>dataMax){newMaxPrice=dataMax;newMinPrice=dataMax-rangeSize;}if(newMinPrice<dataMin){newMinPrice=dataMin;newMaxPrice=dataMin+rangeSize;}// Update visual positions\ntopHandle.attr('cy',minimapYScale(newMaxPrice));bottomHandle.attr('cy',minimapYScale(newMinPrice));d3.select(this).attr('cy',(minimapYScale(newMaxPrice)+minimapYScale(newMinPrice))/2);// Update range bar\ng.select('.minimap-range').attr('y',minimapYScale(newMaxPrice)).attr('height',minimapYScale(newMinPrice)-minimapYScale(newMaxPrice));// Update main chart price range elements\ng.select('.price-range-bg').attr('y',yScale(newMaxPrice)).attr('height',yScale(newMinPrice)-yScale(newMaxPrice));g.select('.min-line').attr('y1',yScale(newMinPrice)).attr('y2',yScale(newMinPrice));g.select('.max-line').attr('y1',yScale(newMaxPrice)).attr('y2',yScale(newMaxPrice));g.select('.min-label').attr('y',yScale(newMinPrice)-5).text(\"Min: \".concat(newMinPrice.toFixed(0)));g.select('.max-label').attr('y',yScale(newMaxPrice)+15).text(\"Max: \".concat(newMaxPrice.toFixed(0)));}).on('end',function(event){const newCenterY=Math.max(margin.top,Math.min(400-margin.bottom,event.y));const newCenterPrice=minimapYScale.invert(newCenterY);const rangeSize=maxPrice-minPrice;// Calculate new min/max based on center position\nlet newMaxPrice=newCenterPrice+rangeSize/2;let newMinPrice=newCenterPrice-rangeSize/2;// Keep within data bounds\nif(newMaxPrice>dataMax){newMaxPrice=dataMax;newMinPrice=dataMax-rangeSize;}if(newMinPrice<dataMin){newMinPrice=dataMin;newMaxPrice=dataMin+rangeSize;}setMinPrice(newMinPrice);setMaxPrice(newMaxPrice);setDragInProgress(false);}));// Setup wheel event handler\nconst handleWheel=event=>{event.preventDefault();event.stopPropagation();// Calculate current view bounds\nconst priceRange=priceExtent[1]-priceExtent[0];const zoomedRange=priceRange/zoomLevel;const currentCenter=priceExtent[0]+priceRange*0.5+panY*priceRange;const currentMin=currentCenter-zoomedRange/2;const currentMax=currentCenter+zoomedRange/2;// Natural scroll sensitivity based on current view range\nconst scrollSensitivity=zoomedRange/600;// Faster scrolling for larger ranges\nconst rawScrollAmount=event.deltaY*scrollSensitivity;// Apply scroll (invert deltaY for natural direction)\nconst scrollAmount=rawScrollAmount/priceRange;// Normalize to pan range\nsetChartState(prev=>{const newPanY=prev.panY-scrollAmount;// Dynamic bounds based on data and zoom level\nconst dataMin=Math.min(...allPrices);const dataMax=Math.max(...allPrices);const halfZoomedRange=zoomedRange/2;// Calculate max pan bounds to keep view within data\nconst maxPanUp=(dataMax-halfZoomedRange-(priceExtent[0]+priceRange*0.5))/priceRange;const maxPanDown=(dataMin+halfZoomedRange-(priceExtent[0]+priceRange*0.5))/priceRange;// Constrain to bounds\nconst constrainedPanY=Math.max(maxPanDown,Math.min(maxPanUp,newPanY));return _objectSpread(_objectSpread({},prev),{},{panY:constrainedPanY});});};// Add wheel event listener\nconst svgElement=svgRef.current;if(svgElement){svgElement.addEventListener('wheel',handleWheel,{passive:false});return()=>svgElement.removeEventListener('wheel',handleWheel);}},[data,liquidityData,zoomLevel,panY,yScale,current,currentTick,minPrice,maxPrice]);// Set reasonable initial view on first load\nuseEffect(()=>{if(!initialViewSet&&data&&liquidityData&&liquidityData.length>0){var _data2;const allPrices=[...data.map(d=>d.value),...liquidityData.map(d=>d.price0)];const priceExtent=d3.extent(allPrices);const priceRange=priceExtent[1]-priceExtent[0];// Filter out extreme outliers for initial view - focus on middle 20% of liquidity\nconst liquidityPrices=liquidityData.map(d=>d.price0).sort((a,b)=>a-b);const percentile20=liquidityPrices[Math.floor(liquidityPrices.length*0.2)];const percentile80=liquidityPrices[Math.floor(liquidityPrices.length*0.8)];// Set initial zoom to focus on the 20-80% range of liquidity with tighter view\nconst focusRange=percentile80-percentile20;const desiredZoom=Math.min(priceRange/(focusRange*1),25);// Show ~1x the focus range, max 25x zoom\n// Center the view on the current price (last data point)\nconst currentPrice=(_data2=data[data.length-1])===null||_data2===void 0?void 0:_data2.value;const originalCenter=priceExtent[0]+priceRange*0.5;const panOffset=(currentPrice-originalCenter)/priceRange;// Set default brush range - use a symmetrical range around current price\n// Use 10% of the total price range for the brush range (tighter)\nconst brushRangeSize=priceRange*0.1;const defaultMinPrice=currentPrice-brushRangeSize/2;const defaultMaxPrice=currentPrice+brushRangeSize/2;// Update both current state and default state\nconst newDefaultState={zoomLevel:desiredZoom,panY:panOffset,minPrice:defaultMinPrice,maxPrice:defaultMaxPrice};defaultState.current=newDefaultState;setChartState(newDefaultState);setInitialViewSet(true);}},[data,liquidityData,initialViewSet]);const handleZoomIn=()=>{const targetZoom=Math.min(zoomLevel*1.3,50);animateToState(targetZoom,panY,null,null,300);// Faster for zoom buttons\n};const handleZoomOut=()=>{const targetZoom=Math.max(zoomLevel/1.3,0.1);animateToState(targetZoom,panY,null,null,300);// Faster for zoom buttons\n};// Smooth animation utility function with optional price range animation\nconst animateToState=function(targetZoom,targetPan){let targetMinPrice=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;let targetMaxPrice=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;let duration=arguments.length>4&&arguments[4]!==undefined?arguments[4]:400;const startZoom=zoomLevel;const startPan=panY;const startMinPrice=minPrice;const startMaxPrice=maxPrice;const startTime=Date.now();const animate=()=>{const elapsed=Date.now()-startTime;const progress=Math.min(elapsed/duration,1);// Modern easeOutQuart for snappy, smooth feel\nconst easeProgress=1-Math.pow(1-progress,4);// Interpolate zoom and pan values\nconst currentZoom=startZoom+(targetZoom-startZoom)*easeProgress;const currentPan=startPan+(targetPan-startPan)*easeProgress;// Interpolate price range if targets provided\nlet currentMinPrice=startMinPrice;let currentMaxPrice=startMaxPrice;if(targetMinPrice!==null&&targetMaxPrice!==null){if(startMinPrice!==null&&startMaxPrice!==null){currentMinPrice=startMinPrice+(targetMinPrice-startMinPrice)*easeProgress;currentMaxPrice=startMaxPrice+(targetMaxPrice-startMaxPrice)*easeProgress;}else{// If no current range, just set the target at the end\nif(progress===1){currentMinPrice=targetMinPrice;currentMaxPrice=targetMaxPrice;}}}setChartState(prev=>_objectSpread(_objectSpread({},prev),{},{zoomLevel:currentZoom,panY:currentPan,minPrice:currentMinPrice,maxPrice:currentMaxPrice}));if(progress<1){requestAnimationFrame(animate);}};animate();};const handleResetZoom=()=>{// Animate reset of zoom, pan, and price range\nanimateToState(defaultState.current.zoomLevel,defaultState.current.panY,defaultState.current.minPrice,defaultState.current.maxPrice,500// Slightly longer for full reset\n);};const handleCenterRange=()=>{if(minPrice===null||maxPrice===null||!data||!liquidityData)return;// Calculate all prices to get data bounds\nconst allPrices=[...data.map(d=>d.value),...liquidityData.map(d=>d.price0)];const priceExtent=d3.extent(allPrices);const totalPriceRange=priceExtent[1]-priceExtent[0];// Calculate range center and size\nconst rangeCenter=(minPrice+maxPrice)/2;const rangeSize=maxPrice-minPrice;// Calculate required pan to center the range\nconst originalCenter=priceExtent[0]+totalPriceRange*0.5;const targetPanY=(rangeCenter-originalCenter)/totalPriceRange;// Calculate required zoom to fit the range (with some padding)\nconst paddingFactor=1.2;// 20% padding around the range\nconst visibleRangeNeeded=rangeSize*paddingFactor;const currentVisibleRange=totalPriceRange/zoomLevel;let targetZoomLevel=zoomLevel;if(visibleRangeNeeded>currentVisibleRange){// Need to zoom out to fit the range\ntargetZoomLevel=totalPriceRange/visibleRangeNeeded;targetZoomLevel=Math.max(targetZoomLevel,0.1);// Don't zoom out too far\n}// Animate the transition with faster, smoother timing\nanimateToState(targetZoomLevel,targetPanY,null,null,500);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px',background:'#f9f9f9',padding:'12px',borderRadius:'4px',border:'1px solid #ddd',display:'flex',gap:'20px',alignItems:'flex-start',flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'4px',fontSize:'12px',fontWeight:'bold'},children:[\"Zoom: \",zoomLevel.toFixed(1),\"x\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'4px',marginBottom:'4px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleZoomIn,style:{fontSize:'12px',padding:'4px 8px'},children:\"Zoom In (+)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleZoomOut,style:{fontSize:'12px',padding:'4px 8px'},children:\"Zoom Out (-)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResetZoom,style:{fontSize:'12px',padding:'4px 8px'},children:\"Reset\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCenterRange,disabled:minPrice===null||maxPrice===null,style:{fontSize:'12px',padding:'4px 8px',opacity:minPrice===null||maxPrice===null?0.5:1,cursor:minPrice===null||maxPrice===null?'not-allowed':'pointer'},children:\"Center Range\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'10px',color:'#666',textAlign:'center'},children:\"Scroll to pan\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'4px',fontSize:'12px',fontWeight:'bold'},children:\"Price Range\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'8px',alignItems:'center',flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'4px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{fontSize:'11px',minWidth:'30px'},children:\"Min:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:minPrice||'',onChange:e=>setMinPrice(e.target.value?parseFloat(e.target.value):null),style:{fontSize:'11px',padding:'4px 6px',border:'1px solid #ccc',borderRadius:'4px',width:'90px'},step:\"0.01\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'4px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{fontSize:'11px',minWidth:'30px'},children:\"Max:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:maxPrice||'',onChange:e=>setMaxPrice(e.target.value?parseFloat(e.target.value):null),style:{fontSize:'11px',padding:'4px 6px',border:'1px solid #ccc',borderRadius:'4px',width:'90px'},step:\"0.01\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setMinPrice(null);setMaxPrice(null);},style:{fontSize:'11px',padding:'4px 8px',backgroundColor:'#fff',border:'1px solid #ccc',borderRadius:'4px',cursor:'pointer'},children:\"Clear Range\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{position:'relative'},children:/*#__PURE__*/_jsx(\"svg\",{ref:svgRef,width:900,height:400,style:{border:'1px solid #ccc'}})})]});};export default D3Chart;","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","d3","PriceRange","PriceDragPoints","jsxs","_jsxs","jsx","_jsx","priceDataCache","Map","findClosestElementBinarySearch","data","target","_data$right","_data$left","left","right","length","has","toString","get","mid","Math","floor","price0","set","closest","Infinity","nextClosest","closestElement","abs","scaleToInteger","a","precision","arguments","undefined","scaleFactor","pow","round","D3Chart","_ref","liquidityData","svgRef","initialViewSet","setInitialViewSet","dragInProgress","setDragInProgress","defaultState","zoomLevel","panY","minPrice","maxPrice","chartState","setChartState","current","_data","value","currentTick","_findClosestElementBi","tick","brushExtent","setBrushExtent","extent","prev","_objectSpread","setMinPrice","price","setMaxPrice","setZoomLevel","zoom","setPanY","pan","yScale","allPrices","map","d","priceExtent","priceRange","zoomedRange","centerPrice","scaleLinear","domain","range","svg","select","selectAll","remove","margin","top","bottom","width","height","g","append","attr","concat","priceData","date","Date","time","xScale","scaleTime","line","x","y","curve","curveMonotoneX","i","currentPoint","nextPoint","isInRange","color","datum","liquidityWidth","liquidityYScale","currentPriceRange","currentZoomedRange","currentCenterPrice","visibleMinPrice","visibleMaxPrice","visibleLiquidityData","filter","maxVisibleLiquidity","max","activeLiquidity","liquidityXScale","bars","exit","transition","duration","style","enterBars","enter","merge","parseFloat","min","minY","maxY","linesAreTooClose","call","drag","on","event","currentRangeCenterY","_dragOffsetY","adjustedY","newCenterY","draggedPrice","invert","rangeSize","newMaxPrice","newMinPrice","dataMin","dataMax","newMaxY","newMinY","text","toFixed","minimapYScale","newY","newPrice","currentMaxY","draggedMinPrice","draggedMaxPrice","currentMinY","minimapWidth","minimapX","minimapPrices","fullDataRange","currentCenter","viewportMinPrice","viewportMaxPrice","viewportHeight","currentRangeHeight","minimapRange","newCenterPrice","topHandle","bottomHandle","newCenterHandleY","centerHandle","rangeCenterInData","dataCenterPosition","handleRadius","centerY","constrainedMaxPrice","constrainedMinPrice","handleWheel","preventDefault","stopPropagation","currentMin","currentMax","scrollSensitivity","rawScrollAmount","deltaY","scrollAmount","newPanY","halfZoomedRange","maxPanUp","maxPanDown","constrainedPanY","svgElement","addEventListener","passive","removeEventListener","_data2","liquidityPrices","sort","b","percentile20","percentile80","focusRange","desiredZoom","currentPrice","originalCenter","panOffset","brushRangeSize","defaultMinPrice","defaultMaxPrice","newDefaultState","handleZoomIn","targetZoom","animateToState","handleZoomOut","targetPan","targetMinPrice","targetMaxPrice","startZoom","startPan","startMinPrice","startMaxPrice","startTime","now","animate","elapsed","progress","easeProgress","currentZoom","currentPan","currentMinPrice","currentMaxPrice","requestAnimationFrame","handleResetZoom","handleCenterRange","totalPriceRange","rangeCenter","targetPanY","paddingFactor","visibleRangeNeeded","currentVisibleRange","targetZoomLevel","children","marginBottom","background","padding","borderRadius","border","display","gap","alignItems","flexWrap","fontSize","fontWeight","onClick","disabled","opacity","cursor","textAlign","minWidth","type","onChange","e","step","backgroundColor","position","ref"],"sources":["/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport PriceRange from './PriceRange';\nimport PriceDragPoints from './PriceDragPoints';\n\n// Cache for price data lookups\nconst priceDataCache = new Map();\n\nfunction findClosestElementBinarySearch(data, target) {\n  let left = 0;\n  let right = data.length - 1;\n\n  if (!target) {\n    return null;\n  }\n\n  if (priceDataCache.has(target.toString())) {\n    return priceDataCache.get(target.toString());\n  }\n\n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n\n    if (data[mid].price0 === target) {\n      priceDataCache.set(target.toString(), data[mid]);\n      return data[mid];\n    } else if (data[mid].price0 < target) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n\n  // After binary search, left and right are the closest bounds\n  const closest = data[right] ?? { price0: Infinity }; // Handle bounds\n  const nextClosest = data[left] ?? { price0: Infinity };\n\n  // Return the element with the closest `price0`\n  const closestElement =\n    Math.abs(closest.price0 - target) <= Math.abs(nextClosest.price0 - target) ? closest : nextClosest;\n\n  priceDataCache.set(target.toString(), closestElement);\n  return closestElement;\n}\n\nfunction scaleToInteger(a, precision = 18) {\n  const scaleFactor = Math.pow(10, precision);\n  return Math.round(a * scaleFactor);\n}\n\nconst D3Chart = ({ data, liquidityData }) => {\n  const svgRef = useRef();\n  const [initialViewSet, setInitialViewSet] = useState(false);\n  const [dragInProgress, setDragInProgress] = useState(false);\n  \n  // Default state object\n  const defaultState = useRef({\n    zoomLevel: 1,\n    panY: 0,\n    minPrice: null,\n    maxPrice: null\n  });\n  \n  // Main state object\n  const [chartState, setChartState] = useState({\n    zoomLevel: 1,\n    panY: 0,\n    minPrice: null,\n    maxPrice: null\n  });\n  \n  // Destructure for easier access\n  const { zoomLevel, panY, minPrice, maxPrice } = chartState;\n  \n  // Calculate current price from the last entry\n  const current = useMemo(() => {\n    return data && data.length > 0 ? data[data.length - 1]?.value : null;\n  }, [data]);\n  \n  // Calculate currentTick based on current price\n  const currentTick = useMemo(() => {\n    if (!current || !liquidityData) return null;\n    return findClosestElementBinarySearch(liquidityData, current)?.tick;\n  }, [current, liquidityData]);\n  \n  // Brush extent as [min, max] array\n  const brushExtent = useMemo(() => {\n    if (minPrice !== null && maxPrice !== null) {\n      return [minPrice, maxPrice];\n    }\n    return null;\n  }, [minPrice, maxPrice]);\n  \n  const setBrushExtent = (extent) => {\n    if (extent && extent.length === 2) {\n      setChartState(prev => ({\n        ...prev,\n        minPrice: extent[0],\n        maxPrice: extent[1]\n      }));\n    } else {\n      setChartState(prev => ({\n        ...prev,\n        minPrice: null,\n        maxPrice: null\n      }));\n    }\n  };\n  \n  // Helper functions for updating individual state properties\n  const setMinPrice = (price) => setChartState(prev => ({ ...prev, minPrice: price }));\n  const setMaxPrice = (price) => setChartState(prev => ({ ...prev, maxPrice: price }));\n  const setZoomLevel = (zoom) => setChartState(prev => ({ ...prev, zoomLevel: zoom }));\n  const setPanY = (pan) => setChartState(prev => ({ ...prev, panY: pan }));\n\n  // Calculate yScale outside useEffect so it's available for Brush component\n  const yScale = useMemo(() => {\n    if (!data || !liquidityData) return null;\n    \n    const allPrices = [\n      ...data.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n    \n    const priceRange = priceExtent[1] - priceExtent[0];\n    const zoomedRange = priceRange / zoomLevel;\n    const centerPrice = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n    \n    return d3.scaleLinear()\n      .domain([\n        centerPrice - zoomedRange / 2,\n        centerPrice + zoomedRange / 2\n      ])\n      .range([400 - 20 - 50, 0]); // [height, 0] for proper D3 coordinate system\n  }, [data, liquidityData, zoomLevel, panY]);\n\n  useEffect(() => {\n    if (!data || !liquidityData || !yScale) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"g\").remove(); // Only remove D3-created elements, not React elements\n\n    const margin = { top: 20, right: 180, bottom: 50, left: 80 }; // Increased right margin for minimap\n    const width = 900 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [\n      ...priceData.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(priceData, d => d.date))\n      .range([-80, width - 40]); // Extend left but stop before liquidity section\n\n    // Line generator for price\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.value))\n      .curve(d3.curveMonotoneX);\n\n    // Draw price line with conditional coloring\n    if (minPrice !== null && maxPrice !== null) {\n      // Draw segments with different colors based on price range\n      for (let i = 0; i < priceData.length - 1; i++) {\n        const currentPoint = priceData[i];\n        const nextPoint = priceData[i + 1];\n        \n        // Check if current point is within range\n        const isInRange = currentPoint.value >= minPrice && currentPoint.value <= maxPrice;\n        const color = isInRange ? \"#d63384\" : \"#888888\"; // Dark pink or grey\n        \n        // Draw line segment between current and next point\n        g.append(\"path\")\n          .datum([currentPoint, nextPoint])\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", color)\n          .attr(\"stroke-width\", 2)\n          .attr(\"d\", line)\n          .attr(\"class\", \"price-segment\");\n      }\n    } else {\n      // Draw single blue line when no range is selected\n      g.append(\"path\")\n        .datum(priceData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#2196F3\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"d\", line)\n        .attr(\"class\", \"price-line\");\n    }\n\n    // Remove X and left Y axes completely\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right; // Use full margin width\n    \n    // Use the same unified y scale for liquidity positioning\n    const liquidityYScale = yScale;\n\n    // Calculate current visible price range for filtering liquidity data\n    const currentPriceRange = priceExtent[1] - priceExtent[0];\n    const currentZoomedRange = currentPriceRange / zoomLevel;\n    const currentCenterPrice = priceExtent[0] + currentPriceRange * 0.5 + panY * currentPriceRange;\n    const visibleMinPrice = currentCenterPrice - currentZoomedRange / 2;\n    const visibleMaxPrice = currentCenterPrice + currentZoomedRange / 2;\n\n    // Filter liquidity data to only entries within visible price range\n    const visibleLiquidityData = liquidityData.filter(d => \n      d.price0 >= visibleMinPrice && d.price0 <= visibleMaxPrice\n    );\n\n    // X scale for liquidity amounts - scale based only on visible entries\n    const maxVisibleLiquidity = visibleLiquidityData.length > 0 \n      ? d3.max(visibleLiquidityData, d => d.activeLiquidity)\n      : d3.max(liquidityData, d => d.activeLiquidity); // Fallback if no visible data\n\n    const liquidityXScale = d3.scaleLinear()\n      .domain([0, maxVisibleLiquidity])\n      .range([0, liquidityWidth]); // Back to liquidity section width\n\n    // Draw very thin grey horizontal liquidity bars using data join for better performance\n    const bars = g.selectAll(\".liquidity-bar\")\n      .data(liquidityData, d => d.price0); // Use price as key for consistent updates\n    \n    // Remove bars that are no longer needed\n    bars.exit()\n      .transition()\n      .duration(150)\n      .style(\"opacity\", 0)\n      .remove();\n    \n    // Add new bars\n    const enterBars = bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"liquidity-bar\")\n      .attr(\"height\", 1)\n      .attr(\"opacity\", 0.7)\n      .attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity) - 40)\n      .attr(\"y\", d => liquidityYScale(d.price0) - 0.5)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n    \n    // Update existing bars with smooth transitions and conditional coloring\n    bars.merge(enterBars)\n      .transition()\n      .duration(100)\n      .attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity) - 40)\n      .attr(\"y\", d => liquidityYScale(d.price0) - 0.5)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity))\n      .attr(\"fill\", d => {\n        // Check if bar is within the price range - ensure proper number comparison\n        const price = parseFloat(d.price0);\n        const min = parseFloat(minPrice);\n        const max = parseFloat(maxPrice);\n        \n        if (minPrice !== null && maxPrice !== null && \n            price >= min && price <= max) {\n          return \"#d63384\"; // Dark pink for bars within range\n        }\n        return \"#888888\"; // Default grey\n      });\n\n    // No price labels needed\n\n    // Draw price range visualization directly in the main chart\n    if (minPrice !== null && maxPrice !== null) {\n      // Remove existing range elements\n      g.selectAll(\".price-range-element\").remove();\n      \n      // Check if lines are too close together (less than 5px apart)\n      const minY = yScale(minPrice);\n      const maxY = yScale(maxPrice);\n      const linesAreTooClose = Math.abs(minY - maxY) < 5;\n      \n      // Draw transparent pink background between min and max - extend to cover full chart area\n      g.append('rect')\n        .attr('class', 'price-range-element price-range-bg')\n        .attr('x', -80) // Extend left to cover the margin area\n        .attr('y', yScale(maxPrice))\n        .attr('width', 900) // Cover the entire SVG width\n        .attr('height', yScale(minPrice) - yScale(maxPrice))\n        .attr('fill', '#ff69b4')\n        .attr('fill-opacity', 0.15)\n        .attr('stroke', 'none') // Remove any border from background\n        .attr('cursor', 'move')\n        .call(d3.drag()\n          .on('start', function(event) {\n            setDragInProgress(true);\n            // Store the initial click offset relative to the range center\n            const currentRangeCenterY = (yScale(maxPrice) + yScale(minPrice)) / 2;\n            this._dragOffsetY = event.y - currentRangeCenterY;\n          })\n          .on('drag', function(event) {\n            // Apply the stored offset to maintain consistent drag feel\n            const adjustedY = event.y - this._dragOffsetY;\n            const newCenterY = Math.max(0, Math.min(height, adjustedY));\n            const draggedPrice = yScale.invert(newCenterY);\n            const rangeSize = maxPrice - minPrice;\n            \n            // Calculate new min/max based on dragged center position\n            const newMaxPrice = draggedPrice + rangeSize / 2;\n            const newMinPrice = draggedPrice - rangeSize / 2;\n            \n            // Get data bounds to prevent dragging outside chart\n            const allPrices = [\n              ...data.map(d => d.value),\n              ...liquidityData.map(d => d.price0)\n            ];\n            const dataMin = Math.min(...allPrices);\n            const dataMax = Math.max(...allPrices);\n            \n            // Only update if range stays within data bounds\n            if (newMinPrice >= dataMin && newMaxPrice <= dataMax) {\n              // Update background position\n              const newMaxY = yScale(newMaxPrice);\n              const newMinY = yScale(newMinPrice);\n              \n              d3.select(this)\n                .attr('y', newMaxY)\n                .attr('height', newMinY - newMaxY);\n              \n              // Update min line\n              g.select('.min-line')\n                .attr('y1', newMinY)\n                .attr('y2', newMinY);\n                \n              // Update max line\n              g.select('.max-line')\n                .attr('y1', newMaxY)\n                .attr('y2', newMaxY);\n                \n              // Update labels\n              g.select('.min-label')\n                .attr('x', -68)\n                .attr('y', newMinY - 5)\n                .text(`Min: ${newMinPrice.toFixed(0)}`);\n                \n              g.select('.max-label')\n                .attr('x', -68)\n                .attr('y', newMaxY + 15)\n                .text(`Max: ${newMaxPrice.toFixed(0)}`);\n                \n              // Update liquidity bar colors\n              g.selectAll('.liquidity-bar')\n                .attr('fill', d => {\n                  const price = parseFloat(d.price0);\n                  if (price >= newMinPrice && price <= newMaxPrice) {\n                    return \"#d63384\";\n                  }\n                  return \"#888888\";\n                });\n                \n              // Update price line segment colors\n              g.selectAll('.price-segment')\n                .attr('stroke', function() {\n                  const datum = d3.select(this).datum();\n                  if (datum && datum.length > 0) {\n                    const value = datum[0].value;\n                    return (value >= newMinPrice && value <= newMaxPrice) ? \"#d63384\" : \"#888888\";\n                  }\n                  return \"#888888\";\n                });\n                \n              // Update minimap controls to reflect new positions\n              g.select('.minimap-range')\n                .attr('y', minimapYScale(newMaxPrice))\n                .attr('height', minimapYScale(newMinPrice) - minimapYScale(newMaxPrice));\n                \n              g.select('.max-handle')\n                .attr('cy', minimapYScale(newMaxPrice));\n                \n              g.select('.min-handle')\n                .attr('cy', minimapYScale(newMinPrice));\n                \n              g.select('.center-handle')\n                .attr('cy', (minimapYScale(newMaxPrice) + minimapYScale(newMinPrice)) / 2);\n            }\n          })\n          .on('end', function(event) {\n            // Apply the same offset calculation for consistency\n            const adjustedY = event.y - this._dragOffsetY;\n            const newCenterY = Math.max(margin.top, Math.min(400 - margin.bottom, adjustedY));\n            const draggedPrice = yScale.invert(newCenterY);\n            const rangeSize = maxPrice - minPrice;\n            \n            // Calculate new min/max based on dragged center position\n            const newMaxPrice = draggedPrice + rangeSize / 2;\n            const newMinPrice = draggedPrice - rangeSize / 2;\n            \n            // Get data bounds\n            const allPrices = [\n              ...data.map(d => d.value),\n              ...liquidityData.map(d => d.price0)\n            ];\n            const dataMin = Math.min(...allPrices);\n            const dataMax = Math.max(...allPrices);\n            \n            // Only update state if range stays within data bounds\n            if (newMinPrice >= dataMin && newMaxPrice <= dataMax) {\n              setMinPrice(newMinPrice);\n              setMaxPrice(newMaxPrice);\n            }\n            \n            setDragInProgress(false);\n          })\n        );\n\n      // Draw min price line (solid) with drag behavior\n      g.append('line')\n        .attr('class', 'price-range-element min-line')\n        .attr('x1', -80) // Start from left margin\n        .attr('x2', 820) // Extend to right edge (900 - 80 = 820)\n        .attr('y1', yScale(minPrice))\n        .attr('y2', yScale(minPrice))\n        .attr('stroke', '#131313')\n        .attr('stroke-width', 2)\n        .attr('opacity', 0.08)\n        .attr('cursor', 'ns-resize')\n        .call(d3.drag()\n          .on('start', function() {\n            setDragInProgress(true);\n          })\n          .on('drag', function(event) {\n            const newY = Math.max(-margin.top, Math.min(height + margin.bottom, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Update visual position immediately\n            d3.select(this)\n              .attr('y1', newY)\n              .attr('y2', newY);\n            \n            // Determine which line represents min and max during drag\n            const currentMaxY = yScale(maxPrice);\n            let draggedMinPrice = newPrice;\n            let draggedMaxPrice = maxPrice;\n            \n            // Handle visual swapping if lines cross\n            if (newY < currentMaxY) {\n              // Min line dragged above max line - swap visually\n              draggedMinPrice = maxPrice;\n              draggedMaxPrice = newPrice;\n              \n              // Update max line color to min color and vice versa\n              g.select('.max-line')\n                .attr('stroke', '#131313'); // Same color for both\n              d3.select(this)\n                .attr('stroke', '#131313'); // Same color for both\n            } else {\n              // Lines in normal order - restore original colors\n              g.select('.max-line')\n                .attr('stroke', '#131313'); // Same color for both\n              d3.select(this)\n                .attr('stroke', '#131313'); // Same color for both\n            }\n            \n            // Update background\n            g.select('.price-range-bg')\n              .attr('y', yScale(draggedMaxPrice))\n              .attr('height', yScale(draggedMinPrice) - yScale(draggedMaxPrice));\n            \n            // Update labels\n            g.select('.min-label')\n              .attr('x', -68)\n              .attr('y', yScale(draggedMinPrice) - 5)\n              .text(`Min: ${draggedMinPrice.toFixed(0)}`);\n            g.select('.max-label')\n              .attr('x', -68)\n              .attr('y', yScale(draggedMaxPrice) + 15)\n              .text(`Max: ${draggedMaxPrice.toFixed(0)}`);\n            \n            // Update liquidity bar colors\n            g.selectAll('.liquidity-bar')\n              .attr('fill', d => {\n                const price = parseFloat(d.price0);\n                if (price >= draggedMinPrice && price <= draggedMaxPrice) {\n                  return \"#d63384\";\n                }\n                return \"#888888\";\n              });\n            \n            // Update price line segment colors\n            g.selectAll('.price-segment')\n              .attr('stroke', function() {\n                const datum = d3.select(this).datum();\n                if (datum && datum.length > 0) {\n                  const value = datum[0].value;\n                  return (value >= draggedMinPrice && value <= draggedMaxPrice) ? \"#d63384\" : \"#888888\";\n                }\n                return \"#888888\";\n              });\n              \n            // Update minimap controls for min line drag\n            g.select('.minimap-range')\n              .attr('y', minimapYScale(draggedMaxPrice))\n              .attr('height', minimapYScale(draggedMinPrice) - minimapYScale(draggedMaxPrice));\n              \n            g.select('.max-handle')\n              .attr('cy', minimapYScale(draggedMaxPrice));\n              \n            g.select('.min-handle')\n              .attr('cy', minimapYScale(draggedMinPrice));\n              \n            g.select('.center-handle')\n              .attr('cy', (minimapYScale(draggedMaxPrice) + minimapYScale(draggedMinPrice)) / 2);\n          })\n          .on('end', function(event) {\n            const newY = Math.max(-margin.top, Math.min(height + margin.bottom, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Handle final state update with proper min/max ordering\n            if (newPrice > maxPrice) {\n              // Min dragged above max - swap them in state\n              setMinPrice(maxPrice);\n              setMaxPrice(newPrice);\n            } else {\n              // Normal case - just update min\n              setMinPrice(newPrice);\n            }\n            \n            setDragInProgress(false);\n          })\n        );\n\n      // Draw max price line (solid) with drag behavior\n      g.append('line')\n        .attr('class', 'price-range-element max-line')\n        .attr('x1', -80) // Start from left margin\n        .attr('x2', 820) // Extend to right edge (900 - 80 = 820)\n        .attr('y1', yScale(maxPrice))\n        .attr('y2', yScale(maxPrice))\n        .attr('stroke', '#131313')\n        .attr('stroke-width', 2)\n        .attr('opacity', 0.08)\n        .attr('cursor', 'ns-resize')\n        .call(d3.drag()\n          .on('start', function() {\n            setDragInProgress(true);\n          })\n          .on('drag', function(event) {\n            const newY = Math.max(-margin.top, Math.min(height + margin.bottom, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Update visual position immediately\n            d3.select(this)\n              .attr('y1', newY)\n              .attr('y2', newY);\n            \n            // Determine which line represents min and max during drag\n            const currentMinY = yScale(minPrice);\n            let draggedMinPrice = minPrice;\n            let draggedMaxPrice = newPrice;\n            \n            // Handle visual swapping if lines cross\n            if (newY > currentMinY) {\n              // Max line dragged below min line - swap visually\n              draggedMinPrice = newPrice;\n              draggedMaxPrice = minPrice;\n              \n              // Update min line color to max color and vice versa\n              g.select('.min-line')\n                .attr('stroke', '#131313'); // Same color for both\n              d3.select(this)\n                .attr('stroke', '#131313'); // Same color for both\n            } else {\n              // Lines in normal order - restore original colors\n              g.select('.min-line')\n                .attr('stroke', '#131313'); // Same color for both\n              d3.select(this)\n                .attr('stroke', '#131313'); // Same color for both\n            }\n            \n            // Update background\n            g.select('.price-range-bg')\n              .attr('y', yScale(draggedMaxPrice))\n              .attr('height', yScale(draggedMinPrice) - yScale(draggedMaxPrice));\n            \n            // Update labels\n            g.select('.min-label')\n              .attr('x', -68)\n              .attr('y', yScale(draggedMinPrice) - 5)\n              .text(`Min: ${draggedMinPrice.toFixed(0)}`);\n            g.select('.max-label')\n              .attr('x', -68)\n              .attr('y', yScale(draggedMaxPrice) + 15)\n              .text(`Max: ${draggedMaxPrice.toFixed(0)}`);\n            \n            // Update liquidity bar colors\n            g.selectAll('.liquidity-bar')\n              .attr('fill', d => {\n                const price = parseFloat(d.price0);\n                if (price >= draggedMinPrice && price <= draggedMaxPrice) {\n                  return \"#d63384\";\n                }\n                return \"#888888\";\n              });\n            \n            // Update price line segment colors\n            g.selectAll('.price-segment')\n              .attr('stroke', function() {\n                const datum = d3.select(this).datum();\n                if (datum && datum.length > 0) {\n                  const value = datum[0].value;\n                  return (value >= draggedMinPrice && value <= draggedMaxPrice) ? \"#d63384\" : \"#888888\";\n                }\n                return \"#888888\";\n              });\n              \n            // Update minimap controls for max line drag\n            g.select('.minimap-range')\n              .attr('y', minimapYScale(draggedMaxPrice))\n              .attr('height', minimapYScale(draggedMinPrice) - minimapYScale(draggedMaxPrice));\n              \n            g.select('.max-handle')\n              .attr('cy', minimapYScale(draggedMaxPrice));\n              \n            g.select('.min-handle')\n              .attr('cy', minimapYScale(draggedMinPrice));\n              \n            g.select('.center-handle')\n              .attr('cy', (minimapYScale(draggedMaxPrice) + minimapYScale(draggedMinPrice)) / 2);\n          })\n          .on('end', function(event) {\n            const newY = Math.max(-margin.top, Math.min(height + margin.bottom, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Handle final state update with proper min/max ordering\n            if (newPrice < minPrice) {\n              // Max dragged below min - swap them in state\n              setMaxPrice(minPrice);\n              setMinPrice(newPrice);\n            } else {\n              // Normal case - just update max\n              setMaxPrice(newPrice);\n            }\n            \n            setDragInProgress(false);\n          })\n        );\n        \n      // Add min price label\n      g.append('text')\n        .attr('class', 'price-range-element min-label')\n        .attr('x', -68) // 12px from left border (-80 + 12)\n        .attr('y', yScale(minPrice) - 5)\n        .attr('font-size', '10px')\n        .attr('fill', '#131313')\n        .attr('font-weight', 'bold')\n        .text(`Min: ${minPrice.toFixed(0)}`);\n        \n      // Add max price label\n      g.append('text')\n        .attr('class', 'price-range-element max-label')\n        .attr('x', -68) // 12px from left border (-80 + 12)\n        .attr('y', yScale(maxPrice) + 15)\n        .attr('font-size', '10px')\n        .attr('fill', '#131313')\n        .attr('font-weight', 'bold')\n        .text(`Max: ${maxPrice.toFixed(0)}`);\n    }\n\n    // Draw current price line (dotted) if current price exists\n    if (current !== null) {\n      // Remove existing current price line\n      g.selectAll('.current-price-line').remove();\n      g.selectAll('.current-price-label').remove();\n      \n      // Draw dotted line across the entire chart for current price\n      g.append('line')\n        .attr('class', 'current-price-line')\n        .attr('x1', -80) // Start from left margin\n        .attr('x2', 820) // Extend to right edge (900 - 80 = 820)\n        .attr('y1', yScale(current))\n        .attr('y2', yScale(current))\n        .attr('stroke', '#666666') // Grey color\n        .attr('stroke-width', 2)\n        .attr('stroke-dasharray', '5,5') // Dotted line pattern\n        .attr('opacity', 0.8);\n        \n      // Add current price label on the left like min/max\n      g.append('text')\n        .attr('class', 'current-price-label')\n        .attr('x', -68) // 12px from left border (-80 + 12)\n        .attr('y', yScale(current) - 5)\n        .attr('font-size', '10px')\n        .attr('fill', '#666666') // Grey color\n        .attr('font-weight', 'bold')\n        .text(`Current: ${current.toFixed(0)}`);\n    }\n\n    // Create minimap controls on the right side\n    const minimapWidth = 40;\n    const minimapX = width + 160; // Position near the right border\n    \n    // Get full data range for minimap scale\n    const minimapPrices = [...data.map(d => d.value), ...liquidityData.map(d => d.price0)];\n    const dataMin = Math.min(...minimapPrices);\n    const dataMax = Math.max(...minimapPrices);\n    \n    // Create scale for full data range (for minimap) - full container height\n    const minimapYScale = d3.scaleLinear()\n      .domain([dataMin, dataMax])\n      .range([400 - margin.bottom, margin.top]);\n    \n    // Remove liquidity bars from minimap - not needed\n    \n    // Draw minimap background track (full container height)\n    g.append('rect')\n      .attr('class', 'minimap-track')\n      .attr('x', minimapX)\n      .attr('y', -margin.top)\n      .attr('width', 8)\n      .attr('height', 400) // Full container height\n      .attr('fill', '#333333')\n      .attr('rx', 4);\n    \n    // Calculate current viewport bounds based on zoom and pan using full data range\n    const fullDataRange = dataMax - dataMin;\n    const zoomedRange = fullDataRange / zoomLevel;\n    const currentCenter = dataMin + fullDataRange * 0.5 + panY * fullDataRange;\n    const viewportMinPrice = currentCenter - zoomedRange / 2;\n    const viewportMaxPrice = currentCenter + zoomedRange / 2;\n    \n    // Draw viewport indicator (shows current visible area)\n    const viewportHeight = minimapYScale(viewportMinPrice) - minimapYScale(viewportMaxPrice);\n    g.append('rect')\n      .attr('class', 'minimap-viewport')\n      .attr('x', minimapX - 2)\n      .attr('y', minimapYScale(viewportMaxPrice))\n      .attr('width', 12)\n      .attr('height', viewportHeight)\n      .attr('fill', '#ffffff')\n      .attr('fill-opacity', 0.2)\n      .attr('stroke', '#ffffff')\n      .attr('stroke-width', 1)\n      .attr('stroke-opacity', 0.4)\n      .attr('rx', 2);\n    \n    // Draw current range indicator (pink bar) with drag functionality\n    const currentRangeHeight = minimapYScale(minPrice) - minimapYScale(maxPrice);\n    const minimapRange = g.append('rect')\n      .attr('class', 'minimap-range')\n      .attr('x', minimapX)\n      .attr('y', minimapYScale(maxPrice))\n      .attr('width', 8)\n      .attr('height', currentRangeHeight)\n      .attr('fill', '#ff69b4')\n      .attr('rx', 4)\n      .attr('cursor', 'move');\n    \n    // Add drag behavior to the minimap range bar\n    minimapRange.call(d3.drag()\n      .on('start', function() {\n        setDragInProgress(true);\n      })\n      .on('drag', function(event) {\n        const newCenterY = Math.max(margin.top, Math.min(400 - margin.bottom, event.y));\n        const newCenterPrice = minimapYScale.invert(newCenterY);\n        const rangeSize = maxPrice - minPrice;\n        \n        // Calculate new min/max based on center position\n        let newMaxPrice = newCenterPrice + rangeSize / 2;\n        let newMinPrice = newCenterPrice - rangeSize / 2;\n        \n        // Keep within data bounds\n        if (newMaxPrice > dataMax) {\n          newMaxPrice = dataMax;\n          newMinPrice = dataMax - rangeSize;\n        }\n        if (newMinPrice < dataMin) {\n          newMinPrice = dataMin;\n          newMaxPrice = dataMin + rangeSize;\n        }\n        \n        // Update visual positions of handles and range bar\n        topHandle.attr('cy', minimapYScale(newMaxPrice));\n        bottomHandle.attr('cy', minimapYScale(newMinPrice));\n        d3.select(this)\n          .attr('y', minimapYScale(newMaxPrice))\n          .attr('height', minimapYScale(newMinPrice) - minimapYScale(newMaxPrice));\n        \n        // Update center handle position\n        const newCenterHandleY = (minimapYScale(newMaxPrice) + minimapYScale(newMinPrice)) / 2;\n        centerHandle.attr('cy', newCenterHandleY);\n        \n        // Calculate pan position based on where the range is positioned\n        const fullDataRange = dataMax - dataMin;\n        const rangeCenterInData = (newMaxPrice + newMinPrice) / 2;\n        const dataCenterPosition = (rangeCenterInData - dataMin) / fullDataRange - 0.5;\n        \n        // Update chart state to follow the minimap range\n        setChartState(prev => ({\n          ...prev,\n          minPrice: newMinPrice,\n          maxPrice: newMaxPrice,\n          panY: dataCenterPosition\n        }));\n      })\n      .on('end', function() {\n        setDragInProgress(false);\n      })\n    );\n    \n    // Draw drag handles\n    const handleRadius = 8;\n    \n    // Top handle (max price)\n    const topHandle = g.append('circle')\n      .attr('class', 'minimap-handle max-handle')\n      .attr('cx', minimapX + 4)\n      .attr('cy', minimapYScale(maxPrice))\n      .attr('r', handleRadius)\n      .attr('fill', '#ffffff')\n      .attr('stroke', '#ff69b4')\n      .attr('stroke-width', 3)\n      .attr('cursor', 'ns-resize');\n    \n    // Bottom handle (min price) \n    const bottomHandle = g.append('circle')\n      .attr('class', 'minimap-handle min-handle')\n      .attr('cx', minimapX + 4)\n      .attr('cy', minimapYScale(minPrice))\n      .attr('r', handleRadius)\n      .attr('fill', '#ffffff')\n      .attr('stroke', '#ff69b4')\n      .attr('stroke-width', 3)\n      .attr('cursor', 'ns-resize');\n    \n    // Center handle (for dragging entire range)\n    const centerY = (minimapYScale(maxPrice) + minimapYScale(minPrice)) / 2;\n    const centerHandle = g.append('circle')\n      .attr('class', 'minimap-handle center-handle')\n      .attr('cx', minimapX + 4)\n      .attr('cy', centerY)\n      .attr('r', 6)\n      .attr('fill', '#ff69b4')\n      .attr('cursor', 'move');\n    \n    // Add drag behavior to top handle (max price)\n    topHandle.call(d3.drag()\n      .on('start', function() {\n        setDragInProgress(true);\n      })\n      .on('drag', function(event) {\n        const newY = Math.max(margin.top, Math.min(400 - margin.bottom, event.y));\n        const newMaxPrice = minimapYScale.invert(newY);\n        \n        // Ensure max stays above min\n        const constrainedMaxPrice = Math.max(newMaxPrice, minPrice);\n        \n        // Update visual position\n        d3.select(this).attr('cy', minimapYScale(constrainedMaxPrice));\n        \n        // Update range bar\n        g.select('.minimap-range')\n          .attr('y', minimapYScale(constrainedMaxPrice))\n          .attr('height', minimapYScale(minPrice) - minimapYScale(constrainedMaxPrice));\n        \n        // Update center handle position\n        const newCenterY = (minimapYScale(constrainedMaxPrice) + minimapYScale(minPrice)) / 2;\n        centerHandle.attr('cy', newCenterY);\n        \n        // Update main chart price range elements\n        g.select('.price-range-bg')\n          .attr('y', yScale(constrainedMaxPrice))\n          .attr('height', yScale(minPrice) - yScale(constrainedMaxPrice));\n          \n        g.select('.max-line')\n          .attr('y1', yScale(constrainedMaxPrice))\n          .attr('y2', yScale(constrainedMaxPrice));\n          \n        g.select('.max-label')\n          .attr('y', yScale(constrainedMaxPrice) + 15)\n          .text(`Max: ${constrainedMaxPrice.toFixed(0)}`);\n      })\n      .on('end', function(event) {\n        const newY = Math.max(margin.top, Math.min(400 - margin.bottom, event.y));\n        let newMaxPrice = minimapYScale.invert(newY);\n        \n        // If dragged to top, set to data maximum\n        if (newY <= margin.top + 10) {\n          newMaxPrice = dataMax;\n        }\n        \n        // Ensure max stays above min\n        const constrainedMaxPrice = Math.max(newMaxPrice, minPrice);\n        setMaxPrice(constrainedMaxPrice);\n        setDragInProgress(false);\n      })\n    );\n    \n    // Add drag behavior to bottom handle (min price)\n    bottomHandle.call(d3.drag()\n      .on('start', function() {\n        setDragInProgress(true);\n      })\n      .on('drag', function(event) {\n        const newY = Math.max(margin.top, Math.min(400 - margin.bottom, event.y));\n        const newMinPrice = minimapYScale.invert(newY);\n        \n        // Ensure min stays below max\n        const constrainedMinPrice = Math.min(newMinPrice, maxPrice);\n        \n        // Update visual position\n        d3.select(this).attr('cy', minimapYScale(constrainedMinPrice));\n        \n        // Update range bar\n        g.select('.minimap-range')\n          .attr('y', minimapYScale(maxPrice))\n          .attr('height', minimapYScale(constrainedMinPrice) - minimapYScale(maxPrice));\n        \n        // Update center handle position\n        const newCenterY = (minimapYScale(maxPrice) + minimapYScale(constrainedMinPrice)) / 2;\n        centerHandle.attr('cy', newCenterY);\n        \n        // Update main chart price range elements\n        g.select('.price-range-bg')\n          .attr('y', yScale(maxPrice))\n          .attr('height', yScale(constrainedMinPrice) - yScale(maxPrice));\n          \n        g.select('.min-line')\n          .attr('y1', yScale(constrainedMinPrice))\n          .attr('y2', yScale(constrainedMinPrice));\n          \n        g.select('.min-label')\n          .attr('y', yScale(constrainedMinPrice) - 5)\n          .text(`Min: ${constrainedMinPrice.toFixed(0)}`);\n      })\n      .on('end', function(event) {\n        const newY = Math.max(margin.top, Math.min(400 - margin.bottom, event.y));\n        let newMinPrice = minimapYScale.invert(newY);\n        \n        // If dragged to bottom, set to data minimum\n        if (newY >= 400 - margin.bottom - 10) {\n          newMinPrice = dataMin;\n        }\n        \n        // Ensure min stays below max\n        const constrainedMinPrice = Math.min(newMinPrice, maxPrice);\n        setMinPrice(constrainedMinPrice);\n        setDragInProgress(false);\n      })\n    );\n    \n    // Add drag behavior to center handle (drag entire range)\n    centerHandle.call(d3.drag()\n      .on('start', function() {\n        setDragInProgress(true);\n      })\n      .on('drag', function(event) {\n        const newCenterY = Math.max(margin.top, Math.min(400 - margin.bottom, event.y));\n        const newCenterPrice = minimapYScale.invert(newCenterY);\n        const rangeSize = maxPrice - minPrice;\n        \n        // Calculate new min/max based on center position\n        let newMaxPrice = newCenterPrice + rangeSize / 2;\n        let newMinPrice = newCenterPrice - rangeSize / 2;\n        \n        // Keep within data bounds\n        if (newMaxPrice > dataMax) {\n          newMaxPrice = dataMax;\n          newMinPrice = dataMax - rangeSize;\n        }\n        if (newMinPrice < dataMin) {\n          newMinPrice = dataMin;\n          newMaxPrice = dataMin + rangeSize;\n        }\n        \n        // Update visual positions\n        topHandle.attr('cy', minimapYScale(newMaxPrice));\n        bottomHandle.attr('cy', minimapYScale(newMinPrice));\n        d3.select(this).attr('cy', (minimapYScale(newMaxPrice) + minimapYScale(newMinPrice)) / 2);\n        \n        // Update range bar\n        g.select('.minimap-range')\n          .attr('y', minimapYScale(newMaxPrice))\n          .attr('height', minimapYScale(newMinPrice) - minimapYScale(newMaxPrice));\n          \n        // Update main chart price range elements\n        g.select('.price-range-bg')\n          .attr('y', yScale(newMaxPrice))\n          .attr('height', yScale(newMinPrice) - yScale(newMaxPrice));\n          \n        g.select('.min-line')\n          .attr('y1', yScale(newMinPrice))\n          .attr('y2', yScale(newMinPrice));\n          \n        g.select('.max-line')\n          .attr('y1', yScale(newMaxPrice))\n          .attr('y2', yScale(newMaxPrice));\n          \n        g.select('.min-label')\n          .attr('y', yScale(newMinPrice) - 5)\n          .text(`Min: ${newMinPrice.toFixed(0)}`);\n          \n        g.select('.max-label')\n          .attr('y', yScale(newMaxPrice) + 15)\n          .text(`Max: ${newMaxPrice.toFixed(0)}`);\n      })\n      .on('end', function(event) {\n        const newCenterY = Math.max(margin.top, Math.min(400 - margin.bottom, event.y));\n        const newCenterPrice = minimapYScale.invert(newCenterY);\n        const rangeSize = maxPrice - minPrice;\n        \n        // Calculate new min/max based on center position\n        let newMaxPrice = newCenterPrice + rangeSize / 2;\n        let newMinPrice = newCenterPrice - rangeSize / 2;\n        \n        // Keep within data bounds\n        if (newMaxPrice > dataMax) {\n          newMaxPrice = dataMax;\n          newMinPrice = dataMax - rangeSize;\n        }\n        if (newMinPrice < dataMin) {\n          newMinPrice = dataMin;\n          newMaxPrice = dataMin + rangeSize;\n        }\n        \n        setMinPrice(newMinPrice);\n        setMaxPrice(newMaxPrice);\n        setDragInProgress(false);\n      })\n    );\n\n\n    // Setup wheel event handler\n    const handleWheel = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      // Calculate current view bounds\n      const priceRange = priceExtent[1] - priceExtent[0];\n      const zoomedRange = priceRange / zoomLevel;\n      const currentCenter = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n      const currentMin = currentCenter - zoomedRange / 2;\n      const currentMax = currentCenter + zoomedRange / 2;\n      \n      // Natural scroll sensitivity based on current view range\n      const scrollSensitivity = zoomedRange / 600; // Faster scrolling for larger ranges\n      const rawScrollAmount = event.deltaY * scrollSensitivity;\n      \n      // Apply scroll (invert deltaY for natural direction)\n      const scrollAmount = rawScrollAmount / priceRange; // Normalize to pan range\n      \n      setChartState(prev => {\n        const newPanY = prev.panY - scrollAmount;\n        \n        // Dynamic bounds based on data and zoom level\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n        const halfZoomedRange = zoomedRange / 2;\n        \n        // Calculate max pan bounds to keep view within data\n        const maxPanUp = (dataMax - halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        const maxPanDown = (dataMin + halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        \n        // Constrain to bounds\n        const constrainedPanY = Math.max(maxPanDown, Math.min(maxPanUp, newPanY));\n        \n        return { ...prev, panY: constrainedPanY };\n      });\n    };\n\n    // Add wheel event listener\n    const svgElement = svgRef.current;\n    if (svgElement) {\n      svgElement.addEventListener('wheel', handleWheel, { passive: false });\n      return () => svgElement.removeEventListener('wheel', handleWheel);\n    }\n\n  }, [data, liquidityData, zoomLevel, panY, yScale, current, currentTick, minPrice, maxPrice]);\n\n\n  // Set reasonable initial view on first load\n  useEffect(() => {\n    if (!initialViewSet && data && liquidityData && liquidityData.length > 0) {\n      const allPrices = [\n        ...data.map(d => d.value),\n        ...liquidityData.map(d => d.price0)\n      ];\n      const priceExtent = d3.extent(allPrices);\n      const priceRange = priceExtent[1] - priceExtent[0];\n      \n      // Filter out extreme outliers for initial view - focus on middle 20% of liquidity\n      const liquidityPrices = liquidityData.map(d => d.price0).sort((a, b) => a - b);\n      const percentile20 = liquidityPrices[Math.floor(liquidityPrices.length * 0.2)];\n      const percentile80 = liquidityPrices[Math.floor(liquidityPrices.length * 0.8)];\n      \n      // Set initial zoom to focus on the 20-80% range of liquidity with tighter view\n      const focusRange = percentile80 - percentile20;\n      const desiredZoom = Math.min(priceRange / (focusRange * 1), 25); // Show ~1x the focus range, max 25x zoom\n      \n      // Center the view on the current price (last data point)\n      const currentPrice = data[data.length - 1]?.value;\n      const originalCenter = priceExtent[0] + priceRange * 0.5;\n      const panOffset = (currentPrice - originalCenter) / priceRange;\n      \n      // Set default brush range - use a symmetrical range around current price\n      // Use 10% of the total price range for the brush range (tighter)\n      const brushRangeSize = priceRange * 0.1;\n      const defaultMinPrice = currentPrice - brushRangeSize / 2;\n      const defaultMaxPrice = currentPrice + brushRangeSize / 2;\n      \n      // Update both current state and default state\n      const newDefaultState = {\n        zoomLevel: desiredZoom,\n        panY: panOffset,\n        minPrice: defaultMinPrice,\n        maxPrice: defaultMaxPrice\n      };\n      \n      defaultState.current = newDefaultState;\n      setChartState(newDefaultState);\n      \n      setInitialViewSet(true);\n    }\n  }, [data, liquidityData, initialViewSet]);\n\n  const handleZoomIn = () => {\n    const targetZoom = Math.min(zoomLevel * 1.3, 50);\n    animateToState(targetZoom, panY, null, null, 300); // Faster for zoom buttons\n  };\n\n  const handleZoomOut = () => {\n    const targetZoom = Math.max(zoomLevel / 1.3, 0.1);\n    animateToState(targetZoom, panY, null, null, 300); // Faster for zoom buttons\n  };\n\n  // Smooth animation utility function with optional price range animation\n  const animateToState = (targetZoom, targetPan, targetMinPrice = null, targetMaxPrice = null, duration = 400) => {\n    const startZoom = zoomLevel;\n    const startPan = panY;\n    const startMinPrice = minPrice;\n    const startMaxPrice = maxPrice;\n    const startTime = Date.now();\n    \n    const animate = () => {\n      const elapsed = Date.now() - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      \n      // Modern easeOutQuart for snappy, smooth feel\n      const easeProgress = 1 - Math.pow(1 - progress, 4);\n      \n      // Interpolate zoom and pan values\n      const currentZoom = startZoom + (targetZoom - startZoom) * easeProgress;\n      const currentPan = startPan + (targetPan - startPan) * easeProgress;\n      \n      // Interpolate price range if targets provided\n      let currentMinPrice = startMinPrice;\n      let currentMaxPrice = startMaxPrice;\n      \n      if (targetMinPrice !== null && targetMaxPrice !== null) {\n        if (startMinPrice !== null && startMaxPrice !== null) {\n          currentMinPrice = startMinPrice + (targetMinPrice - startMinPrice) * easeProgress;\n          currentMaxPrice = startMaxPrice + (targetMaxPrice - startMaxPrice) * easeProgress;\n        } else {\n          // If no current range, just set the target at the end\n          if (progress === 1) {\n            currentMinPrice = targetMinPrice;\n            currentMaxPrice = targetMaxPrice;\n          }\n        }\n      }\n      \n      setChartState(prev => ({\n        ...prev,\n        zoomLevel: currentZoom,\n        panY: currentPan,\n        minPrice: currentMinPrice,\n        maxPrice: currentMaxPrice\n      }));\n      \n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n    \n    animate();\n  };\n\n  const handleResetZoom = () => {\n    // Animate reset of zoom, pan, and price range\n    animateToState(\n      defaultState.current.zoomLevel, \n      defaultState.current.panY,\n      defaultState.current.minPrice,\n      defaultState.current.maxPrice,\n      500 // Slightly longer for full reset\n    );\n  };\n\n  const handleCenterRange = () => {\n    if (minPrice === null || maxPrice === null || !data || !liquidityData) return;\n    \n    // Calculate all prices to get data bounds\n    const allPrices = [\n      ...data.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n    const totalPriceRange = priceExtent[1] - priceExtent[0];\n    \n    // Calculate range center and size\n    const rangeCenter = (minPrice + maxPrice) / 2;\n    const rangeSize = maxPrice - minPrice;\n    \n    // Calculate required pan to center the range\n    const originalCenter = priceExtent[0] + totalPriceRange * 0.5;\n    const targetPanY = (rangeCenter - originalCenter) / totalPriceRange;\n    \n    // Calculate required zoom to fit the range (with some padding)\n    const paddingFactor = 1.2; // 20% padding around the range\n    const visibleRangeNeeded = rangeSize * paddingFactor;\n    const currentVisibleRange = totalPriceRange / zoomLevel;\n    \n    let targetZoomLevel = zoomLevel;\n    if (visibleRangeNeeded > currentVisibleRange) {\n      // Need to zoom out to fit the range\n      targetZoomLevel = totalPriceRange / visibleRangeNeeded;\n      targetZoomLevel = Math.max(targetZoomLevel, 0.1); // Don't zoom out too far\n    }\n    \n    // Animate the transition with faster, smoother timing\n    animateToState(targetZoomLevel, targetPanY, null, null, 500);\n  };\n\n  return (\n    <div>\n      {/* Controls Panel - Outside Chart */}\n      <div style={{ \n        marginBottom: '10px',\n        background: '#f9f9f9',\n        padding: '12px',\n        borderRadius: '4px',\n        border: '1px solid #ddd',\n        display: 'flex',\n        gap: '20px',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap'\n      }}>\n        {/* Zoom Controls */}\n        <div>\n          <div style={{ marginBottom: '4px', fontSize: '12px', fontWeight: 'bold' }}>\n            Zoom: {zoomLevel.toFixed(1)}x\n          </div>\n          <div style={{ display: 'flex', gap: '4px', marginBottom: '4px' }}>\n            <button onClick={handleZoomIn} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Zoom In (+)\n            </button>\n            <button onClick={handleZoomOut} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Zoom Out (-)\n            </button>\n            <button onClick={handleResetZoom} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Reset\n            </button>\n            <button \n              onClick={handleCenterRange} \n              disabled={minPrice === null || maxPrice === null}\n              style={{ \n                fontSize: '12px', \n                padding: '4px 8px',\n                opacity: minPrice === null || maxPrice === null ? 0.5 : 1,\n                cursor: minPrice === null || maxPrice === null ? 'not-allowed' : 'pointer'\n              }}\n            >\n              Center Range\n            </button>\n          </div>\n          <div style={{ fontSize: '10px', color: '#666', textAlign: 'center' }}>\n            Scroll to pan\n          </div>\n        </div>\n\n        {/* Price Range Controls */}\n        <div>\n          <div style={{ marginBottom: '4px', fontSize: '12px', fontWeight: 'bold' }}>\n            Price Range\n          </div>\n          <div style={{ display: 'flex', gap: '8px', alignItems: 'center', flexWrap: 'wrap' }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n              <label style={{ fontSize: '11px', minWidth: '30px' }}>Min:</label>\n              <input\n                type=\"number\"\n                value={minPrice || ''}\n                onChange={(e) => setMinPrice(e.target.value ? parseFloat(e.target.value) : null)}\n                style={{ \n                  fontSize: '11px', \n                  padding: '4px 6px', \n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  width: '90px'\n                }}\n                step=\"0.01\"\n              />\n            </div>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n              <label style={{ fontSize: '11px', minWidth: '30px' }}>Max:</label>\n              <input\n                type=\"number\"\n                value={maxPrice || ''}\n                onChange={(e) => setMaxPrice(e.target.value ? parseFloat(e.target.value) : null)}\n                style={{ \n                  fontSize: '11px', \n                  padding: '4px 6px', \n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  width: '90px'\n                }}\n                step=\"0.01\"\n              />\n            </div>\n            <button \n              onClick={() => { setMinPrice(null); setMaxPrice(null); }}\n              style={{ \n                fontSize: '11px', \n                padding: '4px 8px', \n                backgroundColor: '#fff',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              Clear Range\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div style={{ position: 'relative' }}>\n        <svg\n        ref={svgRef}\n        width={900}\n        height={400}\n        style={{ border: '1px solid #ccc' }}\n        >\n        </svg>\n        \n        \n      </div>\n    </div>\n  );\n};\n\nexport default D3Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}