{"ast":null,"code":"var _jsxFileName = \"/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst D3Chart = ({\n  data,\n  liquidityData\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data || !liquidityData) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const margin = {\n      top: 20,\n      right: 200,\n      bottom: 50,\n      left: 80\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n    const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [...priceData.map(d => d.value), ...liquidityData.map(d => d.price0)];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime().domain(d3.extent(priceData, d => d.date)).range([0, width]);\n    const yScale = d3.scaleLinear().domain(priceExtent).range([height, 0]);\n\n    // Line generator for price\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.value)).curve(d3.curveMonotoneX);\n\n    // Draw price line\n    g.append(\"path\").datum(priceData).attr(\"fill\", \"none\").attr(\"stroke\", \"#2196F3\").attr(\"stroke-width\", 2).attr(\"d\", line);\n\n    // X-axis\n    g.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(xScale));\n\n    // Left Y-axis for price (unified scale)\n    g.append(\"g\").call(d3.axisLeft(yScale).tickFormat(d3.format(\".2f\")));\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right - 20;\n\n    // Y scale for liquidity prices (same as main chart for alignment)\n    const liquidityYScale = d3.scaleLinear().domain([d3.min(liquidityData, d => d.price0), d3.max(liquidityData, d => d.price0)]).range([height, 0]);\n\n    // X scale for liquidity amounts (bars grow left from right edge)\n    const liquidityXScale = d3.scaleLinear().domain([0, d3.max(liquidityData, d => d.activeLiquidity)]).range([0, liquidityWidth]);\n\n    // Draw horizontal liquidity bars (growing leftward)\n    g.selectAll(\".liquidity-bar\").data(liquidityData).enter().append(\"rect\").attr(\"class\", \"liquidity-bar\").attr(\"x\", d => width + margin.right - 10 - liquidityXScale(d.activeLiquidity)).attr(\"y\", d => liquidityYScale(d.price0) - 2).attr(\"width\", d => liquidityXScale(d.activeLiquidity)).attr(\"height\", 4).attr(\"fill\", \"#FF6B35\").attr(\"opacity\", 0.7);\n\n    // Right Y-axis for liquidity prices\n    g.append(\"g\").attr(\"transform\", `translate(${width + margin.right - 10}, 0)`).call(d3.axisRight(liquidityYScale).tickFormat(d3.format(\".0f\")));\n\n    // Add price labels on bars\n    g.selectAll(\".liquidity-price-label\").data(liquidityData.filter((d, i) => i % 10 === 0)) // Show every 10th label to avoid clutter\n    .enter().append(\"text\").attr(\"class\", \"liquidity-price-label\").attr(\"x\", width + margin.right - 5).attr(\"y\", d => liquidityYScale(d.price0)).attr(\"dy\", \"0.35em\").attr(\"font-size\", \"8px\").attr(\"fill\", \"#666\").attr(\"text-anchor\", \"start\").text(d => d.price0.toFixed(0));\n  }, [data, liquidityData]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    width: 800,\n    height: 400,\n    style: {\n      border: '1px solid #ccc'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(D3Chart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = D3Chart;\nexport default D3Chart;\nvar _c;\n$RefreshReg$(_c, \"D3Chart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","D3Chart","data","liquidityData","_s","svgRef","svg","select","current","selectAll","remove","margin","top","right","bottom","left","width","height","g","append","attr","priceData","map","d","date","Date","time","value","allPrices","price0","priceExtent","extent","xScale","scaleTime","domain","range","yScale","scaleLinear","line","x","y","curve","curveMonotoneX","datum","call","axisBottom","axisLeft","tickFormat","format","liquidityWidth","liquidityYScale","min","max","liquidityXScale","activeLiquidity","enter","axisRight","filter","i","text","toFixed","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst D3Chart = ({ data, liquidityData }) => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    if (!data || !liquidityData) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const margin = { top: 20, right: 200, bottom: 50, left: 80 };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [\n      ...priceData.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(priceData, d => d.date))\n      .range([0, width]);\n\n    const yScale = d3.scaleLinear()\n      .domain(priceExtent)\n      .range([height, 0]);\n\n    // Line generator for price\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.value))\n      .curve(d3.curveMonotoneX);\n\n    // Draw price line\n    g.append(\"path\")\n      .datum(priceData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#2196F3\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"d\", line);\n\n    // X-axis\n    g.append(\"g\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(d3.axisBottom(xScale));\n\n    // Left Y-axis for price (unified scale)\n    g.append(\"g\")\n      .call(d3.axisLeft(yScale).tickFormat(d3.format(\".2f\")));\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right - 20;\n    \n    // Y scale for liquidity prices (same as main chart for alignment)\n    const liquidityYScale = d3.scaleLinear()\n      .domain([d3.min(liquidityData, d => d.price0), d3.max(liquidityData, d => d.price0)])\n      .range([height, 0]);\n\n    // X scale for liquidity amounts (bars grow left from right edge)\n    const liquidityXScale = d3.scaleLinear()\n      .domain([0, d3.max(liquidityData, d => d.activeLiquidity)])\n      .range([0, liquidityWidth]);\n\n    // Draw horizontal liquidity bars (growing leftward)\n    g.selectAll(\".liquidity-bar\")\n      .data(liquidityData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"liquidity-bar\")\n      .attr(\"x\", d => width + margin.right - 10 - liquidityXScale(d.activeLiquidity))\n      .attr(\"y\", d => liquidityYScale(d.price0) - 2)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity))\n      .attr(\"height\", 4)\n      .attr(\"fill\", \"#FF6B35\")\n      .attr(\"opacity\", 0.7);\n\n    // Right Y-axis for liquidity prices\n    g.append(\"g\")\n      .attr(\"transform\", `translate(${width + margin.right - 10}, 0)`)\n      .call(d3.axisRight(liquidityYScale).tickFormat(d3.format(\".0f\")));\n\n    // Add price labels on bars\n    g.selectAll(\".liquidity-price-label\")\n      .data(liquidityData.filter((d, i) => i % 10 === 0)) // Show every 10th label to avoid clutter\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"liquidity-price-label\")\n      .attr(\"x\", width + margin.right - 5)\n      .attr(\"y\", d => liquidityYScale(d.price0))\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"font-size\", \"8px\")\n      .attr(\"fill\", \"#666\")\n      .attr(\"text-anchor\", \"start\")\n      .text(d => d.price0.toFixed(0));\n\n  }, [data, liquidityData]);\n\n  return (\n    <svg\n      ref={svgRef}\n      width={800}\n      height={400}\n      style={{ border: '1px solid #ccc' }}\n    />\n  );\n};\n\nexport default D3Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}