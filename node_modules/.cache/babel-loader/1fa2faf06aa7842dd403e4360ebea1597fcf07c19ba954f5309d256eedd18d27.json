{"ast":null,"code":"var _jsxFileName = \"/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport PriceRange from './PriceRange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst D3Chart = ({\n  data,\n  liquidityData\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [initialViewSet, setInitialViewSet] = useState(false);\n  const [dragInProgress, setDragInProgress] = useState(false);\n\n  // Default state object\n  const defaultState = useRef({\n    zoomLevel: 1,\n    panY: 0,\n    minPrice: null,\n    maxPrice: null\n  });\n\n  // Main state object\n  const [chartState, setChartState] = useState({\n    zoomLevel: 1,\n    panY: 0,\n    minPrice: null,\n    maxPrice: null\n  });\n\n  // Destructure for easier access\n  const {\n    zoomLevel,\n    panY,\n    minPrice,\n    maxPrice\n  } = chartState;\n\n  // Brush extent as [min, max] array\n  const brushExtent = useMemo(() => {\n    if (minPrice !== null && maxPrice !== null) {\n      return [minPrice, maxPrice];\n    }\n    return null;\n  }, [minPrice, maxPrice]);\n  const setBrushExtent = extent => {\n    if (extent && extent.length === 2) {\n      setChartState(prev => ({\n        ...prev,\n        minPrice: extent[0],\n        maxPrice: extent[1]\n      }));\n    } else {\n      setChartState(prev => ({\n        ...prev,\n        minPrice: null,\n        maxPrice: null\n      }));\n    }\n  };\n\n  // Helper functions for updating individual state properties\n  const setMinPrice = price => setChartState(prev => ({\n    ...prev,\n    minPrice: price\n  }));\n  const setMaxPrice = price => setChartState(prev => ({\n    ...prev,\n    maxPrice: price\n  }));\n  const setZoomLevel = zoom => setChartState(prev => ({\n    ...prev,\n    zoomLevel: zoom\n  }));\n  const setPanY = pan => setChartState(prev => ({\n    ...prev,\n    panY: pan\n  }));\n\n  // Calculate yScale outside useEffect so it's available for Brush component\n  const yScale = useMemo(() => {\n    if (!data || !liquidityData) return null;\n    const allPrices = [...data.map(d => d.value), ...liquidityData.map(d => d.price0)];\n    const priceExtent = d3.extent(allPrices);\n    const priceRange = priceExtent[1] - priceExtent[0];\n    const zoomedRange = priceRange / zoomLevel;\n    const centerPrice = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n    return d3.scaleLinear().domain([centerPrice - zoomedRange / 2, centerPrice + zoomedRange / 2]).range([400 - 20 - 50, 0]); // [height, 0] for proper D3 coordinate system\n  }, [data, liquidityData, zoomLevel, panY]);\n  useEffect(() => {\n    if (!data || !liquidityData || !yScale) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"g\").remove(); // Only remove D3-created elements, not React elements\n\n    const margin = {\n      top: 20,\n      right: 120,\n      bottom: 50,\n      left: 80\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n    const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [...priceData.map(d => d.value), ...liquidityData.map(d => d.price0)];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime().domain(d3.extent(priceData, d => d.date)).range([0, width]);\n\n    // Line generator for price\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.value)).curve(d3.curveMonotoneX);\n\n    // Draw price line with conditional coloring\n    if (minPrice !== null && maxPrice !== null) {\n      // Draw segments with different colors based on price range\n      for (let i = 0; i < priceData.length - 1; i++) {\n        const currentPoint = priceData[i];\n        const nextPoint = priceData[i + 1];\n\n        // Check if current point is within range\n        const isInRange = currentPoint.value >= minPrice && currentPoint.value <= maxPrice;\n        const color = isInRange ? \"#d63384\" : \"#888888\"; // Dark pink or grey\n\n        // Draw line segment between current and next point\n        g.append(\"path\").datum([currentPoint, nextPoint]).attr(\"fill\", \"none\").attr(\"stroke\", color).attr(\"stroke-width\", 2).attr(\"d\", line).attr(\"class\", \"price-segment\");\n      }\n    } else {\n      // Draw single blue line when no range is selected\n      g.append(\"path\").datum(priceData).attr(\"fill\", \"none\").attr(\"stroke\", \"#2196F3\").attr(\"stroke-width\", 2).attr(\"d\", line).attr(\"class\", \"price-line\");\n    }\n\n    // Remove X and left Y axes completely\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right - 60; // Make room for 4-character price labels\n\n    // Use the same unified y scale for liquidity positioning\n    const liquidityYScale = yScale;\n\n    // Calculate current visible price range for filtering liquidity data\n    const currentPriceRange = priceExtent[1] - priceExtent[0];\n    const currentZoomedRange = currentPriceRange / zoomLevel;\n    const currentCenterPrice = priceExtent[0] + currentPriceRange * 0.5 + panY * currentPriceRange;\n    const visibleMinPrice = currentCenterPrice - currentZoomedRange / 2;\n    const visibleMaxPrice = currentCenterPrice + currentZoomedRange / 2;\n\n    // Filter liquidity data to only entries within visible price range\n    const visibleLiquidityData = liquidityData.filter(d => d.price0 >= visibleMinPrice && d.price0 <= visibleMaxPrice);\n\n    // X scale for liquidity amounts - scale based only on visible entries\n    const maxVisibleLiquidity = visibleLiquidityData.length > 0 ? d3.max(visibleLiquidityData, d => d.activeLiquidity) : d3.max(liquidityData, d => d.activeLiquidity); // Fallback if no visible data\n\n    const liquidityXScale = d3.scaleLinear().domain([0, maxVisibleLiquidity]).range([0, liquidityWidth]);\n\n    // Draw very thin grey horizontal liquidity bars using data join for better performance\n    const bars = g.selectAll(\".liquidity-bar\").data(liquidityData, d => d.price0); // Use price as key for consistent updates\n\n    // Remove bars that are no longer needed\n    bars.exit().transition().duration(150).style(\"opacity\", 0).remove();\n\n    // Add new bars\n    const enterBars = bars.enter().append(\"rect\").attr(\"class\", \"liquidity-bar\").attr(\"height\", 1).attr(\"opacity\", 0.7).attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity)).attr(\"y\", d => liquidityYScale(d.price0) - 0.5).attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n\n    // Update existing bars with smooth transitions and conditional coloring\n    bars.merge(enterBars).transition().duration(100).attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity)).attr(\"y\", d => liquidityYScale(d.price0) - 0.5).attr(\"width\", d => liquidityXScale(d.activeLiquidity)).attr(\"fill\", d => {\n      // Check if bar is within the price range - ensure proper number comparison\n      const price = parseFloat(d.price0);\n      const min = parseFloat(minPrice);\n      const max = parseFloat(maxPrice);\n      if (minPrice !== null && maxPrice !== null && price >= min && price <= max) {\n        return \"#d63384\"; // Dark pink for bars within range\n      }\n      return \"#888888\"; // Default grey\n    });\n\n    // Remove right Y-axis - keep only the price labels\n\n    // Add price labels in the reserved space to the right using data join\n    const labelData = liquidityData.filter((d, i) => i % 10 === 0); // Show every 10th label to avoid clutter\n    const labels = g.selectAll(\".liquidity-price-label\").data(labelData, d => d.price0); // Use price as key\n\n    // Remove labels that are no longer needed\n    labels.exit().transition().duration(150).style(\"opacity\", 0).remove();\n\n    // Add new labels\n    const enterLabels = labels.enter().append(\"text\").attr(\"class\", \"liquidity-price-label\").attr(\"font-size\", \"8px\").attr(\"fill\", \"#666\").attr(\"text-anchor\", \"start\").attr(\"dy\", \"0.35em\").attr(\"opacity\", 1).attr(\"x\", width + liquidityWidth + 15) // Position in reserved label space\n    .attr(\"y\", d => liquidityYScale(d.price0)).text(d => d.price0.toFixed(0));\n\n    // Update existing labels with smooth transitions\n    labels.merge(enterLabels).transition().duration(100).attr(\"x\", width + liquidityWidth + 15).attr(\"y\", d => liquidityYScale(d.price0));\n\n    // Draw price range visualization directly in the main chart\n    if (minPrice !== null && maxPrice !== null) {\n      // Remove existing range elements\n      g.selectAll(\".price-range-element\").remove();\n\n      // Draw transparent pink background between min and max - extend to cover full chart area\n      g.append('rect').attr('class', 'price-range-element price-range-bg').attr('x', -80) // Extend left to cover the margin area\n      .attr('y', yScale(maxPrice)).attr('width', 800) // Cover the entire SVG width\n      .attr('height', yScale(minPrice) - yScale(maxPrice)).attr('fill', '#ff69b4').attr('fill-opacity', 0.15).attr('cursor', 'move').call(d3.drag().on('start', function () {\n        setDragInProgress(true);\n      }).on('drag', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const draggedPrice = yScale.invert(newY);\n        const rangeSize = maxPrice - minPrice;\n\n        // Calculate new min/max based on dragged center position\n        const newMaxPrice = draggedPrice + rangeSize / 2;\n        const newMinPrice = draggedPrice - rangeSize / 2;\n\n        // Get data bounds to prevent dragging outside chart\n        const allPrices = [...data.map(d => d.value), ...liquidityData.map(d => d.price0)];\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n\n        // Only update if range stays within data bounds\n        if (newMinPrice >= dataMin && newMaxPrice <= dataMax) {\n          // Update background position\n          const newMaxY = yScale(newMaxPrice);\n          const newMinY = yScale(newMinPrice);\n          d3.select(this).attr('y', newMaxY).attr('height', newMinY - newMaxY);\n\n          // Update min line\n          g.select('.min-line').attr('y1', newMinY).attr('y2', newMinY);\n\n          // Update max line\n          g.select('.max-line').attr('y1', newMaxY).attr('y2', newMaxY);\n\n          // Update labels\n          g.select('.min-label').attr('y', newMinY - 5).text(`Min: ${newMinPrice.toFixed(0)}`);\n          g.select('.max-label').attr('y', newMaxY + 15).text(`Max: ${newMaxPrice.toFixed(0)}`);\n\n          // Update liquidity bar colors\n          g.selectAll('.liquidity-bar').attr('fill', d => {\n            const price = parseFloat(d.price0);\n            if (price >= newMinPrice && price <= newMaxPrice) {\n              return \"#d63384\";\n            }\n            return \"#888888\";\n          });\n\n          // Update price line segment colors\n          g.selectAll('.price-segment').attr('stroke', function () {\n            const datum = d3.select(this).datum();\n            if (datum && datum.length > 0) {\n              const value = datum[0].value;\n              return value >= newMinPrice && value <= newMaxPrice ? \"#d63384\" : \"#888888\";\n            }\n            return \"#888888\";\n          });\n        }\n      }).on('end', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const draggedPrice = yScale.invert(newY);\n        const rangeSize = maxPrice - minPrice;\n\n        // Calculate new min/max based on dragged center position\n        const newMaxPrice = draggedPrice + rangeSize / 2;\n        const newMinPrice = draggedPrice - rangeSize / 2;\n\n        // Get data bounds\n        const allPrices = [...data.map(d => d.value), ...liquidityData.map(d => d.price0)];\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n\n        // Only update state if range stays within data bounds\n        if (newMinPrice >= dataMin && newMaxPrice <= dataMax) {\n          setMinPrice(newMinPrice);\n          setMaxPrice(newMaxPrice);\n        }\n        setDragInProgress(false);\n      }));\n\n      // Draw min price line (solid) with drag behavior\n      g.append('line').attr('class', 'price-range-element min-line').attr('x1', -80) // Start from left margin\n      .attr('x2', 720) // Extend to right edge (800 - 80 = 720)\n      .attr('y1', yScale(minPrice)).attr('y2', yScale(minPrice)).attr('stroke', '#ff6b6b').attr('stroke-width', 4).attr('opacity', 0.9).attr('cursor', 'ns-resize').call(d3.drag().on('start', function () {\n        setDragInProgress(true);\n      }).on('drag', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const newPrice = yScale.invert(newY);\n\n        // Swap state immediately if needed\n        if (newPrice > maxPrice) {\n          // Min dragged above max - swap them immediately\n          setMinPrice(maxPrice);\n          setMaxPrice(newPrice);\n        } else {\n          // Normal case - just update min\n          setMinPrice(newPrice);\n        }\n      }).on('end', function (event) {\n        setDragInProgress(false);\n      }));\n\n      // Draw max price line (solid) with drag behavior\n      g.append('line').attr('class', 'price-range-element max-line').attr('x1', -80) // Start from left margin\n      .attr('x2', 720) // Extend to right edge (800 - 80 = 720)\n      .attr('y1', yScale(maxPrice)).attr('y2', yScale(maxPrice)).attr('stroke', '#4ecdc4').attr('stroke-width', 4).attr('opacity', 0.9).attr('cursor', 'ns-resize').call(d3.drag().on('start', function () {\n        setDragInProgress(true);\n      }).on('drag', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const newPrice = yScale.invert(newY);\n\n        // Swap state immediately if needed\n        if (newPrice < minPrice) {\n          // Max dragged below min - swap them immediately\n          setMaxPrice(minPrice);\n          setMinPrice(newPrice);\n        } else {\n          // Normal case - just update max\n          setMaxPrice(newPrice);\n        }\n      }).on('end', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const newPrice = yScale.invert(newY);\n\n        // Handle automatic swapping on drag end\n        if (newPrice < minPrice) {\n          // Dragged max below min - swap them\n          setMaxPrice(minPrice);\n          setMinPrice(newPrice);\n        } else {\n          // Normal case - just update max\n          setMaxPrice(newPrice);\n        }\n        setDragInProgress(false);\n      }));\n\n      // Add min price label\n      g.append('text').attr('class', 'price-range-element min-label').attr('x', 5).attr('y', yScale(minPrice) - 5).attr('font-size', '10px').attr('fill', '#ff6b6b').attr('font-weight', 'bold').text(`Min: ${minPrice.toFixed(0)}`);\n\n      // Add max price label\n      g.append('text').attr('class', 'price-range-element max-label').attr('x', 5).attr('y', yScale(maxPrice) + 15).attr('font-size', '10px').attr('fill', '#4ecdc4').attr('font-weight', 'bold').text(`Max: ${maxPrice.toFixed(0)}`);\n    }\n\n    // Setup wheel event handler\n    const handleWheel = event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Calculate current view bounds\n      const priceRange = priceExtent[1] - priceExtent[0];\n      const zoomedRange = priceRange / zoomLevel;\n      const currentCenter = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n      const currentMin = currentCenter - zoomedRange / 2;\n      const currentMax = currentCenter + zoomedRange / 2;\n\n      // Natural scroll sensitivity based on current view range\n      const scrollSensitivity = zoomedRange / 600; // Faster scrolling for larger ranges\n      const rawScrollAmount = event.deltaY * scrollSensitivity;\n\n      // Apply scroll (invert deltaY for natural direction)\n      const scrollAmount = rawScrollAmount / priceRange; // Normalize to pan range\n\n      setChartState(prev => {\n        const newPanY = prev.panY - scrollAmount;\n\n        // Dynamic bounds based on data and zoom level\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n        const halfZoomedRange = zoomedRange / 2;\n\n        // Calculate max pan bounds to keep view within data\n        const maxPanUp = (dataMax - halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        const maxPanDown = (dataMin + halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n\n        // Constrain to bounds\n        const constrainedPanY = Math.max(maxPanDown, Math.min(maxPanUp, newPanY));\n        return {\n          ...prev,\n          panY: constrainedPanY\n        };\n      });\n    };\n\n    // Add wheel event listener\n    const svgElement = svgRef.current;\n    if (svgElement) {\n      svgElement.addEventListener('wheel', handleWheel, {\n        passive: false\n      });\n      return () => svgElement.removeEventListener('wheel', handleWheel);\n    }\n  }, [data, liquidityData, zoomLevel, panY, yScale, minPrice, maxPrice]);\n\n  // Set reasonable initial view on first load\n  useEffect(() => {\n    if (!initialViewSet && data && liquidityData && liquidityData.length > 0) {\n      const allPrices = [...data.map(d => d.value), ...liquidityData.map(d => d.price0)];\n      const priceExtent = d3.extent(allPrices);\n      const priceRange = priceExtent[1] - priceExtent[0];\n\n      // Filter out extreme outliers for initial view - focus on middle 20% of liquidity\n      const liquidityPrices = liquidityData.map(d => d.price0).sort((a, b) => a - b);\n      const percentile20 = liquidityPrices[Math.floor(liquidityPrices.length * 0.2)];\n      const percentile80 = liquidityPrices[Math.floor(liquidityPrices.length * 0.8)];\n\n      // Set initial zoom to focus on the 20-80% range of liquidity with tighter view\n      const focusRange = percentile80 - percentile20;\n      const desiredZoom = Math.min(priceRange / (focusRange * 1), 25); // Show ~1x the focus range, max 25x zoom\n\n      // Center the view on the price data, not liquidity\n      const priceDataExtent = d3.extent(data.map(d => d.value));\n      const priceCenter = (priceDataExtent[0] + priceDataExtent[1]) / 2;\n      const originalCenter = priceExtent[0] + priceRange * 0.5;\n      const panOffset = (priceCenter - originalCenter) / priceRange;\n\n      // Set default brush range - use a smaller range around the price data center\n      const brushRangeSize = (priceDataExtent[1] - priceDataExtent[0]) * 0.4; // 40% of price data range\n      const defaultMinPrice = priceCenter - brushRangeSize / 2;\n      const defaultMaxPrice = priceCenter + brushRangeSize / 2;\n\n      // Update both current state and default state\n      const newDefaultState = {\n        zoomLevel: desiredZoom,\n        panY: panOffset,\n        minPrice: defaultMinPrice,\n        maxPrice: defaultMaxPrice\n      };\n      defaultState.current = newDefaultState;\n      setChartState(newDefaultState);\n      setInitialViewSet(true);\n    }\n  }, [data, liquidityData, initialViewSet]);\n  const handleZoomIn = () => {\n    setChartState(prev => ({\n      ...prev,\n      zoomLevel: Math.min(prev.zoomLevel * 1.3, 50)\n    }));\n  };\n  const handleZoomOut = () => {\n    setChartState(prev => ({\n      ...prev,\n      zoomLevel: Math.max(prev.zoomLevel / 1.3, 0.1)\n    }));\n  };\n  const handleResetZoom = () => {\n    setChartState(defaultState.current);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px',\n        background: '#f9f9f9',\n        padding: '12px',\n        borderRadius: '4px',\n        border: '1px solid #ddd',\n        display: 'flex',\n        gap: '20px',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '4px',\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: [\"Zoom: \", zoomLevel.toFixed(1), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '4px',\n            marginBottom: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomIn,\n            style: {\n              fontSize: '12px',\n              padding: '4px 8px'\n            },\n            children: \"Zoom In (+)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomOut,\n            style: {\n              fontSize: '12px',\n              padding: '4px 8px'\n            },\n            children: \"Zoom Out (-)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetZoom,\n            style: {\n              fontSize: '12px',\n              padding: '4px 8px'\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '10px',\n            color: '#666',\n            textAlign: 'center'\n          },\n          children: \"Scroll to pan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '4px',\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: \"Price Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            alignItems: 'center',\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontSize: '11px',\n                minWidth: '30px'\n              },\n              children: \"Min:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: minPrice || '',\n              onChange: e => setMinPrice(e.target.value ? parseFloat(e.target.value) : null),\n              style: {\n                fontSize: '11px',\n                padding: '4px 6px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                width: '90px'\n              },\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontSize: '11px',\n                minWidth: '30px'\n              },\n              children: \"Max:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxPrice || '',\n              onChange: e => setMaxPrice(e.target.value ? parseFloat(e.target.value) : null),\n              style: {\n                fontSize: '11px',\n                padding: '4px 6px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                width: '90px'\n              },\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setMinPrice(null);\n              setMaxPrice(null);\n            },\n            style: {\n              fontSize: '11px',\n              padding: '4px 8px',\n              backgroundColor: '#fff',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Clear Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: 800,\n        height: 400,\n        style: {\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 574,\n    columnNumber: 5\n  }, this);\n};\n_s(D3Chart, \"gv1kMaxSBp8XxXFyB0W8r4wRKY4=\");\n_c = D3Chart;\nexport default D3Chart;\nvar _c;\n$RefreshReg$(_c, \"D3Chart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","d3","PriceRange","jsxDEV","_jsxDEV","D3Chart","data","liquidityData","_s","svgRef","initialViewSet","setInitialViewSet","dragInProgress","setDragInProgress","defaultState","zoomLevel","panY","minPrice","maxPrice","chartState","setChartState","brushExtent","setBrushExtent","extent","length","prev","setMinPrice","price","setMaxPrice","setZoomLevel","zoom","setPanY","pan","yScale","allPrices","map","d","value","price0","priceExtent","priceRange","zoomedRange","centerPrice","scaleLinear","domain","range","svg","select","current","selectAll","remove","margin","top","right","bottom","left","width","height","g","append","attr","priceData","date","Date","time","xScale","scaleTime","line","x","y","curve","curveMonotoneX","i","currentPoint","nextPoint","isInRange","color","datum","liquidityWidth","liquidityYScale","currentPriceRange","currentZoomedRange","currentCenterPrice","visibleMinPrice","visibleMaxPrice","visibleLiquidityData","filter","maxVisibleLiquidity","max","activeLiquidity","liquidityXScale","bars","exit","transition","duration","style","enterBars","enter","merge","parseFloat","min","labelData","labels","enterLabels","text","toFixed","call","drag","on","event","newY","Math","draggedPrice","invert","rangeSize","newMaxPrice","newMinPrice","dataMin","dataMax","newMaxY","newMinY","newPrice","handleWheel","preventDefault","stopPropagation","currentCenter","currentMin","currentMax","scrollSensitivity","rawScrollAmount","deltaY","scrollAmount","newPanY","halfZoomedRange","maxPanUp","maxPanDown","constrainedPanY","svgElement","addEventListener","passive","removeEventListener","liquidityPrices","sort","a","b","percentile20","floor","percentile80","focusRange","desiredZoom","priceDataExtent","priceCenter","originalCenter","panOffset","brushRangeSize","defaultMinPrice","defaultMaxPrice","newDefaultState","handleZoomIn","handleZoomOut","handleResetZoom","children","marginBottom","background","padding","borderRadius","border","display","gap","alignItems","flexWrap","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","textAlign","minWidth","type","onChange","e","target","step","backgroundColor","cursor","position","ref","_c","$RefreshReg$"],"sources":["/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport PriceRange from './PriceRange';\n\nconst D3Chart = ({ data, liquidityData }) => {\n  const svgRef = useRef();\n  const [initialViewSet, setInitialViewSet] = useState(false);\n  const [dragInProgress, setDragInProgress] = useState(false);\n  \n  // Default state object\n  const defaultState = useRef({\n    zoomLevel: 1,\n    panY: 0,\n    minPrice: null,\n    maxPrice: null\n  });\n  \n  // Main state object\n  const [chartState, setChartState] = useState({\n    zoomLevel: 1,\n    panY: 0,\n    minPrice: null,\n    maxPrice: null\n  });\n  \n  // Destructure for easier access\n  const { zoomLevel, panY, minPrice, maxPrice } = chartState;\n  \n  // Brush extent as [min, max] array\n  const brushExtent = useMemo(() => {\n    if (minPrice !== null && maxPrice !== null) {\n      return [minPrice, maxPrice];\n    }\n    return null;\n  }, [minPrice, maxPrice]);\n  \n  const setBrushExtent = (extent) => {\n    if (extent && extent.length === 2) {\n      setChartState(prev => ({\n        ...prev,\n        minPrice: extent[0],\n        maxPrice: extent[1]\n      }));\n    } else {\n      setChartState(prev => ({\n        ...prev,\n        minPrice: null,\n        maxPrice: null\n      }));\n    }\n  };\n  \n  // Helper functions for updating individual state properties\n  const setMinPrice = (price) => setChartState(prev => ({ ...prev, minPrice: price }));\n  const setMaxPrice = (price) => setChartState(prev => ({ ...prev, maxPrice: price }));\n  const setZoomLevel = (zoom) => setChartState(prev => ({ ...prev, zoomLevel: zoom }));\n  const setPanY = (pan) => setChartState(prev => ({ ...prev, panY: pan }));\n\n  // Calculate yScale outside useEffect so it's available for Brush component\n  const yScale = useMemo(() => {\n    if (!data || !liquidityData) return null;\n    \n    const allPrices = [\n      ...data.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n    \n    const priceRange = priceExtent[1] - priceExtent[0];\n    const zoomedRange = priceRange / zoomLevel;\n    const centerPrice = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n    \n    return d3.scaleLinear()\n      .domain([\n        centerPrice - zoomedRange / 2,\n        centerPrice + zoomedRange / 2\n      ])\n      .range([400 - 20 - 50, 0]); // [height, 0] for proper D3 coordinate system\n  }, [data, liquidityData, zoomLevel, panY]);\n\n  useEffect(() => {\n    if (!data || !liquidityData || !yScale) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"g\").remove(); // Only remove D3-created elements, not React elements\n\n    const margin = { top: 20, right: 120, bottom: 50, left: 80 };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [\n      ...priceData.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(priceData, d => d.date))\n      .range([0, width]);\n\n    // Line generator for price\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.value))\n      .curve(d3.curveMonotoneX);\n\n    // Draw price line with conditional coloring\n    if (minPrice !== null && maxPrice !== null) {\n      // Draw segments with different colors based on price range\n      for (let i = 0; i < priceData.length - 1; i++) {\n        const currentPoint = priceData[i];\n        const nextPoint = priceData[i + 1];\n        \n        // Check if current point is within range\n        const isInRange = currentPoint.value >= minPrice && currentPoint.value <= maxPrice;\n        const color = isInRange ? \"#d63384\" : \"#888888\"; // Dark pink or grey\n        \n        // Draw line segment between current and next point\n        g.append(\"path\")\n          .datum([currentPoint, nextPoint])\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", color)\n          .attr(\"stroke-width\", 2)\n          .attr(\"d\", line)\n          .attr(\"class\", \"price-segment\");\n      }\n    } else {\n      // Draw single blue line when no range is selected\n      g.append(\"path\")\n        .datum(priceData)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#2196F3\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"d\", line)\n        .attr(\"class\", \"price-line\");\n    }\n\n    // Remove X and left Y axes completely\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right - 60; // Make room for 4-character price labels\n    \n    // Use the same unified y scale for liquidity positioning\n    const liquidityYScale = yScale;\n\n    // Calculate current visible price range for filtering liquidity data\n    const currentPriceRange = priceExtent[1] - priceExtent[0];\n    const currentZoomedRange = currentPriceRange / zoomLevel;\n    const currentCenterPrice = priceExtent[0] + currentPriceRange * 0.5 + panY * currentPriceRange;\n    const visibleMinPrice = currentCenterPrice - currentZoomedRange / 2;\n    const visibleMaxPrice = currentCenterPrice + currentZoomedRange / 2;\n\n    // Filter liquidity data to only entries within visible price range\n    const visibleLiquidityData = liquidityData.filter(d => \n      d.price0 >= visibleMinPrice && d.price0 <= visibleMaxPrice\n    );\n\n    // X scale for liquidity amounts - scale based only on visible entries\n    const maxVisibleLiquidity = visibleLiquidityData.length > 0 \n      ? d3.max(visibleLiquidityData, d => d.activeLiquidity)\n      : d3.max(liquidityData, d => d.activeLiquidity); // Fallback if no visible data\n\n    const liquidityXScale = d3.scaleLinear()\n      .domain([0, maxVisibleLiquidity])\n      .range([0, liquidityWidth]);\n\n    // Draw very thin grey horizontal liquidity bars using data join for better performance\n    const bars = g.selectAll(\".liquidity-bar\")\n      .data(liquidityData, d => d.price0); // Use price as key for consistent updates\n    \n    // Remove bars that are no longer needed\n    bars.exit()\n      .transition()\n      .duration(150)\n      .style(\"opacity\", 0)\n      .remove();\n    \n    // Add new bars\n    const enterBars = bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"liquidity-bar\")\n      .attr(\"height\", 1)\n      .attr(\"opacity\", 0.7)\n      .attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity))\n      .attr(\"y\", d => liquidityYScale(d.price0) - 0.5)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n    \n    // Update existing bars with smooth transitions and conditional coloring\n    bars.merge(enterBars)\n      .transition()\n      .duration(100)\n      .attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity))\n      .attr(\"y\", d => liquidityYScale(d.price0) - 0.5)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity))\n      .attr(\"fill\", d => {\n        // Check if bar is within the price range - ensure proper number comparison\n        const price = parseFloat(d.price0);\n        const min = parseFloat(minPrice);\n        const max = parseFloat(maxPrice);\n        \n        if (minPrice !== null && maxPrice !== null && \n            price >= min && price <= max) {\n          return \"#d63384\"; // Dark pink for bars within range\n        }\n        return \"#888888\"; // Default grey\n      });\n\n    // Remove right Y-axis - keep only the price labels\n\n    // Add price labels in the reserved space to the right using data join\n    const labelData = liquidityData.filter((d, i) => i % 10 === 0); // Show every 10th label to avoid clutter\n    const labels = g.selectAll(\".liquidity-price-label\")\n      .data(labelData, d => d.price0); // Use price as key\n    \n    // Remove labels that are no longer needed\n    labels.exit()\n      .transition()\n      .duration(150)\n      .style(\"opacity\", 0)\n      .remove();\n    \n    // Add new labels\n    const enterLabels = labels.enter()\n      .append(\"text\")\n      .attr(\"class\", \"liquidity-price-label\")\n      .attr(\"font-size\", \"8px\")\n      .attr(\"fill\", \"#666\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"opacity\", 1)\n      .attr(\"x\", width + liquidityWidth + 15) // Position in reserved label space\n      .attr(\"y\", d => liquidityYScale(d.price0))\n      .text(d => d.price0.toFixed(0));\n    \n    // Update existing labels with smooth transitions\n    labels.merge(enterLabels)\n      .transition()\n      .duration(100)\n      .attr(\"x\", width + liquidityWidth + 15)\n      .attr(\"y\", d => liquidityYScale(d.price0));\n\n    // Draw price range visualization directly in the main chart\n    if (minPrice !== null && maxPrice !== null) {\n      // Remove existing range elements\n      g.selectAll(\".price-range-element\").remove();\n      \n      // Draw transparent pink background between min and max - extend to cover full chart area\n      g.append('rect')\n        .attr('class', 'price-range-element price-range-bg')\n        .attr('x', -80) // Extend left to cover the margin area\n        .attr('y', yScale(maxPrice))\n        .attr('width', 800) // Cover the entire SVG width\n        .attr('height', yScale(minPrice) - yScale(maxPrice))\n        .attr('fill', '#ff69b4')\n        .attr('fill-opacity', 0.15)\n        .attr('cursor', 'move')\n        .call(d3.drag()\n          .on('start', function() {\n            setDragInProgress(true);\n          })\n          .on('drag', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const draggedPrice = yScale.invert(newY);\n            const rangeSize = maxPrice - minPrice;\n            \n            // Calculate new min/max based on dragged center position\n            const newMaxPrice = draggedPrice + rangeSize / 2;\n            const newMinPrice = draggedPrice - rangeSize / 2;\n            \n            // Get data bounds to prevent dragging outside chart\n            const allPrices = [\n              ...data.map(d => d.value),\n              ...liquidityData.map(d => d.price0)\n            ];\n            const dataMin = Math.min(...allPrices);\n            const dataMax = Math.max(...allPrices);\n            \n            // Only update if range stays within data bounds\n            if (newMinPrice >= dataMin && newMaxPrice <= dataMax) {\n              // Update background position\n              const newMaxY = yScale(newMaxPrice);\n              const newMinY = yScale(newMinPrice);\n              \n              d3.select(this)\n                .attr('y', newMaxY)\n                .attr('height', newMinY - newMaxY);\n              \n              // Update min line\n              g.select('.min-line')\n                .attr('y1', newMinY)\n                .attr('y2', newMinY);\n                \n              // Update max line\n              g.select('.max-line')\n                .attr('y1', newMaxY)\n                .attr('y2', newMaxY);\n                \n              // Update labels\n              g.select('.min-label')\n                .attr('y', newMinY - 5)\n                .text(`Min: ${newMinPrice.toFixed(0)}`);\n                \n              g.select('.max-label')\n                .attr('y', newMaxY + 15)\n                .text(`Max: ${newMaxPrice.toFixed(0)}`);\n                \n              // Update liquidity bar colors\n              g.selectAll('.liquidity-bar')\n                .attr('fill', d => {\n                  const price = parseFloat(d.price0);\n                  if (price >= newMinPrice && price <= newMaxPrice) {\n                    return \"#d63384\";\n                  }\n                  return \"#888888\";\n                });\n                \n              // Update price line segment colors\n              g.selectAll('.price-segment')\n                .attr('stroke', function() {\n                  const datum = d3.select(this).datum();\n                  if (datum && datum.length > 0) {\n                    const value = datum[0].value;\n                    return (value >= newMinPrice && value <= newMaxPrice) ? \"#d63384\" : \"#888888\";\n                  }\n                  return \"#888888\";\n                });\n            }\n          })\n          .on('end', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const draggedPrice = yScale.invert(newY);\n            const rangeSize = maxPrice - minPrice;\n            \n            // Calculate new min/max based on dragged center position\n            const newMaxPrice = draggedPrice + rangeSize / 2;\n            const newMinPrice = draggedPrice - rangeSize / 2;\n            \n            // Get data bounds\n            const allPrices = [\n              ...data.map(d => d.value),\n              ...liquidityData.map(d => d.price0)\n            ];\n            const dataMin = Math.min(...allPrices);\n            const dataMax = Math.max(...allPrices);\n            \n            // Only update state if range stays within data bounds\n            if (newMinPrice >= dataMin && newMaxPrice <= dataMax) {\n              setMinPrice(newMinPrice);\n              setMaxPrice(newMaxPrice);\n            }\n            \n            setDragInProgress(false);\n          })\n        );\n\n      // Draw min price line (solid) with drag behavior\n      g.append('line')\n        .attr('class', 'price-range-element min-line')\n        .attr('x1', -80) // Start from left margin\n        .attr('x2', 720) // Extend to right edge (800 - 80 = 720)\n        .attr('y1', yScale(minPrice))\n        .attr('y2', yScale(minPrice))\n        .attr('stroke', '#ff6b6b')\n        .attr('stroke-width', 4)\n        .attr('opacity', 0.9)\n        .attr('cursor', 'ns-resize')\n        .call(d3.drag()\n          .on('start', function() {\n            setDragInProgress(true);\n          })\n          .on('drag', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Swap state immediately if needed\n            if (newPrice > maxPrice) {\n              // Min dragged above max - swap them immediately\n              setMinPrice(maxPrice);\n              setMaxPrice(newPrice);\n            } else {\n              // Normal case - just update min\n              setMinPrice(newPrice);\n            }\n          })\n          .on('end', function(event) {\n            setDragInProgress(false);\n          })\n        );\n\n      // Draw max price line (solid) with drag behavior\n      g.append('line')\n        .attr('class', 'price-range-element max-line')\n        .attr('x1', -80) // Start from left margin\n        .attr('x2', 720) // Extend to right edge (800 - 80 = 720)\n        .attr('y1', yScale(maxPrice))\n        .attr('y2', yScale(maxPrice))\n        .attr('stroke', '#4ecdc4')\n        .attr('stroke-width', 4)\n        .attr('opacity', 0.9)\n        .attr('cursor', 'ns-resize')\n        .call(d3.drag()\n          .on('start', function() {\n            setDragInProgress(true);\n          })\n          .on('drag', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Swap state immediately if needed\n            if (newPrice < minPrice) {\n              // Max dragged below min - swap them immediately\n              setMaxPrice(minPrice);\n              setMinPrice(newPrice);\n            } else {\n              // Normal case - just update max\n              setMaxPrice(newPrice);\n            }\n          })\n          .on('end', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Handle automatic swapping on drag end\n            if (newPrice < minPrice) {\n              // Dragged max below min - swap them\n              setMaxPrice(minPrice);\n              setMinPrice(newPrice);\n            } else {\n              // Normal case - just update max\n              setMaxPrice(newPrice);\n            }\n            setDragInProgress(false);\n          })\n        );\n        \n      // Add min price label\n      g.append('text')\n        .attr('class', 'price-range-element min-label')\n        .attr('x', 5)\n        .attr('y', yScale(minPrice) - 5)\n        .attr('font-size', '10px')\n        .attr('fill', '#ff6b6b')\n        .attr('font-weight', 'bold')\n        .text(`Min: ${minPrice.toFixed(0)}`);\n        \n      // Add max price label\n      g.append('text')\n        .attr('class', 'price-range-element max-label')\n        .attr('x', 5)\n        .attr('y', yScale(maxPrice) + 15)\n        .attr('font-size', '10px')\n        .attr('fill', '#4ecdc4')\n        .attr('font-weight', 'bold')\n        .text(`Max: ${maxPrice.toFixed(0)}`);\n    }\n\n\n    // Setup wheel event handler\n    const handleWheel = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      // Calculate current view bounds\n      const priceRange = priceExtent[1] - priceExtent[0];\n      const zoomedRange = priceRange / zoomLevel;\n      const currentCenter = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n      const currentMin = currentCenter - zoomedRange / 2;\n      const currentMax = currentCenter + zoomedRange / 2;\n      \n      // Natural scroll sensitivity based on current view range\n      const scrollSensitivity = zoomedRange / 600; // Faster scrolling for larger ranges\n      const rawScrollAmount = event.deltaY * scrollSensitivity;\n      \n      // Apply scroll (invert deltaY for natural direction)\n      const scrollAmount = rawScrollAmount / priceRange; // Normalize to pan range\n      \n      setChartState(prev => {\n        const newPanY = prev.panY - scrollAmount;\n        \n        // Dynamic bounds based on data and zoom level\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n        const halfZoomedRange = zoomedRange / 2;\n        \n        // Calculate max pan bounds to keep view within data\n        const maxPanUp = (dataMax - halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        const maxPanDown = (dataMin + halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        \n        // Constrain to bounds\n        const constrainedPanY = Math.max(maxPanDown, Math.min(maxPanUp, newPanY));\n        \n        return { ...prev, panY: constrainedPanY };\n      });\n    };\n\n    // Add wheel event listener\n    const svgElement = svgRef.current;\n    if (svgElement) {\n      svgElement.addEventListener('wheel', handleWheel, { passive: false });\n      return () => svgElement.removeEventListener('wheel', handleWheel);\n    }\n\n  }, [data, liquidityData, zoomLevel, panY, yScale, minPrice, maxPrice]);\n\n  // Set reasonable initial view on first load\n  useEffect(() => {\n    if (!initialViewSet && data && liquidityData && liquidityData.length > 0) {\n      const allPrices = [\n        ...data.map(d => d.value),\n        ...liquidityData.map(d => d.price0)\n      ];\n      const priceExtent = d3.extent(allPrices);\n      const priceRange = priceExtent[1] - priceExtent[0];\n      \n      // Filter out extreme outliers for initial view - focus on middle 20% of liquidity\n      const liquidityPrices = liquidityData.map(d => d.price0).sort((a, b) => a - b);\n      const percentile20 = liquidityPrices[Math.floor(liquidityPrices.length * 0.2)];\n      const percentile80 = liquidityPrices[Math.floor(liquidityPrices.length * 0.8)];\n      \n      // Set initial zoom to focus on the 20-80% range of liquidity with tighter view\n      const focusRange = percentile80 - percentile20;\n      const desiredZoom = Math.min(priceRange / (focusRange * 1), 25); // Show ~1x the focus range, max 25x zoom\n      \n      // Center the view on the price data, not liquidity\n      const priceDataExtent = d3.extent(data.map(d => d.value));\n      const priceCenter = (priceDataExtent[0] + priceDataExtent[1]) / 2;\n      const originalCenter = priceExtent[0] + priceRange * 0.5;\n      const panOffset = (priceCenter - originalCenter) / priceRange;\n      \n      // Set default brush range - use a smaller range around the price data center\n      const brushRangeSize = (priceDataExtent[1] - priceDataExtent[0]) * 0.4; // 40% of price data range\n      const defaultMinPrice = priceCenter - brushRangeSize / 2;\n      const defaultMaxPrice = priceCenter + brushRangeSize / 2;\n      \n      // Update both current state and default state\n      const newDefaultState = {\n        zoomLevel: desiredZoom,\n        panY: panOffset,\n        minPrice: defaultMinPrice,\n        maxPrice: defaultMaxPrice\n      };\n      \n      defaultState.current = newDefaultState;\n      setChartState(newDefaultState);\n      \n      setInitialViewSet(true);\n    }\n  }, [data, liquidityData, initialViewSet]);\n\n  const handleZoomIn = () => {\n    setChartState(prev => ({ ...prev, zoomLevel: Math.min(prev.zoomLevel * 1.3, 50) }));\n  };\n\n  const handleZoomOut = () => {\n    setChartState(prev => ({ ...prev, zoomLevel: Math.max(prev.zoomLevel / 1.3, 0.1) }));\n  };\n\n  const handleResetZoom = () => {\n    setChartState(defaultState.current);\n  };\n\n  return (\n    <div>\n      {/* Controls Panel - Outside Chart */}\n      <div style={{ \n        marginBottom: '10px',\n        background: '#f9f9f9',\n        padding: '12px',\n        borderRadius: '4px',\n        border: '1px solid #ddd',\n        display: 'flex',\n        gap: '20px',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap'\n      }}>\n        {/* Zoom Controls */}\n        <div>\n          <div style={{ marginBottom: '4px', fontSize: '12px', fontWeight: 'bold' }}>\n            Zoom: {zoomLevel.toFixed(1)}x\n          </div>\n          <div style={{ display: 'flex', gap: '4px', marginBottom: '4px' }}>\n            <button onClick={handleZoomIn} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Zoom In (+)\n            </button>\n            <button onClick={handleZoomOut} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Zoom Out (-)\n            </button>\n            <button onClick={handleResetZoom} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Reset\n            </button>\n          </div>\n          <div style={{ fontSize: '10px', color: '#666', textAlign: 'center' }}>\n            Scroll to pan\n          </div>\n        </div>\n\n        {/* Price Range Controls */}\n        <div>\n          <div style={{ marginBottom: '4px', fontSize: '12px', fontWeight: 'bold' }}>\n            Price Range\n          </div>\n          <div style={{ display: 'flex', gap: '8px', alignItems: 'center', flexWrap: 'wrap' }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n              <label style={{ fontSize: '11px', minWidth: '30px' }}>Min:</label>\n              <input\n                type=\"number\"\n                value={minPrice || ''}\n                onChange={(e) => setMinPrice(e.target.value ? parseFloat(e.target.value) : null)}\n                style={{ \n                  fontSize: '11px', \n                  padding: '4px 6px', \n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  width: '90px'\n                }}\n                step=\"0.01\"\n              />\n            </div>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n              <label style={{ fontSize: '11px', minWidth: '30px' }}>Max:</label>\n              <input\n                type=\"number\"\n                value={maxPrice || ''}\n                onChange={(e) => setMaxPrice(e.target.value ? parseFloat(e.target.value) : null)}\n                style={{ \n                  fontSize: '11px', \n                  padding: '4px 6px', \n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  width: '90px'\n                }}\n                step=\"0.01\"\n              />\n            </div>\n            <button \n              onClick={() => { setMinPrice(null); setMaxPrice(null); }}\n              style={{ \n                fontSize: '11px', \n                padding: '4px 8px', \n                backgroundColor: '#fff',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              Clear Range\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div style={{ position: 'relative' }}>\n        <svg\n        ref={svgRef}\n        width={800}\n        height={400}\n        style={{ border: '1px solid #ccc' }}\n        >\n        </svg>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default D3Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}