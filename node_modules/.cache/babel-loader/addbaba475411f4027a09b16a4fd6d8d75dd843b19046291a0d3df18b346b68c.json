{"ast":null,"code":"var _jsxFileName = \"/Users/phil.london/Projects/tradingview-chart-mvp/src/Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = ({\n  data,\n  liquidityData\n}) => {\n  _s();\n  const chartContainerRef = useRef();\n  const chart = useRef();\n  const lineSeries = useRef();\n  const liquiditySeries = useRef();\n  useEffect(() => {\n    chart.current = createChart(chartContainerRef.current, {\n      width: 800,\n      height: 400,\n      layout: {\n        background: {\n          color: '#ffffff'\n        },\n        textColor: '#333333'\n      },\n      grid: {\n        vertLines: {\n          color: '#f0f0f0'\n        },\n        horzLines: {\n          color: '#f0f0f0'\n        }\n      },\n      crosshair: {\n        mode: 0\n      },\n      rightPriceScale: {\n        borderColor: '#cccccc',\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.1\n        },\n        priceFormat: {\n          type: 'price',\n          precision: 2,\n          minMove: 0.01\n        }\n      },\n      leftPriceScale: {\n        borderColor: '#cccccc',\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.1\n        },\n        priceFormat: {\n          type: 'price',\n          precision: 8,\n          minMove: 0.00000001\n        }\n      },\n      timeScale: {\n        borderColor: '#cccccc'\n      }\n    });\n    lineSeries.current = chart.current.addLineSeries({\n      color: '#2196F3',\n      lineWidth: 2,\n      priceScaleId: 'left'\n    });\n    liquiditySeries.current = chart.current.addLineSeries({\n      color: '#FF6B35',\n      lineWidth: 0,\n      lineVisible: false,\n      pointMarkersVisible: true,\n      crosshairMarkerVisible: true,\n      priceScaleId: 'right'\n    });\n    return () => chart.current.remove();\n  }, []);\n  useEffect(() => {\n    if (lineSeries.current && data) {\n      lineSeries.current.setData(data);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (liquiditySeries.current && liquidityData && data && data.length > 0) {\n      const lastTime = data[data.length - 1].time;\n      const liquidityPoints = liquidityData.map((item, index) => ({\n        time: lastTime + index + 1,\n        value: item.price0\n      }));\n      liquiditySeries.current.setData(liquidityPoints);\n    }\n  }, [liquidityData, data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chartContainerRef,\n    style: {\n      width: '800px',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 10\n  }, this);\n};\n_s(Chart, \"DJucYWOeCNmgfKvZJppOg1QTss4=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useEffect","useRef","createChart","jsxDEV","_jsxDEV","Chart","data","liquidityData","_s","chartContainerRef","chart","lineSeries","liquiditySeries","current","width","height","layout","background","color","textColor","grid","vertLines","horzLines","crosshair","mode","rightPriceScale","borderColor","scaleMargins","top","bottom","priceFormat","type","precision","minMove","leftPriceScale","timeScale","addLineSeries","lineWidth","priceScaleId","lineVisible","pointMarkersVisible","crosshairMarkerVisible","remove","setData","length","lastTime","time","liquidityPoints","map","item","index","value","price0","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phil.london/Projects/tradingview-chart-mvp/src/Chart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { createChart } from 'lightweight-charts';\n\nconst Chart = ({ data, liquidityData }) => {\n  const chartContainerRef = useRef();\n  const chart = useRef();\n  const lineSeries = useRef();\n  const liquiditySeries = useRef();\n\n  useEffect(() => {\n    chart.current = createChart(chartContainerRef.current, {\n      width: 800,\n      height: 400,\n      layout: {\n        background: {\n          color: '#ffffff',\n        },\n        textColor: '#333333',\n      },\n      grid: {\n        vertLines: {\n          color: '#f0f0f0',\n        },\n        horzLines: {\n          color: '#f0f0f0',\n        },\n      },\n      crosshair: {\n        mode: 0,\n      },\n      rightPriceScale: {\n        borderColor: '#cccccc',\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.1,\n        },\n        priceFormat: {\n          type: 'price',\n          precision: 2,\n          minMove: 0.01,\n        },\n      },\n      leftPriceScale: {\n        borderColor: '#cccccc',\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.1,\n        },\n        priceFormat: {\n          type: 'price',\n          precision: 8,\n          minMove: 0.00000001,\n        },\n      },\n      timeScale: {\n        borderColor: '#cccccc',\n      },\n    });\n\n    lineSeries.current = chart.current.addLineSeries({\n      color: '#2196F3',\n      lineWidth: 2,\n      priceScaleId: 'left',\n    });\n\n    liquiditySeries.current = chart.current.addLineSeries({\n      color: '#FF6B35',\n      lineWidth: 0,\n      lineVisible: false,\n      pointMarkersVisible: true,\n      crosshairMarkerVisible: true,\n      priceScaleId: 'right',\n    });\n\n    return () => chart.current.remove();\n  }, []);\n\n  useEffect(() => {\n    if (lineSeries.current && data) {\n      lineSeries.current.setData(data);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (liquiditySeries.current && liquidityData && data && data.length > 0) {\n      const lastTime = data[data.length - 1].time;\n      const liquidityPoints = liquidityData.map((item, index) => ({\n        time: lastTime + index + 1,\n        value: item.price0\n      }));\n      liquiditySeries.current.setData(liquidityPoints);\n    }\n  }, [liquidityData, data]);\n\n  return <div ref={chartContainerRef} style={{ width: '800px', height: '400px' }} />;\n};\n\nexport default Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}