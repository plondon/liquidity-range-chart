{"ast":null,"code":"var _jsxFileName = \"/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport PriceRange from './PriceRange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst D3Chart = ({\n  data,\n  liquidityData\n}) => {\n  _s();\n  const svgRef = useRef();\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [panY, setPanY] = useState(0);\n  const [initialViewSet, setInitialViewSet] = useState(false);\n  const [initialZoom, setInitialZoom] = useState(1);\n  const [initialPan, setInitialPan] = useState(0);\n\n  // Brush state for price range selection\n  const [minPrice, setMinPrice] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(null);\n  const [dragInProgress, setDragInProgress] = useState(false);\n\n  // Brush extent as [min, max] array\n  const brushExtent = useMemo(() => {\n    if (minPrice !== null && maxPrice !== null) {\n      return [minPrice, maxPrice];\n    }\n    return null;\n  }, [minPrice, maxPrice]);\n  const setBrushExtent = extent => {\n    if (extent && extent.length === 2) {\n      setMinPrice(extent[0]);\n      setMaxPrice(extent[1]);\n    } else {\n      setMinPrice(null);\n      setMaxPrice(null);\n    }\n  };\n\n  // Calculate yScale outside useEffect so it's available for Brush component\n  const yScale = useMemo(() => {\n    if (!data || !liquidityData) return null;\n    const allPrices = [...data.map(d => d.value), ...liquidityData.map(d => d.price0)];\n    const priceExtent = d3.extent(allPrices);\n    const priceRange = priceExtent[1] - priceExtent[0];\n    const zoomedRange = priceRange / zoomLevel;\n    const centerPrice = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n    return d3.scaleLinear().domain([centerPrice - zoomedRange / 2, centerPrice + zoomedRange / 2]).range([400 - 20 - 50, 0]); // [height, 0] for proper D3 coordinate system\n  }, [data, liquidityData, zoomLevel, panY]);\n  useEffect(() => {\n    if (!data || !liquidityData || !yScale) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"g\").remove(); // Only remove D3-created elements, not React elements\n\n    const margin = {\n      top: 20,\n      right: 120,\n      bottom: 50,\n      left: 80\n    };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n    const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [...priceData.map(d => d.value), ...liquidityData.map(d => d.price0)];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime().domain(d3.extent(priceData, d => d.date)).range([0, width]);\n\n    // Line generator for price\n    const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.value)).curve(d3.curveMonotoneX);\n\n    // Draw price line\n    g.append(\"path\").datum(priceData).attr(\"fill\", \"none\").attr(\"stroke\", \"#2196F3\").attr(\"stroke-width\", 2).attr(\"d\", line);\n\n    // Remove X and left Y axes completely\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right - 60; // Make room for 4-character price labels\n\n    // Use the same unified y scale for liquidity positioning\n    const liquidityYScale = yScale;\n\n    // Calculate current visible price range for filtering liquidity data\n    const currentPriceRange = priceExtent[1] - priceExtent[0];\n    const currentZoomedRange = currentPriceRange / zoomLevel;\n    const currentCenterPrice = priceExtent[0] + currentPriceRange * 0.5 + panY * currentPriceRange;\n    const visibleMinPrice = currentCenterPrice - currentZoomedRange / 2;\n    const visibleMaxPrice = currentCenterPrice + currentZoomedRange / 2;\n\n    // Filter liquidity data to only entries within visible price range\n    const visibleLiquidityData = liquidityData.filter(d => d.price0 >= visibleMinPrice && d.price0 <= visibleMaxPrice);\n\n    // X scale for liquidity amounts - scale based only on visible entries\n    const maxVisibleLiquidity = visibleLiquidityData.length > 0 ? d3.max(visibleLiquidityData, d => d.activeLiquidity) : d3.max(liquidityData, d => d.activeLiquidity); // Fallback if no visible data\n\n    const liquidityXScale = d3.scaleLinear().domain([0, maxVisibleLiquidity]).range([0, liquidityWidth]);\n\n    // Draw very thin grey horizontal liquidity bars using data join for better performance\n    const bars = g.selectAll(\".liquidity-bar\").data(liquidityData, d => d.price0); // Use price as key for consistent updates\n\n    // Remove bars that are no longer needed\n    bars.exit().transition().duration(150).style(\"opacity\", 0).remove();\n\n    // Add new bars\n    const enterBars = bars.enter().append(\"rect\").attr(\"class\", \"liquidity-bar\").attr(\"height\", 1).attr(\"opacity\", 0.7).attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity)).attr(\"y\", d => liquidityYScale(d.price0) - 0.5).attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n\n    // Update existing bars with smooth transitions and conditional coloring\n    bars.merge(enterBars).transition().duration(100).attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity)).attr(\"y\", d => liquidityYScale(d.price0) - 0.5).attr(\"width\", d => liquidityXScale(d.activeLiquidity)).attr(\"fill\", d => {\n      // Check if bar is within the price range - ensure proper number comparison\n      const price = parseFloat(d.price0);\n      const min = parseFloat(minPrice);\n      const max = parseFloat(maxPrice);\n      if (minPrice !== null && maxPrice !== null && price >= min && price <= max) {\n        return \"#d63384\"; // Dark pink for bars within range\n      }\n      return \"#888888\"; // Default grey\n    });\n\n    // Remove right Y-axis - keep only the price labels\n\n    // Add price labels in the reserved space to the right using data join\n    const labelData = liquidityData.filter((d, i) => i % 10 === 0); // Show every 10th label to avoid clutter\n    const labels = g.selectAll(\".liquidity-price-label\").data(labelData, d => d.price0); // Use price as key\n\n    // Remove labels that are no longer needed\n    labels.exit().transition().duration(150).style(\"opacity\", 0).remove();\n\n    // Add new labels\n    const enterLabels = labels.enter().append(\"text\").attr(\"class\", \"liquidity-price-label\").attr(\"font-size\", \"8px\").attr(\"fill\", \"#666\").attr(\"text-anchor\", \"start\").attr(\"dy\", \"0.35em\").attr(\"opacity\", 1).attr(\"x\", width + liquidityWidth + 15) // Position in reserved label space\n    .attr(\"y\", d => liquidityYScale(d.price0)).text(d => d.price0.toFixed(0));\n\n    // Update existing labels with smooth transitions\n    labels.merge(enterLabels).transition().duration(100).attr(\"x\", width + liquidityWidth + 15).attr(\"y\", d => liquidityYScale(d.price0));\n\n    // Draw price range visualization directly in the main chart\n    if (minPrice !== null && maxPrice !== null) {\n      // Remove existing range elements\n      g.selectAll(\".price-range-element\").remove();\n\n      // Draw transparent pink background between min and max - extend to cover full chart area\n      g.append('rect').attr('class', 'price-range-element price-range-bg').attr('x', -80) // Extend left to cover the margin area\n      .attr('y', yScale(maxPrice)).attr('width', 800) // Cover the entire SVG width\n      .attr('height', yScale(minPrice) - yScale(maxPrice)).attr('fill', '#ff69b4').attr('fill-opacity', 0.15);\n\n      // Draw min price line (solid) with drag behavior\n      g.append('line').attr('class', 'price-range-element min-line').attr('x1', -80) // Start from left margin\n      .attr('x2', 720) // Extend to right edge (800 - 80 = 720)\n      .attr('y1', yScale(minPrice)).attr('y2', yScale(minPrice)).attr('stroke', '#ff6b6b').attr('stroke-width', 4).attr('opacity', 0.9).attr('cursor', 'ns-resize').call(d3.drag().on('start', function () {\n        setDragInProgress(true);\n      }).on('drag', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const newPrice = yScale.invert(newY);\n\n        // Ensure min doesn't go above max\n        if (newPrice < maxPrice) {\n          // Only update visual position during drag\n          d3.select(this).attr('y1', newY).attr('y2', newY);\n\n          // Update background rectangle - recalculate both y and height\n          const maxY = yScale(maxPrice);\n          g.select('.price-range-bg').attr('y', maxY).attr('height', newY - maxY);\n\n          // Update label\n          g.select('.price-range-element.min-label').attr('y', newY - 5).text(`Min: ${newPrice.toFixed(0)}`);\n\n          // Update liquidity bar colors in real-time\n          g.selectAll('.liquidity-bar').attr('fill', d => {\n            if (d.price0 >= newPrice && d.price0 <= maxPrice) {\n              return \"#d63384\"; // Dark pink for bars within range\n            }\n            return \"#888888\"; // Default grey\n          });\n        }\n      }).on('end', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const newPrice = yScale.invert(newY);\n\n        // Only update state on drag end\n        if (newPrice < maxPrice) {\n          setMinPrice(newPrice);\n        }\n        setDragInProgress(false);\n      }));\n\n      // Draw max price line (solid) with drag behavior\n      g.append('line').attr('class', 'price-range-element max-line').attr('x1', -80) // Start from left margin\n      .attr('x2', 720) // Extend to right edge (800 - 80 = 720)\n      .attr('y1', yScale(maxPrice)).attr('y2', yScale(maxPrice)).attr('stroke', '#4ecdc4').attr('stroke-width', 4).attr('opacity', 0.9).attr('cursor', 'ns-resize').call(d3.drag().on('start', function () {\n        setDragInProgress(true);\n      }).on('drag', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const newPrice = yScale.invert(newY);\n\n        // Ensure max doesn't go below min\n        if (newPrice > minPrice) {\n          // Only update visual position during drag\n          d3.select(this).attr('y1', newY).attr('y2', newY);\n\n          // Update background rectangle - recalculate both y and height\n          const minY = yScale(minPrice);\n          g.select('.price-range-bg').attr('y', newY).attr('height', minY - newY);\n\n          // Update label\n          g.select('.price-range-element.max-label').attr('y', newY + 15).text(`Max: ${newPrice.toFixed(0)}`);\n\n          // Update liquidity bar colors in real-time\n          g.selectAll('.liquidity-bar').attr('fill', d => {\n            if (d.price0 >= minPrice && d.price0 <= newPrice) {\n              return \"#d63384\"; // Dark pink for bars within range\n            }\n            return \"#888888\"; // Default grey\n          });\n        }\n      }).on('end', function (event) {\n        const newY = Math.max(0, Math.min(height, event.y));\n        const newPrice = yScale.invert(newY);\n\n        // Only update state on drag end\n        if (newPrice > minPrice) {\n          setMaxPrice(newPrice);\n        }\n        setDragInProgress(false);\n      }));\n\n      // Add min price label\n      g.append('text').attr('class', 'price-range-element min-label').attr('x', 5).attr('y', yScale(minPrice) - 5).attr('font-size', '10px').attr('fill', '#ff6b6b').attr('font-weight', 'bold').text(`Min: ${minPrice.toFixed(0)}`);\n\n      // Add max price label\n      g.append('text').attr('class', 'price-range-element max-label').attr('x', 5).attr('y', yScale(maxPrice) + 15).attr('font-size', '10px').attr('fill', '#4ecdc4').attr('font-weight', 'bold').text(`Max: ${maxPrice.toFixed(0)}`);\n    }\n\n    // Setup wheel event handler\n    const handleWheel = event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Calculate current view bounds\n      const priceRange = priceExtent[1] - priceExtent[0];\n      const zoomedRange = priceRange / zoomLevel;\n      const currentCenter = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n      const currentMin = currentCenter - zoomedRange / 2;\n      const currentMax = currentCenter + zoomedRange / 2;\n\n      // Natural scroll sensitivity based on current view range\n      const scrollSensitivity = zoomedRange / 600; // Faster scrolling for larger ranges\n      const rawScrollAmount = event.deltaY * scrollSensitivity;\n\n      // Apply scroll (invert deltaY for natural direction)\n      const scrollAmount = rawScrollAmount / priceRange; // Normalize to pan range\n\n      setPanY(prev => {\n        const newPanY = prev - scrollAmount;\n\n        // Dynamic bounds based on data and zoom level\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n        const halfZoomedRange = zoomedRange / 2;\n\n        // Calculate max pan bounds to keep view within data\n        const maxPanUp = (dataMax - halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        const maxPanDown = (dataMin + halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n\n        // Constrain to bounds\n        return Math.max(maxPanDown, Math.min(maxPanUp, newPanY));\n      });\n    };\n\n    // Add wheel event listener\n    const svgElement = svgRef.current;\n    if (svgElement) {\n      svgElement.addEventListener('wheel', handleWheel, {\n        passive: false\n      });\n      return () => svgElement.removeEventListener('wheel', handleWheel);\n    }\n  }, [data, liquidityData, zoomLevel, panY, yScale, minPrice, maxPrice]);\n\n  // Set reasonable initial view on first load\n  useEffect(() => {\n    if (!initialViewSet && data && liquidityData && liquidityData.length > 0) {\n      const allPrices = [...data.map(d => d.value), ...liquidityData.map(d => d.price0)];\n      const priceExtent = d3.extent(allPrices);\n      const priceRange = priceExtent[1] - priceExtent[0];\n\n      // Filter out extreme outliers for initial view - focus on middle 20% of liquidity\n      const liquidityPrices = liquidityData.map(d => d.price0).sort((a, b) => a - b);\n      const percentile20 = liquidityPrices[Math.floor(liquidityPrices.length * 0.2)];\n      const percentile80 = liquidityPrices[Math.floor(liquidityPrices.length * 0.8)];\n\n      // Set initial zoom to focus on the 20-80% range of liquidity with tighter view\n      const focusRange = percentile80 - percentile20;\n      const desiredZoom = Math.min(priceRange / (focusRange * 1), 25); // Show ~1x the focus range, max 25x zoom\n\n      // Center the view on the price data, not liquidity\n      const priceDataExtent = d3.extent(data.map(d => d.value));\n      const priceCenter = (priceDataExtent[0] + priceDataExtent[1]) / 2;\n      const originalCenter = priceExtent[0] + priceRange * 0.5;\n      const panOffset = (priceCenter - originalCenter) / priceRange;\n      setZoomLevel(desiredZoom);\n      setPanY(panOffset);\n      setInitialZoom(desiredZoom);\n      setInitialPan(panOffset);\n\n      // Set default brush range - use a smaller range around the price data center\n      const brushRangeSize = (priceDataExtent[1] - priceDataExtent[0]) * 0.4; // 40% of price data range\n      const defaultMinPrice = priceCenter - brushRangeSize / 2;\n      const defaultMaxPrice = priceCenter + brushRangeSize / 2;\n      setMinPrice(defaultMinPrice);\n      setMaxPrice(defaultMaxPrice);\n      setInitialViewSet(true);\n    }\n  }, [data, liquidityData, initialViewSet]);\n  const handleZoomIn = () => {\n    setZoomLevel(prev => Math.min(prev * 1.3, 50));\n  };\n  const handleZoomOut = () => {\n    setZoomLevel(prev => Math.max(prev / 1.3, 0.1));\n  };\n  const handleResetZoom = () => {\n    setZoomLevel(initialZoom);\n    setPanY(initialPan);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px',\n        background: '#f9f9f9',\n        padding: '12px',\n        borderRadius: '4px',\n        border: '1px solid #ddd',\n        display: 'flex',\n        gap: '20px',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '4px',\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: [\"Zoom: \", zoomLevel.toFixed(1), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '4px',\n            marginBottom: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomIn,\n            style: {\n              fontSize: '12px',\n              padding: '4px 8px'\n            },\n            children: \"Zoom In (+)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleZoomOut,\n            style: {\n              fontSize: '12px',\n              padding: '4px 8px'\n            },\n            children: \"Zoom Out (-)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetZoom,\n            style: {\n              fontSize: '12px',\n              padding: '4px 8px'\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '10px',\n            color: '#666',\n            textAlign: 'center'\n          },\n          children: \"Scroll to pan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '4px',\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          children: \"Price Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '8px',\n            alignItems: 'center',\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontSize: '11px',\n                minWidth: '30px'\n              },\n              children: \"Min:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: minPrice || '',\n              onChange: e => setMinPrice(e.target.value ? parseFloat(e.target.value) : null),\n              style: {\n                fontSize: '11px',\n                padding: '4px 6px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                width: '90px'\n              },\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontSize: '11px',\n                minWidth: '30px'\n              },\n              children: \"Max:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: maxPrice || '',\n              onChange: e => setMaxPrice(e.target.value ? parseFloat(e.target.value) : null),\n              style: {\n                fontSize: '11px',\n                padding: '4px 6px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                width: '90px'\n              },\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setMinPrice(null);\n              setMaxPrice(null);\n            },\n            style: {\n              fontSize: '11px',\n              padding: '4px 8px',\n              backgroundColor: '#fff',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Clear Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: 800,\n        height: 400,\n        style: {\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n};\n_s(D3Chart, \"sicnZuDb4x999BxHJP1dUYfvo4o=\");\n_c = D3Chart;\nexport default D3Chart;\nvar _c;\n$RefreshReg$(_c, \"D3Chart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useMemo","d3","PriceRange","jsxDEV","_jsxDEV","D3Chart","data","liquidityData","_s","svgRef","zoomLevel","setZoomLevel","panY","setPanY","initialViewSet","setInitialViewSet","initialZoom","setInitialZoom","initialPan","setInitialPan","minPrice","setMinPrice","maxPrice","setMaxPrice","dragInProgress","setDragInProgress","brushExtent","setBrushExtent","extent","length","yScale","allPrices","map","d","value","price0","priceExtent","priceRange","zoomedRange","centerPrice","scaleLinear","domain","range","svg","select","current","selectAll","remove","margin","top","right","bottom","left","width","height","g","append","attr","priceData","date","Date","time","xScale","scaleTime","line","x","y","curve","curveMonotoneX","datum","liquidityWidth","liquidityYScale","currentPriceRange","currentZoomedRange","currentCenterPrice","visibleMinPrice","visibleMaxPrice","visibleLiquidityData","filter","maxVisibleLiquidity","max","activeLiquidity","liquidityXScale","bars","exit","transition","duration","style","enterBars","enter","merge","price","parseFloat","min","labelData","i","labels","enterLabels","text","toFixed","call","drag","on","event","newY","Math","newPrice","invert","maxY","minY","handleWheel","preventDefault","stopPropagation","currentCenter","currentMin","currentMax","scrollSensitivity","rawScrollAmount","deltaY","scrollAmount","prev","newPanY","dataMin","dataMax","halfZoomedRange","maxPanUp","maxPanDown","svgElement","addEventListener","passive","removeEventListener","liquidityPrices","sort","a","b","percentile20","floor","percentile80","focusRange","desiredZoom","priceDataExtent","priceCenter","originalCenter","panOffset","brushRangeSize","defaultMinPrice","defaultMaxPrice","handleZoomIn","handleZoomOut","handleResetZoom","children","marginBottom","background","padding","borderRadius","border","display","gap","alignItems","flexWrap","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","textAlign","minWidth","type","onChange","e","target","step","backgroundColor","cursor","position","ref","_c","$RefreshReg$"],"sources":["/Users/phil.london/Projects/tradingview-chart-mvp/src/D3Chart.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport * as d3 from 'd3';\nimport PriceRange from './PriceRange';\n\nconst D3Chart = ({ data, liquidityData }) => {\n  const svgRef = useRef();\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [panY, setPanY] = useState(0);\n  const [initialViewSet, setInitialViewSet] = useState(false);\n  const [initialZoom, setInitialZoom] = useState(1);\n  const [initialPan, setInitialPan] = useState(0);\n  \n  // Brush state for price range selection\n  const [minPrice, setMinPrice] = useState(null);\n  const [maxPrice, setMaxPrice] = useState(null);\n  const [dragInProgress, setDragInProgress] = useState(false);\n  \n  // Brush extent as [min, max] array\n  const brushExtent = useMemo(() => {\n    if (minPrice !== null && maxPrice !== null) {\n      return [minPrice, maxPrice];\n    }\n    return null;\n  }, [minPrice, maxPrice]);\n  \n  const setBrushExtent = (extent) => {\n    if (extent && extent.length === 2) {\n      setMinPrice(extent[0]);\n      setMaxPrice(extent[1]);\n    } else {\n      setMinPrice(null);\n      setMaxPrice(null);\n    }\n  };\n\n  // Calculate yScale outside useEffect so it's available for Brush component\n  const yScale = useMemo(() => {\n    if (!data || !liquidityData) return null;\n    \n    const allPrices = [\n      ...data.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n    \n    const priceRange = priceExtent[1] - priceExtent[0];\n    const zoomedRange = priceRange / zoomLevel;\n    const centerPrice = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n    \n    return d3.scaleLinear()\n      .domain([\n        centerPrice - zoomedRange / 2,\n        centerPrice + zoomedRange / 2\n      ])\n      .range([400 - 20 - 50, 0]); // [height, 0] for proper D3 coordinate system\n  }, [data, liquidityData, zoomLevel, panY]);\n\n  useEffect(() => {\n    if (!data || !liquidityData || !yScale) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"g\").remove(); // Only remove D3-created elements, not React elements\n\n    const margin = { top: 20, right: 120, bottom: 50, left: 80 };\n    const width = 800 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Convert timestamps to dates for price data\n    const priceData = data.map(d => ({\n      date: new Date(d.time * 1000),\n      value: d.value\n    }));\n\n    // Unified price scale encompassing both price data and liquidity data\n    const allPrices = [\n      ...priceData.map(d => d.value),\n      ...liquidityData.map(d => d.price0)\n    ];\n    const priceExtent = d3.extent(allPrices);\n\n    // Scales for price line chart\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(priceData, d => d.date))\n      .range([0, width]);\n\n    // Line generator for price\n    const line = d3.line()\n      .x(d => xScale(d.date))\n      .y(d => yScale(d.value))\n      .curve(d3.curveMonotoneX);\n\n    // Draw price line\n    g.append(\"path\")\n      .datum(priceData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#2196F3\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"d\", line);\n\n    // Remove X and left Y axes completely\n\n    // Right side liquidity chart - inspired by Uniswap's approach\n    const liquidityWidth = margin.right - 60; // Make room for 4-character price labels\n    \n    // Use the same unified y scale for liquidity positioning\n    const liquidityYScale = yScale;\n\n    // Calculate current visible price range for filtering liquidity data\n    const currentPriceRange = priceExtent[1] - priceExtent[0];\n    const currentZoomedRange = currentPriceRange / zoomLevel;\n    const currentCenterPrice = priceExtent[0] + currentPriceRange * 0.5 + panY * currentPriceRange;\n    const visibleMinPrice = currentCenterPrice - currentZoomedRange / 2;\n    const visibleMaxPrice = currentCenterPrice + currentZoomedRange / 2;\n\n    // Filter liquidity data to only entries within visible price range\n    const visibleLiquidityData = liquidityData.filter(d => \n      d.price0 >= visibleMinPrice && d.price0 <= visibleMaxPrice\n    );\n\n    // X scale for liquidity amounts - scale based only on visible entries\n    const maxVisibleLiquidity = visibleLiquidityData.length > 0 \n      ? d3.max(visibleLiquidityData, d => d.activeLiquidity)\n      : d3.max(liquidityData, d => d.activeLiquidity); // Fallback if no visible data\n\n    const liquidityXScale = d3.scaleLinear()\n      .domain([0, maxVisibleLiquidity])\n      .range([0, liquidityWidth]);\n\n    // Draw very thin grey horizontal liquidity bars using data join for better performance\n    const bars = g.selectAll(\".liquidity-bar\")\n      .data(liquidityData, d => d.price0); // Use price as key for consistent updates\n    \n    // Remove bars that are no longer needed\n    bars.exit()\n      .transition()\n      .duration(150)\n      .style(\"opacity\", 0)\n      .remove();\n    \n    // Add new bars\n    const enterBars = bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"liquidity-bar\")\n      .attr(\"height\", 1)\n      .attr(\"opacity\", 0.7)\n      .attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity))\n      .attr(\"y\", d => liquidityYScale(d.price0) - 0.5)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity));\n    \n    // Update existing bars with smooth transitions and conditional coloring\n    bars.merge(enterBars)\n      .transition()\n      .duration(100)\n      .attr(\"x\", d => width + 10 + liquidityWidth - liquidityXScale(d.activeLiquidity))\n      .attr(\"y\", d => liquidityYScale(d.price0) - 0.5)\n      .attr(\"width\", d => liquidityXScale(d.activeLiquidity))\n      .attr(\"fill\", d => {\n        // Check if bar is within the price range - ensure proper number comparison\n        const price = parseFloat(d.price0);\n        const min = parseFloat(minPrice);\n        const max = parseFloat(maxPrice);\n        \n        if (minPrice !== null && maxPrice !== null && \n            price >= min && price <= max) {\n          return \"#d63384\"; // Dark pink for bars within range\n        }\n        return \"#888888\"; // Default grey\n      });\n\n    // Remove right Y-axis - keep only the price labels\n\n    // Add price labels in the reserved space to the right using data join\n    const labelData = liquidityData.filter((d, i) => i % 10 === 0); // Show every 10th label to avoid clutter\n    const labels = g.selectAll(\".liquidity-price-label\")\n      .data(labelData, d => d.price0); // Use price as key\n    \n    // Remove labels that are no longer needed\n    labels.exit()\n      .transition()\n      .duration(150)\n      .style(\"opacity\", 0)\n      .remove();\n    \n    // Add new labels\n    const enterLabels = labels.enter()\n      .append(\"text\")\n      .attr(\"class\", \"liquidity-price-label\")\n      .attr(\"font-size\", \"8px\")\n      .attr(\"fill\", \"#666\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"opacity\", 1)\n      .attr(\"x\", width + liquidityWidth + 15) // Position in reserved label space\n      .attr(\"y\", d => liquidityYScale(d.price0))\n      .text(d => d.price0.toFixed(0));\n    \n    // Update existing labels with smooth transitions\n    labels.merge(enterLabels)\n      .transition()\n      .duration(100)\n      .attr(\"x\", width + liquidityWidth + 15)\n      .attr(\"y\", d => liquidityYScale(d.price0));\n\n    // Draw price range visualization directly in the main chart\n    if (minPrice !== null && maxPrice !== null) {\n      // Remove existing range elements\n      g.selectAll(\".price-range-element\").remove();\n      \n      // Draw transparent pink background between min and max - extend to cover full chart area\n      g.append('rect')\n        .attr('class', 'price-range-element price-range-bg')\n        .attr('x', -80) // Extend left to cover the margin area\n        .attr('y', yScale(maxPrice))\n        .attr('width', 800) // Cover the entire SVG width\n        .attr('height', yScale(minPrice) - yScale(maxPrice))\n        .attr('fill', '#ff69b4')\n        .attr('fill-opacity', 0.15);\n\n      // Draw min price line (solid) with drag behavior\n      g.append('line')\n        .attr('class', 'price-range-element min-line')\n        .attr('x1', -80) // Start from left margin\n        .attr('x2', 720) // Extend to right edge (800 - 80 = 720)\n        .attr('y1', yScale(minPrice))\n        .attr('y2', yScale(minPrice))\n        .attr('stroke', '#ff6b6b')\n        .attr('stroke-width', 4)\n        .attr('opacity', 0.9)\n        .attr('cursor', 'ns-resize')\n        .call(d3.drag()\n          .on('start', function() {\n            setDragInProgress(true);\n          })\n          .on('drag', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Ensure min doesn't go above max\n            if (newPrice < maxPrice) {\n              // Only update visual position during drag\n              d3.select(this)\n                .attr('y1', newY)\n                .attr('y2', newY);\n              \n              // Update background rectangle - recalculate both y and height\n              const maxY = yScale(maxPrice);\n              g.select('.price-range-bg')\n                .attr('y', maxY)\n                .attr('height', newY - maxY);\n                \n              // Update label\n              g.select('.price-range-element.min-label')\n                .attr('y', newY - 5)\n                .text(`Min: ${newPrice.toFixed(0)}`);\n                \n              // Update liquidity bar colors in real-time\n              g.selectAll('.liquidity-bar')\n                .attr('fill', d => {\n                  if (d.price0 >= newPrice && d.price0 <= maxPrice) {\n                    return \"#d63384\"; // Dark pink for bars within range\n                  }\n                  return \"#888888\"; // Default grey\n                });\n            }\n          })\n          .on('end', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Only update state on drag end\n            if (newPrice < maxPrice) {\n              setMinPrice(newPrice);\n            }\n            setDragInProgress(false);\n          })\n        );\n\n      // Draw max price line (solid) with drag behavior\n      g.append('line')\n        .attr('class', 'price-range-element max-line')\n        .attr('x1', -80) // Start from left margin\n        .attr('x2', 720) // Extend to right edge (800 - 80 = 720)\n        .attr('y1', yScale(maxPrice))\n        .attr('y2', yScale(maxPrice))\n        .attr('stroke', '#4ecdc4')\n        .attr('stroke-width', 4)\n        .attr('opacity', 0.9)\n        .attr('cursor', 'ns-resize')\n        .call(d3.drag()\n          .on('start', function() {\n            setDragInProgress(true);\n          })\n          .on('drag', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Ensure max doesn't go below min\n            if (newPrice > minPrice) {\n              // Only update visual position during drag\n              d3.select(this)\n                .attr('y1', newY)\n                .attr('y2', newY);\n                \n              // Update background rectangle - recalculate both y and height\n              const minY = yScale(minPrice);\n              g.select('.price-range-bg')\n                .attr('y', newY)\n                .attr('height', minY - newY);\n                \n              // Update label\n              g.select('.price-range-element.max-label')\n                .attr('y', newY + 15)\n                .text(`Max: ${newPrice.toFixed(0)}`);\n                \n              // Update liquidity bar colors in real-time\n              g.selectAll('.liquidity-bar')\n                .attr('fill', d => {\n                  if (d.price0 >= minPrice && d.price0 <= newPrice) {\n                    return \"#d63384\"; // Dark pink for bars within range\n                  }\n                  return \"#888888\"; // Default grey\n                });\n            }\n          })\n          .on('end', function(event) {\n            const newY = Math.max(0, Math.min(height, event.y));\n            const newPrice = yScale.invert(newY);\n            \n            // Only update state on drag end\n            if (newPrice > minPrice) {\n              setMaxPrice(newPrice);\n            }\n            setDragInProgress(false);\n          })\n        );\n        \n      // Add min price label\n      g.append('text')\n        .attr('class', 'price-range-element min-label')\n        .attr('x', 5)\n        .attr('y', yScale(minPrice) - 5)\n        .attr('font-size', '10px')\n        .attr('fill', '#ff6b6b')\n        .attr('font-weight', 'bold')\n        .text(`Min: ${minPrice.toFixed(0)}`);\n        \n      // Add max price label\n      g.append('text')\n        .attr('class', 'price-range-element max-label')\n        .attr('x', 5)\n        .attr('y', yScale(maxPrice) + 15)\n        .attr('font-size', '10px')\n        .attr('fill', '#4ecdc4')\n        .attr('font-weight', 'bold')\n        .text(`Max: ${maxPrice.toFixed(0)}`);\n    }\n\n\n    // Setup wheel event handler\n    const handleWheel = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      // Calculate current view bounds\n      const priceRange = priceExtent[1] - priceExtent[0];\n      const zoomedRange = priceRange / zoomLevel;\n      const currentCenter = priceExtent[0] + priceRange * 0.5 + panY * priceRange;\n      const currentMin = currentCenter - zoomedRange / 2;\n      const currentMax = currentCenter + zoomedRange / 2;\n      \n      // Natural scroll sensitivity based on current view range\n      const scrollSensitivity = zoomedRange / 600; // Faster scrolling for larger ranges\n      const rawScrollAmount = event.deltaY * scrollSensitivity;\n      \n      // Apply scroll (invert deltaY for natural direction)\n      const scrollAmount = rawScrollAmount / priceRange; // Normalize to pan range\n      \n      setPanY(prev => {\n        const newPanY = prev - scrollAmount;\n        \n        // Dynamic bounds based on data and zoom level\n        const dataMin = Math.min(...allPrices);\n        const dataMax = Math.max(...allPrices);\n        const halfZoomedRange = zoomedRange / 2;\n        \n        // Calculate max pan bounds to keep view within data\n        const maxPanUp = (dataMax - halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        const maxPanDown = (dataMin + halfZoomedRange - (priceExtent[0] + priceRange * 0.5)) / priceRange;\n        \n        // Constrain to bounds\n        return Math.max(maxPanDown, Math.min(maxPanUp, newPanY));\n      });\n    };\n\n    // Add wheel event listener\n    const svgElement = svgRef.current;\n    if (svgElement) {\n      svgElement.addEventListener('wheel', handleWheel, { passive: false });\n      return () => svgElement.removeEventListener('wheel', handleWheel);\n    }\n\n  }, [data, liquidityData, zoomLevel, panY, yScale, minPrice, maxPrice]);\n\n  // Set reasonable initial view on first load\n  useEffect(() => {\n    if (!initialViewSet && data && liquidityData && liquidityData.length > 0) {\n      const allPrices = [\n        ...data.map(d => d.value),\n        ...liquidityData.map(d => d.price0)\n      ];\n      const priceExtent = d3.extent(allPrices);\n      const priceRange = priceExtent[1] - priceExtent[0];\n      \n      // Filter out extreme outliers for initial view - focus on middle 20% of liquidity\n      const liquidityPrices = liquidityData.map(d => d.price0).sort((a, b) => a - b);\n      const percentile20 = liquidityPrices[Math.floor(liquidityPrices.length * 0.2)];\n      const percentile80 = liquidityPrices[Math.floor(liquidityPrices.length * 0.8)];\n      \n      // Set initial zoom to focus on the 20-80% range of liquidity with tighter view\n      const focusRange = percentile80 - percentile20;\n      const desiredZoom = Math.min(priceRange / (focusRange * 1), 25); // Show ~1x the focus range, max 25x zoom\n      \n      // Center the view on the price data, not liquidity\n      const priceDataExtent = d3.extent(data.map(d => d.value));\n      const priceCenter = (priceDataExtent[0] + priceDataExtent[1]) / 2;\n      const originalCenter = priceExtent[0] + priceRange * 0.5;\n      const panOffset = (priceCenter - originalCenter) / priceRange;\n      \n      setZoomLevel(desiredZoom);\n      setPanY(panOffset);\n      setInitialZoom(desiredZoom);\n      setInitialPan(panOffset);\n      \n      // Set default brush range - use a smaller range around the price data center\n      const brushRangeSize = (priceDataExtent[1] - priceDataExtent[0]) * 0.4; // 40% of price data range\n      const defaultMinPrice = priceCenter - brushRangeSize / 2;\n      const defaultMaxPrice = priceCenter + brushRangeSize / 2;\n      setMinPrice(defaultMinPrice);\n      setMaxPrice(defaultMaxPrice);\n      \n      setInitialViewSet(true);\n    }\n  }, [data, liquidityData, initialViewSet]);\n\n  const handleZoomIn = () => {\n    setZoomLevel(prev => Math.min(prev * 1.3, 50));\n  };\n\n  const handleZoomOut = () => {\n    setZoomLevel(prev => Math.max(prev / 1.3, 0.1));\n  };\n\n  const handleResetZoom = () => {\n    setZoomLevel(initialZoom);\n    setPanY(initialPan);\n  };\n\n  return (\n    <div>\n      {/* Controls Panel - Outside Chart */}\n      <div style={{ \n        marginBottom: '10px',\n        background: '#f9f9f9',\n        padding: '12px',\n        borderRadius: '4px',\n        border: '1px solid #ddd',\n        display: 'flex',\n        gap: '20px',\n        alignItems: 'flex-start',\n        flexWrap: 'wrap'\n      }}>\n        {/* Zoom Controls */}\n        <div>\n          <div style={{ marginBottom: '4px', fontSize: '12px', fontWeight: 'bold' }}>\n            Zoom: {zoomLevel.toFixed(1)}x\n          </div>\n          <div style={{ display: 'flex', gap: '4px', marginBottom: '4px' }}>\n            <button onClick={handleZoomIn} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Zoom In (+)\n            </button>\n            <button onClick={handleZoomOut} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Zoom Out (-)\n            </button>\n            <button onClick={handleResetZoom} style={{ fontSize: '12px', padding: '4px 8px' }}>\n              Reset\n            </button>\n          </div>\n          <div style={{ fontSize: '10px', color: '#666', textAlign: 'center' }}>\n            Scroll to pan\n          </div>\n        </div>\n\n        {/* Price Range Controls */}\n        <div>\n          <div style={{ marginBottom: '4px', fontSize: '12px', fontWeight: 'bold' }}>\n            Price Range\n          </div>\n          <div style={{ display: 'flex', gap: '8px', alignItems: 'center', flexWrap: 'wrap' }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n              <label style={{ fontSize: '11px', minWidth: '30px' }}>Min:</label>\n              <input\n                type=\"number\"\n                value={minPrice || ''}\n                onChange={(e) => setMinPrice(e.target.value ? parseFloat(e.target.value) : null)}\n                style={{ \n                  fontSize: '11px', \n                  padding: '4px 6px', \n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  width: '90px'\n                }}\n                step=\"0.01\"\n              />\n            </div>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n              <label style={{ fontSize: '11px', minWidth: '30px' }}>Max:</label>\n              <input\n                type=\"number\"\n                value={maxPrice || ''}\n                onChange={(e) => setMaxPrice(e.target.value ? parseFloat(e.target.value) : null)}\n                style={{ \n                  fontSize: '11px', \n                  padding: '4px 6px', \n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  width: '90px'\n                }}\n                step=\"0.01\"\n              />\n            </div>\n            <button \n              onClick={() => { setMinPrice(null); setMaxPrice(null); }}\n              style={{ \n                fontSize: '11px', \n                padding: '4px 8px', \n                backgroundColor: '#fff',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              Clear Range\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div style={{ position: 'relative' }}>\n        <svg\n        ref={svgRef}\n        width={800}\n        height={400}\n        style={{ border: '1px solid #ccc' }}\n        >\n        </svg>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default D3Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}